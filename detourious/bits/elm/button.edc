group { name: "elm/button/base/default";
   alias: "elm/button/base/naviframe/back_btn/default";
   alias: "elm/button/base/naviframe/back_btn/pager";
#define ICON     1
#define LABEL    2
#define MASK     3
#define DISABLE  4
   script {
      public btmode;
      public eval_mode(m) {
         new m1 = m & MASK;
         new d = m & DISABLE;
         if (m1 == (ICON | LABEL)) {
            if (!d) {
               set_state(PART:"elm.swallow.content", "visible", 0.0);
               set_state(PART:"sizer.content", "visible", 0.0);
               set_state(PART:"elm.text", "visible", 0.0);
               set_state(PART:"icon_clip", "default", 0.0);
               set_state(PART:"event", "default", 0.0);
               set_state(PART:"enabled_button", "default", 0.0);
               set_state(PART:"shadow", "default", 0.0);
               set_state(PART:"shadow_overlay", "default", 0.0);
            } else {
               set_state(PART:"elm.swallow.content", "visible", 0.0);
               set_state(PART:"sizer.content", "visible", 0.0);
               set_state(PART:"elm.text", "disabled_visible", 0.0);
               set_state(PART:"icon_clip", "disabled", 0.0);
               set_state(PART:"event", "disabled", 0.0);
               set_state(PART:"enabled_button", "disabled", 0.0);
               set_state(PART:"shadow", "disabled", 0.0);
               set_state(PART:"shadow_overlay", "disabled", 0.0);
               
            }
         } else if (m1 == (ICON)) {
            if (!d) {
               set_state(PART:"elm.swallow.content", "icononly", 0.0);
               set_state(PART:"sizer.content", "icononly", 0.0);
               set_state(PART:"elm.text", "default", 0.0);
               set_state(PART:"icon_clip", "default", 0.0);
               set_state(PART:"event", "default", 0.0);
               set_state(PART:"enabled_button", "default", 0.0);
               set_state(PART:"shadow", "default", 0.0);
               set_state(PART:"shadow_overlay", "default", 0.0);
            } else {
               set_state(PART:"elm.swallow.content", "icononly", 0.0);
               set_state(PART:"sizer.content", "icononly", 0.0);
               set_state(PART:"elm.text", "default", 0.0);
               set_state(PART:"icon_clip", "disabled", 0.0);
               set_state(PART:"event", "disabled", 0.0);
               set_state(PART:"enabled_button", "disabled", 0.0);
               set_state(PART:"shadow", "disabled", 0.0);
               set_state(PART:"shadow_overlay", "disabled", 0.0);
            }
         } else if (m1 == (LABEL)) {
            if (!d) {
               set_state(PART:"elm.swallow.content", "default", 0.0);
               set_state(PART:"sizer.content", "default", 0.0);
               set_state(PART:"elm.text", "textonly", 0.0);
               set_state(PART:"icon_clip", "default", 0.0);
               set_state(PART:"event", "default", 0.0);
               set_state(PART:"enabled_button", "default", 0.0);
               set_state(PART:"shadow", "default", 0.0);
               set_state(PART:"shadow_overlay", "default", 0.0);
            } else {
               set_state(PART:"elm.swallow.content", "default", 0.0);
               set_state(PART:"sizer.content", "default", 0.0);
               set_state(PART:"elm.text", "disabled_textonly", 0.0);
               set_state(PART:"icon_clip", "disabled", 0.0);
               set_state(PART:"event", "disabled", 0.0);
               set_state(PART:"enabled_button", "disabled", 0.0);
               set_state(PART:"shadow", "disabled", 0.0);
               set_state(PART:"shadow_overlay", "disabled", 0.0);
            }
         } else {
            if (!d) {
               set_state(PART:"elm.swallow.content", "default", 0.0);
               set_state(PART:"sizer.content", "default", 0.0);
               //set_state(PART:"elm.text", "icononly", 0.0);
               set_state(PART:"icon_clip", "default", 0.0);
               set_state(PART:"event", "default", 0.0);
               set_state(PART:"enabled_button", "default", 0.0);
               set_state(PART:"enabled_button", "disabled", 0.0);
               set_state(PART:"shadow", "default", 0.0);
               set_state(PART:"shadow_overlay", "default", 0.0);
            } else {
               set_state(PART:"elm.swallow.content", "default", 0.0);
               set_state(PART:"sizer.content", "default", 0.0);
               //set_state(PART:"elm.text", "icononly", 0.0);
               set_state(PART:"icon_clip", "disabled", 0.0);
               set_state(PART:"event", "disabled", 0.0);
               set_state(PART:"enabled_button", "disabled", 0.0);
               set_state(PART:"shadow", "disabled", 0.0);
               set_state(PART:"shadow_overlay", "disabled", 0.0);
            }
         }
      }
   }
   parts {
      image { "base"; nomouse;
         desc { "default";
            image.normal: "images/button_im0.png";
            image.border: 7 7 7 7;
            min: 0 26;
            rel1.offset: 3 3;
            rel2.offset: -4 -5;
            //rel1.offset: 1 1;
            //rel2.offset: -2 -2;
            fill.smooth: 0;
            color_class: "dialog_base";
         }
         desc { "clicked";
            inherit: "default";
         }
         desc { "disabled";
			inherit: "default";
	     } 
      }
      image { "enabled_button"; nomouse;
			clip_to: "disabled_button";
			desc { "default";
				min: 44 24;
				image.normal: "images/button_im1.png";
				image.border: 7 7 7 7;
				fill.smooth: 0;
				rel1 { 
					to: "button_clip"; 
				}
				rel2 { 
					to: "button_clip"; 
				}
			}
			desc { "clicked";
				inherit: "default";
			}

			desc { "disabled";
				inherit: "default";
				color: 255 255 255 128;
			}
	  }
	  image { "shadow"; nomouse;
		   clip_to: "button_clip";
		   desc { "default";
				min: 44 24;
				color: 255 255 255 0;
				image.normal: "images/button_im4.png";
				image.border: 6 6 13 6;
				fill.smooth: 0;
				rel1 { 
					to: "button_clip"; 
				}
				rel2 { 
					to: "button_clip";
					offset: -1 -2;
				}
			}
			desc { "clicked";
				inherit: "default";
				color: 255 255 255 200;
			}

			desc { "disabled";
				inherit: "default";
				visible: 0;
			}
			
	  }
	  image { "shadow_overlay"; nomouse;
			clip_to: "button_clip";
			desc { "default";
				min: 44 24;
				color: 255 255 255 0;
				image.normal: "images/button_im5.png";
				image.border: 6 6 6 13;
				rel1 { 
					to: "button_clip"; 
				}
				rel2 { 
					to: "button_clip"; 
				}
			}
			description { "clicked";
				inherit: "default";
				color: 255 255 255 255;
			}

			description { "disabled";
				inherit: "default";
				visible: 0;
			}
	  }
      rect { "icon_clip";
         desc { "default";
         }
         desc { "disabled";
            inherit: "default";
            color: 255 255 255 64;
         }
      }
      rect { "button_clip"; nomouse;
		  desc { "default";
				color: 255 255 255 255;

				rel1 { 
					to: "base"; 
					relative: 0.0 0.0; 
					offset: 1 1; 
				}

				rel2 { 
					to: "base"; 
					relative: 1.0 1.0; 
					offset: -2 -2; 
				}
			}

			desc{ "disabled";
				inherit: "default" 0.0;
				color: 255 255 255 0;
			}
	  }
	  rect { "disabled_button";
		  clip_to: "button_clip";
		  desc { "default";
				min: 44 24;
				color: 255 255 255 255;
			}

		  desc { "disabled";
				inherit: "default" 0.0;
				color: 150 150 150 128;
			}
	  }
      swallow { "elm.swallow.content"; nomouse;
         clip_to: "icon_clip";
         desc { "default";
            fixed: 1 0;
            align: 0.0 0.5;
            rel1.offset: 7 6;
            rel1.to: "base";
            rel2.relative: 0.0 1.0;
            rel2.offset: 3 -7;
            rel2.to: "base";
            visible: 0;
         }
         desc { "visible";
            inherit: "default";
            fixed: 1 0;
            aspect: 1.0 1.0;
            visible: 1;
         }
         desc { "icononly";
            inherit: "default";
            fixed: 0 0;
            align: 0.5 0.5;
            rel2.relative: 1.0 1.0;
            rel2.offset: -7 -8;
            visible: 1;
         }
      }
      text { "sizer.content"; nomouse;
         scale: 1;
         desc { "default";
            visible: 0;
            text { font: FN; size: 10;
               min: 0 0;
               text_class: "button";
            }
         }
         desc { "visible";
            inherit: "default";
            rel1.to: "elm.swallow.content";
            rel2.to: "elm.swallow.content";
            text {
               min: 1 1;
               ellipsis: -1;
               text: "M";
            }
         }
         desc { "icononly";
            inherit: "default";
            rel1.to: "elm.swallow.content";
            rel2.to: "elm.swallow.content";
            text {
               min: 1 1;
               ellipsis: -1;
               text: "M";
            }
         }
      }
      text { "elm.text"; nomouse;
         effect: SHADOW;
         scale: 1;
         desc { "default";
            rel1.offset: 4 6;
            rel1.relative: 1.0 0.0;
            rel1.to_x: "elm.swallow.content";
            rel1.to_y: "base";
            rel2.offset: -10 -4;
            rel2.to: "base";
            TEXT_COLOR;
            text { font: FN; size: 9;
               align: 0.5 0.5;
               min: 0 0;
               text_class: "button";
            }
            visible: 0;
            fixed: 1 1;
         }
         desc { "visible";
            inherit: "default";
            rel1.offset: 2 5;
            text.min: 1 1;
            text.ellipsis: -1;
            visible: 1;
            fixed: 0 0;
         }
         desc { "textonly";
            inherit: "default";
            text.min: 1 1;
            text.ellipsis: -1;
            visible: 1;
            fixed: 0 0;
         }
         desc { "disabled_visible";
            inherit: "default";
            rel1.offset: 2 5;
            color: 0 0 0 128;
			color3: 0 0 0 0;
            text.min: 1 1;
            text.ellipsis: -1;
            visible: 1;
            fixed: 0 0;
         }
         desc { "disabled_textonly";
            inherit: "default";
            color: 128 128 128 255;
			color3: 170 168 169 0;
            text.min: 1 1;
            text.ellipsis: -1;
            visible: 1;
            fixed: 0 0;
         }
      }
      rect { "event";
         desc { "default";
            color: 0 0 0 0;
         }
         desc { "disabled";
            inherit: "default";
            visible: 0;
         }
      }
   }
   programs {
      program {
         signal: "mouse,down,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,press" "elm";
         after: "button_click_anim";
      }
      program { name: "button_click_anim";
         action: STATE_SET "clicked" 0.0;
         target: "shadow";
         target: "shadow_overlay";
      }
      program { name: "button_unclick";
         signal: "mouse,up,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,unpress" "elm";
         after: "button_unclick_anim";
      }
      program { name: "button_unclick_anim";
         action: STATE_SET "default" 0.0;
         target: "shadow";
         target: "shadow_overlay";
      }
      program { name: "buttonactivate";
         signal: "elm,anim,activate"; source: "elm";
         action: STATE_SET "clicked" 0.0;
         target: "enabled_button";
         target: "shadow";
         target: "shadow_overlay";
         after: "button_unpressed_anim";
      }
      program { name: "button_unpressed_anim";
         action: STATE_SET "default" 0.0;
         in: 0.5 0.0;
         target: "shadow";
         target: "shadow_overlay";
      }
      program {
         signal: "mouse,clicked,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,click" "elm";
      }
      program { name: "button_text_visible";
         signal: "elm,state,text,visible"; source: "elm";
         script {
            new m = get_int(btmode);
            m |= LABEL; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { name: "button_text_hidden";
         signal: "elm,state,text,hidden"; source: "elm";
         script {
            new m = get_int(btmode);
            m &= ~LABEL; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { name: "button_icon_visible";
         signal: "elm,state,icon,visible"; source: "elm";
         script {
            new m = get_int(btmode);
            m |= ICON; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { name: "button_icon_hidden";
         signal: "elm,state,icon,hidden"; source: "elm";
         action:  STATE_SET "default" 0.0;
         script {
            new m = get_int(btmode);
            m &= ~ICON; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { name: "button_state_disabled";
         signal: "elm,state,disabled"; source: "elm";
         script {
            new m = get_int(btmode);
            m |= DISABLE; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { name: "button_state_enabled";
         signal: "elm,state,enabled"; source: "elm";
         script {
            new m = get_int(btmode);
            m &= ~DISABLE; set_int(btmode, m);
            eval_mode(m);
         }
      }
   }
#undef ICON
#undef LABEL
#undef MASK
#undef DISABLE
}

group { name: "elm/button/base/anchor";
#define ICON     1
#define LABEL    2
#define MASK     3
#define DISABLE  4
   script {
      public btmode;
      public eval_mode(m) {
         new m1 = m & MASK;
         new d = m & DISABLE;
         if (m1 == (ICON | LABEL)) {
            if (!d) {
               set_state(PART:"elm.swallow.content", "visible", 0.0);
               set_state(PART:"sizer.content", "visible", 0.0);
               set_state(PART:"elm.text", "visible", 0.0);
               set_state(PART:"icon_clip", "default", 0.0);
               set_state(PART:"event", "default", 0.0);
               set_state(PART:"enabled_button", "default", 0.0);
               set_state(PART:"shadow", "default", 0.0);
               set_state(PART:"shadow_overlay", "default", 0.0);
            } else {
               set_state(PART:"elm.swallow.content", "visible", 0.0);
               set_state(PART:"sizer.content", "visible", 0.0);
               set_state(PART:"elm.text", "disabled_visible", 0.0);
               set_state(PART:"icon_clip", "disabled", 0.0);
               set_state(PART:"event", "disabled", 0.0);
               set_state(PART:"enabled_button", "disabled", 0.0);
               set_state(PART:"shadow", "disabled", 0.0);
               set_state(PART:"shadow_overlay", "disabled", 0.0);
               
            }
         } else if (m1 == (ICON)) {
            if (!d) {
               set_state(PART:"elm.swallow.content", "icononly", 0.0);
               set_state(PART:"sizer.content", "icononly", 0.0);
               set_state(PART:"elm.text", "default", 0.0);
               set_state(PART:"icon_clip", "default", 0.0);
               set_state(PART:"event", "default", 0.0);
               set_state(PART:"enabled_button", "default", 0.0);
               set_state(PART:"shadow", "default", 0.0);
               set_state(PART:"shadow_overlay", "default", 0.0);
            } else {
               set_state(PART:"elm.swallow.content", "icononly", 0.0);
               set_state(PART:"sizer.content", "icononly", 0.0);
               set_state(PART:"elm.text", "default", 0.0);
               set_state(PART:"icon_clip", "disabled", 0.0);
               set_state(PART:"event", "disabled", 0.0);
               set_state(PART:"enabled_button", "disabled", 0.0);
               set_state(PART:"shadow", "disabled", 0.0);
               set_state(PART:"shadow_overlay", "disabled", 0.0);
            }
         } else if (m1 == (LABEL)) {
            if (!d) {
               set_state(PART:"elm.swallow.content", "default", 0.0);
               set_state(PART:"sizer.content", "default", 0.0);
               set_state(PART:"elm.text", "textonly", 0.0);
               set_state(PART:"icon_clip", "default", 0.0);
               set_state(PART:"event", "default", 0.0);
               set_state(PART:"enabled_button", "default", 0.0);
               set_state(PART:"shadow", "default", 0.0);
               set_state(PART:"shadow_overlay", "default", 0.0);
            } else {
               set_state(PART:"elm.swallow.content", "default", 0.0);
               set_state(PART:"sizer.content", "default", 0.0);
               set_state(PART:"elm.text", "disabled_textonly", 0.0);
               set_state(PART:"icon_clip", "disabled", 0.0);
               set_state(PART:"event", "disabled", 0.0);
               set_state(PART:"enabled_button", "disabled", 0.0);
               set_state(PART:"shadow", "disabled", 0.0);
               set_state(PART:"shadow_overlay", "disabled", 0.0);
            }
         } else {
            if (!d) {
               set_state(PART:"elm.swallow.content", "default", 0.0);
               set_state(PART:"sizer.content", "default", 0.0);
               set_state(PART:"elm.text", "icononly", 0.0);
               set_state(PART:"icon_clip", "default", 0.0);
               set_state(PART:"event", "default", 0.0);
               set_state(PART:"enabled_button", "default", 0.0);
               set_state(PART:"enabled_button", "disabled", 0.0);
               set_state(PART:"shadow", "default", 0.0);
               set_state(PART:"shadow_overlay", "default", 0.0);
            } else {
               set_state(PART:"elm.swallow.content", "default", 0.0);
               set_state(PART:"sizer.content", "default", 0.0);
               set_state(PART:"elm.text", "icononly", 0.0);
               set_state(PART:"icon_clip", "disabled", 0.0);
               set_state(PART:"event", "disabled", 0.0);
               set_state(PART:"enabled_button", "disabled", 0.0);
               set_state(PART:"shadow", "disabled", 0.0);
               set_state(PART:"shadow_overlay", "disabled", 0.0);
            }
         }
      }
   }
   parts {
      image { "base"; nomouse;
         desc { "default";
            color: 255 255 255 0;
            image.normal: "images/button_im0.png";
            image.border: 7 7 7 7;
            min: 0 26;
            rel1.offset: 3 3;
            rel2.offset: -4 -4;
            //rel1.offset: 1 1;
            //rel2.offset: -2 -2;
            fill.smooth: 0;
            color_class: "dialog_base";
         }
         desc { "clicked";
            inherit: "default";
            color: 255 255 255 255;
         }
         desc { "disabled";
			inherit: "default";
	     }
	     desc { "prelight";
			inherit: "default";
			color: 255 255 255 255;
		 }
      }
      image { "enabled_button"; nomouse;
			clip_to: "disabled_button";
			desc { "default";
				min: 44 24;
				color: 255 255 255 0;
				image.normal: "images/button_im1.png";
				image.border: 7 7 7 7;
				fill.smooth: 0;
				rel1 { 
					to: "button_clip"; 
				}
				rel2 { 
					to: "button_clip"; 
				}
			}
			desc { "clicked";
				inherit: "default";
				color: 255 255 255 255;
			}

			desc { "disabled";
				inherit: "default";
				color: 255 255 255 0;
			}
			desc { "prelight";
				inherit: "default";
				color: 255 255 255 255;
			}
	  }
	  image { "shadow"; nomouse;
		   clip_to: "button_clip";
		   desc { "default";
				min: 44 24;
				color: 255 255 255 0;
				image.normal: "images/button_im4.png";
				image.border: 6 6 13 6;
				fill.smooth: 0;
				rel1 { 
					to: "button_clip"; 
				}
				rel2 { 
					to: "button_clip";
					offset: -1 -2;
				}
			}
			desc { "clicked";
				inherit: "default";
				color: 255 255 255 200;
			}

			desc { "disabled";
				inherit: "default";
				visible: 0;
			}
			desc { "prelight";
				inherit: "default";
			}
			
	  }
	  image { "shadow_overlay"; nomouse;
			clip_to: "button_clip";
			desc { "default";
				min: 44 24;
				color: 255 255 255 0;
				image.normal: "images/button_im5.png";
				image.border: 6 6 6 13;
				rel1 { 
					to: "button_clip"; 
				}
				rel2 { 
					to: "button_clip"; 
				}
			}
			desc { "clicked";
				inherit: "default";
				color: 255 255 255 255;
			}

			desc { "disabled";
				inherit: "default";
				visible: 0;
			}
			desc { "prelight";
				inherit: "default";
			}
	  }
      rect { "icon_clip";
         desc { "default";
         }
         desc { "disabled";
            inherit: "default";
            color: 255 255 255 64;
         }
      }
      rect { "button_clip"; nomouse;
		  desc { "default";
				color: 255 255 255 255;

				rel1 { 
					to: "base"; 
					relative: 0.0 0.0; 
					offset: 1 1; 
				}

				rel2 { 
					to: "base"; 
					relative: 1.0 1.0; 
					offset: -2 -2; 
				}
			}

			desc{ "disabled";
				inherit: "default" 0.0;
				color: 255 255 255 0;
			}
	  }
	  rect { "disabled_button";
		  clip_to: "button_clip";
		  desc { "default";
				color: 255 255 255 255;
			}

		  desc { "disabled";
				inherit: "default" 0.0;
				color: 150 150 150 128;
			}
	  }
      swallow { "elm.swallow.content"; nomouse;
         clip_to: "icon_clip";
         desc { "default";
            fixed: 1 0;
            align: 0.0 0.5;
            rel1.offset: 7 6;
            rel1.to: "base";
            rel2.relative: 0.0 1.0;
            rel2.offset: 3 -7;
            rel2.to: "base";
            visible: 0;
         }
         desc { "visible";
            inherit: "default";
            fixed: 1 0;
            aspect: 1.0 1.0;
            visible: 1;
         }
         desc { "icononly";
            inherit: "default";
            fixed: 0 0;
            align: 0.5 0.5;
            rel2.relative: 1.0 1.0;
            rel2.offset: -7 -8;
            visible: 1;
         }
      }
      text { "sizer.content"; nomouse;
         scale: 1;
         desc { "default";
            visible: 0;
            text { font: FN; size: 10;
               min: 0 0;
               text_class: "button";
            }
         }
         desc { "visible";
            inherit: "default";
            rel1.to: "elm.swallow.content";
            rel2.to: "elm.swallow.content";
            text {
               min: 1 1;
               ellipsis: -1;
               text: "M";
            }
         }
         desc { "icononly";
            inherit: "default";
            rel1.to: "elm.swallow.content";
            rel2.to: "elm.swallow.content";
            text {
               min: 1 1;
               ellipsis: -1;
               text: "M";
            }
         }
      }
      text { "elm.text"; nomouse;
         effect: SHADOW;
         scale: 1;
         desc { "default";
            rel1.offset: 4 6;
            rel1.relative: 1.0 0.0;
            rel1.to_x: "elm.swallow.content";
            rel1.to_y: "base";
            rel2.offset: -10 -4;
            rel2.to: "base";
            TEXT_COLOR;
            text { font: FN; size: 9;
               align: 0.5 0.5;
               min: 0 0;
               text_class: "button";
            }
            visible: 0;
            fixed: 1 1;
         }
         desc { "visible";
            inherit: "default";
            rel1.offset: 2 5;
            text.min: 1 1;
            text.ellipsis: -1;
            visible: 1;
            fixed: 0 0;
         }
         desc { "textonly";
            inherit: "default";
            text.min: 1 1;
            text.ellipsis: -1;
            visible: 1;
            fixed: 0 0;
         }
         desc { "disabled_visible";
            inherit: "default";
            rel1.offset: 2 5;
            color: 0 0 0 128;
			color3: 0 0 0 0;
            text.min: 1 1;
            text.ellipsis: -1;
            visible: 1;
            fixed: 0 0;
         }
         desc { "disabled_textonly";
            inherit: "default";
            color: 128 128 128 255;
			color3: 170 168 169 0;
            text.min: 1 1;
            text.ellipsis: -1;
            visible: 1;
            fixed: 0 0;
         }
      }
      rect { "event";
         desc { "default";
            color: 0 0 0 0;
         }
         desc { "disabled";
            inherit: "default";
            visible: 0;
         }
      }
   }
   programs {
      program {
         signal: "mouse,down,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,press" "elm";
         after: "button_click_anim";
      }
      program { name: "button_click_anim";
         action: STATE_SET "clicked" 0.0;
         target: "shadow";
         target: "shadow_overlay";
      }
      program { name: "button_unclick";
         signal: "mouse,up,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,unpress" "elm";
         after: "button_unclick_anim";
      }
      program { name: "button_unclick_anim";
         action: STATE_SET "default" 0.0;
         target: "shadow";
         target: "shadow_overlay";
      }
      program { name: "buttonactivate";
         signal: "elm,anim,activate"; source: "elm";
         action: STATE_SET "clicked" 0.0;
         target: "enabled_button";
         target: "shadow";
         target: "shadow_overlay";
         after: "button_unpressed_anim";
      }
      program { name: "button_unpressed_anim";
         action: STATE_SET "default" 0.0;
         in: 0.5 0.0;
         target: "shadow";
         target: "shadow_overlay";
      }
      program {
         signal: "mouse,clicked,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,click" "elm";
      }
      program { name: "button_text_visible";
         signal: "elm,state,text,visible"; source: "elm";
         script {
            new m = get_int(btmode);
            m |= LABEL; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { name: "button_text_hidden";
         signal: "elm,state,text,hidden"; source: "elm";
         script {
            new m = get_int(btmode);
            m &= ~LABEL; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { name: "button_icon_visible";
         signal: "elm,state,icon,visible"; source: "elm";
         script {
            new m = get_int(btmode);
            m |= ICON; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { name: "button_icon_hidden";
         signal: "elm,state,icon,hidden"; source: "elm";
         action:  STATE_SET "default" 0.0;
         script {
            new m = get_int(btmode);
            m &= ~ICON; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { name: "button_state_disabled";
         signal: "elm,state,disabled"; source: "elm";
         script {
            new m = get_int(btmode);
            m |= DISABLE; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { name: "button_state_enabled";
         signal: "elm,state,enabled"; source: "elm";
         script {
            new m = get_int(btmode);
            m &= ~DISABLE; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program {	name: "over_button";
		  signal: "mouse,in";source: "event";
		  action: STATE_SET "prelight";
		  transition: LINEAR 0.0;
		  target: "base";
          target: "enabled_button";
          target: "shadow";
          target: "shadow_overlay";
	  }
	  program {	name: "over_button_out";
		  signal: "mouse,out";source: "event";
		  action: STATE_SET "default" 0.0;
		  transition: LINEAR 0.0;
		  target: "base";
		  target: "enabled_button";
		  target: "shadow";
		  target: "shadow_overlay";
	  }
   }
#undef ICON
#undef LABEL
#undef MASK
#undef DISABLE
}

group { name: "elm/button/base/colorselector/left/default";
#define ICON     1
#define LABEL    2
#define MASK     3
#define DISABLE  4
images.image: "images/elm/sym_left_dark_normal.png" COMP;
   script {
      public btmode;
      public eval_mode(m) {
         new m1 = m & MASK;
         new d = m & DISABLE;
         if (m1 == (ICON | LABEL)) {
            if (!d) {
               set_state(PART:"elm.swallow.content", "visible", 0.0);
               set_state(PART:"sizer.content", "visible", 0.0);
               set_state(PART:"elm.text", "visible", 0.0);
               set_state(PART:"icon_clip", "default", 0.0);
               set_state(PART:"event", "default", 0.0);
               set_state(PART:"enabled_button", "default", 0.0);
               set_state(PART:"shadow", "default", 0.0);
               set_state(PART:"shadow_overlay", "default", 0.0);
            } else {
               set_state(PART:"elm.swallow.content", "visible", 0.0);
               set_state(PART:"sizer.content", "visible", 0.0);
               set_state(PART:"elm.text", "disabled_visible", 0.0);
               set_state(PART:"icon_clip", "disabled", 0.0);
               set_state(PART:"event", "disabled", 0.0);
               set_state(PART:"enabled_button", "disabled", 0.0);
               set_state(PART:"shadow", "disabled", 0.0);
               set_state(PART:"shadow_overlay", "disabled", 0.0);
               
            }
         } else if (m1 == (ICON)) {
            if (!d) {
               set_state(PART:"elm.swallow.content", "icononly", 0.0);
               set_state(PART:"sizer.content", "icononly", 0.0);
               set_state(PART:"elm.text", "default", 0.0);
               set_state(PART:"icon_clip", "default", 0.0);
               set_state(PART:"event", "default", 0.0);
               set_state(PART:"enabled_button", "default", 0.0);
               set_state(PART:"shadow", "default", 0.0);
               set_state(PART:"shadow_overlay", "default", 0.0);
            } else {
               set_state(PART:"elm.swallow.content", "icononly", 0.0);
               set_state(PART:"sizer.content", "icononly", 0.0);
               set_state(PART:"elm.text", "default", 0.0);
               set_state(PART:"icon_clip", "disabled", 0.0);
               set_state(PART:"event", "disabled", 0.0);
               set_state(PART:"enabled_button", "disabled", 0.0);
               set_state(PART:"shadow", "disabled", 0.0);
               set_state(PART:"shadow_overlay", "disabled", 0.0);
            }
         } else if (m1 == (LABEL)) {
            if (!d) {
               set_state(PART:"elm.swallow.content", "default", 0.0);
               set_state(PART:"sizer.content", "default", 0.0);
               set_state(PART:"elm.text", "textonly", 0.0);
               set_state(PART:"icon_clip", "default", 0.0);
               set_state(PART:"event", "default", 0.0);
               set_state(PART:"enabled_button", "default", 0.0);
               set_state(PART:"shadow", "default", 0.0);
               set_state(PART:"shadow_overlay", "default", 0.0);
            } else {
               set_state(PART:"elm.swallow.content", "default", 0.0);
               set_state(PART:"sizer.content", "default", 0.0);
               set_state(PART:"elm.text", "disabled_textonly", 0.0);
               set_state(PART:"icon_clip", "disabled", 0.0);
               set_state(PART:"event", "disabled", 0.0);
               set_state(PART:"enabled_button", "disabled", 0.0);
               set_state(PART:"shadow", "disabled", 0.0);
               set_state(PART:"shadow_overlay", "disabled", 0.0);
            }
         } else {
            if (!d) {
               set_state(PART:"elm.swallow.content", "default", 0.0);
               set_state(PART:"sizer.content", "default", 0.0);
               set_state(PART:"elm.text", "icononly", 0.0);
               set_state(PART:"icon_clip", "default", 0.0);
               set_state(PART:"event", "default", 0.0);
               set_state(PART:"enabled_button", "default", 0.0);
               set_state(PART:"enabled_button", "disabled", 0.0);
               set_state(PART:"shadow", "default", 0.0);
               set_state(PART:"shadow_overlay", "default", 0.0);
            } else {
               set_state(PART:"elm.swallow.content", "default", 0.0);
               set_state(PART:"sizer.content", "default", 0.0);
               set_state(PART:"elm.text", "icononly", 0.0);
               set_state(PART:"icon_clip", "disabled", 0.0);
               set_state(PART:"event", "disabled", 0.0);
               set_state(PART:"enabled_button", "disabled", 0.0);
               set_state(PART:"shadow", "disabled", 0.0);
               set_state(PART:"shadow_overlay", "disabled", 0.0);
            }
         }
      }
   }
   parts {
      image { "base"; nomouse;
         desc { "default";
            image.normal: "images/button_im0.png";
            image.border: 7 7 7 7;
            fill.smooth: 0;
            color_class: "dialog_base";
         }
         desc { "clicked";
            inherit: "default";
         }
         desc { "disabled";
			inherit: "default";
	     } 
      }
      image { "enabled_button"; nomouse;
			clip_to: "disabled_button";
			desc { "default";
				image.normal: "images/button_im1.png";
				image.border: 7 7 7 7;
				fill.smooth: 0;
				rel1 { 
					to: "button_clip"; 
				}
				rel2 { 
					to: "button_clip"; 
				}
			}
			desc { "clicked";
				inherit: "default";
			}

			desc { "disabled";
				inherit: "default";
				color: 255 255 255 128;
			}
	  }
	  image { "shadow"; nomouse;
		   clip_to: "button_clip";
		   desc { "default";
				color: 255 255 255 0;
				image.normal: "images/button_im4.png";
				image.border: 6 6 13 6;
				fill.smooth: 0;
				rel1 { 
					to: "button_clip"; 
				}
				rel2 { 
					to: "button_clip";
					offset: -1 -2;
				}
			}
			desc { "clicked";
				inherit: "default";
				color: 255 255 255 200;
			}

			desc { "disabled";
				inherit: "default";
				visible: 0;
			}
			
	  }
	  image { "shadow_overlay"; nomouse;
			clip_to: "button_clip";
			desc { "default";
				color: 255 255 255 0;
				image.normal: "images/button_im5.png";
				image.border: 6 6 6 13;
				rel1 { 
					to: "button_clip"; 
				}
				rel2 { 
					to: "button_clip"; 
				}
			}
			description { "clicked";
				inherit: "default";
				color: 255 255 255 255;
			}

			description { "disabled";
				inherit: "default";
				visible: 0;
			}
	  }
      rect { "icon_clip";
         desc { "default";
         }
         desc { "disabled";
            inherit: "default";
            color: 255 255 255 64;
         }
      }
      rect { "button_clip"; nomouse;
		  desc { "default";
				color: 255 255 255 255;

				rel1 { 
					to: "base"; 
					relative: 0.0 0.0; 
					offset: 1 1; 
				}

				rel2 { 
					to: "base"; 
					relative: 1.0 1.0; 
					offset: -2 -2; 
				}
			}

			desc{ "disabled";
				inherit: "default" 0.0;
				color: 255 255 255 0;
			}
	  }
	  rect { "disabled_button";
		  clip_to: "button_clip";
		  desc { "default";
				/*min: 44 24;*/
				color: 255 255 255 255;
			}

		  desc { "disabled";
				inherit: "default" 0.0;
				color: 150 150 150 128;
			}
	  }
      swallow { "elm.swallow.content"; nomouse;
         clip_to: "icon_clip";
         desc { "default";
            fixed: 1 0;
            align: 0.0 0.5;
            rel1.offset: 7 6;
            rel1.to: "base";
            rel2.relative: 0.0 1.0;
            rel2.offset: 3 -7;
            rel2.to: "base";
            visible: 0;
         }
         desc { "visible";
            inherit: "default";
            fixed: 1 0;
            aspect: 1.0 1.0;
            visible: 1;
         }
         desc { "icononly";
            inherit: "default";
            fixed: 0 0;
            align: 0.5 0.5;
            rel2.relative: 1.0 1.0;
            rel2.offset: -7 -8;
            visible: 1;
         }
      }
      text { "sizer.content"; nomouse;
         scale: 1;
         desc { "default";
            visible: 0;
            text { font: FN; size: 10;
               min: 0 0;
               text_class: "button";
            }
         }
         desc { "visible";
            inherit: "default";
            rel1.to: "elm.swallow.content";
            rel2.to: "elm.swallow.content";
            text {
               min: 1 1;
               ellipsis: -1;
               text: "M";
            }
         }
         desc { "icononly";
            inherit: "default";
            rel1.to: "elm.swallow.content";
            rel2.to: "elm.swallow.content";
            text {
               min: 1 1;
               ellipsis: -1;
               text: "M";
            }
         }
      }
      text { "elm.text"; nomouse;
         effect: SHADOW;
         scale: 1;
         desc { "default";
            rel1.offset: 4 6;
            rel1.relative: 1.0 0.0;
            rel1.to_x: "elm.swallow.content";
            rel1.to_y: "base";
            rel2.offset: -10 -4;
            rel2.to: "base";
            TEXT_COLOR;
            text { font: FN; size: 9;
               align: 0.5 0.5;
               min: 0 0;
               text_class: "button";
            }
            visible: 0;
            fixed: 1 1;
         }
         desc { "visible";
            inherit: "default";
            rel1.offset: 2 5;
            text.min: 1 1;
            text.ellipsis: -1;
            visible: 1;
            fixed: 0 0;
         }
         desc { "textonly";
            inherit: "default";
            text.min: 1 1;
            text.ellipsis: -1;
            visible: 1;
            fixed: 0 0;
         }
         desc { "disabled_visible";
            inherit: "default";
            rel1.offset: 2 5;
            color: 0 0 0 128;
			color3: 0 0 0 0;
            text.min: 1 1;
            text.ellipsis: -1;
            visible: 1;
            fixed: 0 0;
         }
         desc { "disabled_textonly";
            inherit: "default";
            color: 128 128 128 255;
			color3: 170 168 169 0;
            text.min: 1 1;
            text.ellipsis: -1;
            visible: 1;
            fixed: 0 0;
         }
      }
      rect { "event";
         desc { "default";
            color: 0 0 0 0;
         }
         desc { "disabled";
            inherit: "default";
            visible: 0;
         }
      }
      image { "ic"; nomouse;
         desc { "default";
            min: 15 15;
            max: 15 15;
            fixed: 1 1;
            image.normal: "images/elm/sym_left_dark_normal.png";
         }
      }
   }
   programs {
      program {
         signal: "mouse,down,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,press" "elm";
         after: "button_click_anim";
      }
      program { name: "button_click_anim";
         action: STATE_SET "clicked" 0.0;
         target: "shadow";
         target: "shadow_overlay";
      }
      program { name: "button_unclick";
         signal: "mouse,up,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,unpress" "elm";
         after: "button_unclick_anim";
      }
      program { name: "button_unclick_anim";
         action: STATE_SET "default" 0.0;
         target: "shadow";
         target: "shadow_overlay";
      }
      program { name: "buttonactivate";
         signal: "elm,anim,activate"; source: "elm";
         action: STATE_SET "clicked" 0.0;
         target: "enabled_button";
         target: "shadow";
         target: "shadow_overlay";
         after: "button_unpressed_anim";
      }
      program { name: "button_unpressed_anim";
         action: STATE_SET "default" 0.0;
         in: 0.5 0.0;
         target: "shadow";
         target: "shadow_overlay";
      }
      program {
         signal: "mouse,clicked,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,click" "elm";
      }
      program { name: "button_text_visible";
         signal: "elm,state,text,visible"; source: "elm";
         script {
            new m = get_int(btmode);
            m |= LABEL; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { name: "button_text_hidden";
         signal: "elm,state,text,hidden"; source: "elm";
         script {
            new m = get_int(btmode);
            m &= ~LABEL; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { name: "button_icon_visible";
         signal: "elm,state,icon,visible"; source: "elm";
         script {
            new m = get_int(btmode);
            m |= ICON; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { name: "button_icon_hidden";
         signal: "elm,state,icon,hidden"; source: "elm";
         action:  STATE_SET "default" 0.0;
         script {
            new m = get_int(btmode);
            m &= ~ICON; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { name: "button_state_disabled";
         signal: "elm,state,disabled"; source: "elm";
         script {
            new m = get_int(btmode);
            m |= DISABLE; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { name: "button_state_enabled";
         signal: "elm,state,enabled"; source: "elm";
         script {
            new m = get_int(btmode);
            m &= ~DISABLE; set_int(btmode, m);
            eval_mode(m);
         }
      }
   }
#undef ICON
#undef LABEL
#undef MASK
#undef DISABLE
}

group { name: "elm/button/base/colorselector/right/default";
#define ICON     1
#define LABEL    2
#define MASK     3
#define DISABLE  4
images.image: "images/elm/sym_right_dark_normal.png" COMP;
   script {
      public btmode;
      public eval_mode(m) {
         new m1 = m & MASK;
         new d = m & DISABLE;
         if (m1 == (ICON | LABEL)) {
            if (!d) {
               set_state(PART:"elm.swallow.content", "visible", 0.0);
               set_state(PART:"sizer.content", "visible", 0.0);
               set_state(PART:"elm.text", "visible", 0.0);
               set_state(PART:"icon_clip", "default", 0.0);
               set_state(PART:"event", "default", 0.0);
               set_state(PART:"enabled_button", "default", 0.0);
               set_state(PART:"shadow", "default", 0.0);
               set_state(PART:"shadow_overlay", "default", 0.0);
            } else {
               set_state(PART:"elm.swallow.content", "visible", 0.0);
               set_state(PART:"sizer.content", "visible", 0.0);
               set_state(PART:"elm.text", "disabled_visible", 0.0);
               set_state(PART:"icon_clip", "disabled", 0.0);
               set_state(PART:"event", "disabled", 0.0);
               set_state(PART:"enabled_button", "disabled", 0.0);
               set_state(PART:"shadow", "disabled", 0.0);
               set_state(PART:"shadow_overlay", "disabled", 0.0);
               
            }
         } else if (m1 == (ICON)) {
            if (!d) {
               set_state(PART:"elm.swallow.content", "icononly", 0.0);
               set_state(PART:"sizer.content", "icononly", 0.0);
               set_state(PART:"elm.text", "default", 0.0);
               set_state(PART:"icon_clip", "default", 0.0);
               set_state(PART:"event", "default", 0.0);
               set_state(PART:"enabled_button", "default", 0.0);
               set_state(PART:"shadow", "default", 0.0);
               set_state(PART:"shadow_overlay", "default", 0.0);
            } else {
               set_state(PART:"elm.swallow.content", "icononly", 0.0);
               set_state(PART:"sizer.content", "icononly", 0.0);
               set_state(PART:"elm.text", "default", 0.0);
               set_state(PART:"icon_clip", "disabled", 0.0);
               set_state(PART:"event", "disabled", 0.0);
               set_state(PART:"enabled_button", "disabled", 0.0);
               set_state(PART:"shadow", "disabled", 0.0);
               set_state(PART:"shadow_overlay", "disabled", 0.0);
            }
         } else if (m1 == (LABEL)) {
            if (!d) {
               set_state(PART:"elm.swallow.content", "default", 0.0);
               set_state(PART:"sizer.content", "default", 0.0);
               set_state(PART:"elm.text", "textonly", 0.0);
               set_state(PART:"icon_clip", "default", 0.0);
               set_state(PART:"event", "default", 0.0);
               set_state(PART:"enabled_button", "default", 0.0);
               set_state(PART:"shadow", "default", 0.0);
               set_state(PART:"shadow_overlay", "default", 0.0);
            } else {
               set_state(PART:"elm.swallow.content", "default", 0.0);
               set_state(PART:"sizer.content", "default", 0.0);
               set_state(PART:"elm.text", "disabled_textonly", 0.0);
               set_state(PART:"icon_clip", "disabled", 0.0);
               set_state(PART:"event", "disabled", 0.0);
               set_state(PART:"enabled_button", "disabled", 0.0);
               set_state(PART:"shadow", "disabled", 0.0);
               set_state(PART:"shadow_overlay", "disabled", 0.0);
            }
         } else {
            if (!d) {
               set_state(PART:"elm.swallow.content", "default", 0.0);
               set_state(PART:"sizer.content", "default", 0.0);
               set_state(PART:"elm.text", "icononly", 0.0);
               set_state(PART:"icon_clip", "default", 0.0);
               set_state(PART:"event", "default", 0.0);
               set_state(PART:"enabled_button", "default", 0.0);
               set_state(PART:"enabled_button", "disabled", 0.0);
               set_state(PART:"shadow", "default", 0.0);
               set_state(PART:"shadow_overlay", "default", 0.0);
            } else {
               set_state(PART:"elm.swallow.content", "default", 0.0);
               set_state(PART:"sizer.content", "default", 0.0);
               set_state(PART:"elm.text", "icononly", 0.0);
               set_state(PART:"icon_clip", "disabled", 0.0);
               set_state(PART:"event", "disabled", 0.0);
               set_state(PART:"enabled_button", "disabled", 0.0);
               set_state(PART:"shadow", "disabled", 0.0);
               set_state(PART:"shadow_overlay", "disabled", 0.0);
            }
         }
      }
   }
   parts {
      image { "base"; nomouse;
         desc { "default";
            image.normal: "images/button_im0.png";
            image.border: 7 7 7 7;
            fill.smooth: 0;
            color_class: "dialog_base";
         }
         desc { "clicked";
            inherit: "default";
         }
         desc { "disabled";
			inherit: "default";
	     } 
      }
      image { "enabled_button"; nomouse;
			clip_to: "disabled_button";
			desc { "default";
				image.normal: "images/button_im1.png";
				image.border: 7 7 7 7;
				fill.smooth: 0;
				rel1 { 
					to: "button_clip"; 
				}
				rel2 { 
					to: "button_clip"; 
				}
			}
			desc { "clicked";
				inherit: "default";
			}

			desc { "disabled";
				inherit: "default";
				color: 255 255 255 128;
			}
	  }
	  image { "shadow"; nomouse;
		   clip_to: "button_clip";
		   desc { "default";
				color: 255 255 255 0;
				image.normal: "images/button_im4.png";
				image.border: 6 6 13 6;
				fill.smooth: 0;
				rel1 { 
					to: "button_clip"; 
				}
				rel2 { 
					to: "button_clip";
					offset: -1 -2;
				}
			}
			desc { "clicked";
				inherit: "default";
				color: 255 255 255 200;
			}

			desc { "disabled";
				inherit: "default";
				visible: 0;
			}
			
	  }
	  image { "shadow_overlay"; nomouse;
			clip_to: "button_clip";
			desc { "default";
				color: 255 255 255 0;
				image.normal: "images/button_im5.png";
				image.border: 6 6 6 13;
				rel1 { 
					to: "button_clip"; 
				}
				rel2 { 
					to: "button_clip"; 
				}
			}
			description { "clicked";
				inherit: "default";
				color: 255 255 255 255;
			}

			description { "disabled";
				inherit: "default";
				visible: 0;
			}
	  }
      rect { "icon_clip";
         desc { "default";
         }
         desc { "disabled";
            inherit: "default";
            color: 255 255 255 64;
         }
      }
      rect { "button_clip"; nomouse;
		  desc { "default";
				color: 255 255 255 255;

				rel1 { 
					to: "base"; 
					relative: 0.0 0.0; 
					offset: 1 1; 
				}

				rel2 { 
					to: "base"; 
					relative: 1.0 1.0; 
					offset: -2 -2; 
				}
			}

			desc{ "disabled";
				inherit: "default" 0.0;
				color: 255 255 255 0;
			}
	  }
	  rect { "disabled_button";
		  clip_to: "button_clip";
		  desc { "default";
				/*min: 44 24;*/
				color: 255 255 255 255;
			}

		  desc { "disabled";
				inherit: "default" 0.0;
				color: 150 150 150 128;
			}
	  }
      swallow { "elm.swallow.content"; nomouse;
         clip_to: "icon_clip";
         desc { "default";
            fixed: 1 0;
            align: 0.0 0.5;
            rel1.offset: 7 6;
            rel1.to: "base";
            rel2.relative: 0.0 1.0;
            rel2.offset: 3 -7;
            rel2.to: "base";
            visible: 0;
         }
         desc { "visible";
            inherit: "default";
            fixed: 1 0;
            aspect: 1.0 1.0;
            visible: 1;
         }
         desc { "icononly";
            inherit: "default";
            fixed: 0 0;
            align: 0.5 0.5;
            rel2.relative: 1.0 1.0;
            rel2.offset: -7 -8;
            visible: 1;
         }
      }
      text { "sizer.content"; nomouse;
         scale: 1;
         desc { "default";
            visible: 0;
            text { font: FN; size: 10;
               min: 0 0;
               text_class: "button";
            }
         }
         desc { "visible";
            inherit: "default";
            rel1.to: "elm.swallow.content";
            rel2.to: "elm.swallow.content";
            text {
               min: 1 1;
               ellipsis: -1;
               text: "M";
            }
         }
         desc { "icononly";
            inherit: "default";
            rel1.to: "elm.swallow.content";
            rel2.to: "elm.swallow.content";
            text {
               min: 1 1;
               ellipsis: -1;
               text: "M";
            }
         }
      }
      text { "elm.text"; nomouse;
         effect: SHADOW;
         scale: 1;
         desc { "default";
            rel1.offset: 4 6;
            rel1.relative: 1.0 0.0;
            rel1.to_x: "elm.swallow.content";
            rel1.to_y: "base";
            rel2.offset: -10 -4;
            rel2.to: "base";
            TEXT_COLOR;
            text { font: FN; size: 9;
               align: 0.5 0.5;
               min: 0 0;
               text_class: "button";
            }
            visible: 0;
            fixed: 1 1;
         }
         desc { "visible";
            inherit: "default";
            rel1.offset: 2 5;
            text.min: 1 1;
            text.ellipsis: -1;
            visible: 1;
            fixed: 0 0;
         }
         desc { "textonly";
            inherit: "default";
            text.min: 1 1;
            text.ellipsis: -1;
            visible: 1;
            fixed: 0 0;
         }
         desc { "disabled_visible";
            inherit: "default";
            rel1.offset: 2 5;
            color: 0 0 0 128;
			color3: 0 0 0 0;
            text.min: 1 1;
            text.ellipsis: -1;
            visible: 1;
            fixed: 0 0;
         }
         desc { "disabled_textonly";
            inherit: "default";
            color: 128 128 128 255;
			color3: 170 168 169 0;
            text.min: 1 1;
            text.ellipsis: -1;
            visible: 1;
            fixed: 0 0;
         }
      }
      rect { "event";
         desc { "default";
            color: 0 0 0 0;
         }
         desc { "disabled";
            inherit: "default";
            visible: 0;
         }
      }
      image { "ic"; nomouse;
         desc { "default";
            min: 15 15;
            max: 15 15;
            fixed: 1 1;
            image.normal: "images/elm/sym_right_dark_normal.png";
         }
      }
   }
   programs {
      program {
         signal: "mouse,down,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,press" "elm";
         after: "button_click_anim";
      }
      program { name: "button_click_anim";
         action: STATE_SET "clicked" 0.0;
         target: "shadow";
         target: "shadow_overlay";
      }
      program { name: "button_unclick";
         signal: "mouse,up,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,unpress" "elm";
         after: "button_unclick_anim";
      }
      program { name: "button_unclick_anim";
         action: STATE_SET "default" 0.0;
         target: "shadow";
         target: "shadow_overlay";
      }
      program { name: "buttonactivate";
         signal: "elm,anim,activate"; source: "elm";
         action: STATE_SET "clicked" 0.0;
         target: "enabled_button";
         target: "shadow";
         target: "shadow_overlay";
         after: "button_unpressed_anim";
      }
      program { name: "button_unpressed_anim";
         action: STATE_SET "default" 0.0;
         in: 0.5 0.0;
         target: "shadow";
         target: "shadow_overlay";
      }
      program {
         signal: "mouse,clicked,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,click" "elm";
      }
      program { name: "button_text_visible";
         signal: "elm,state,text,visible"; source: "elm";
         script {
            new m = get_int(btmode);
            m |= LABEL; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { name: "button_text_hidden";
         signal: "elm,state,text,hidden"; source: "elm";
         script {
            new m = get_int(btmode);
            m &= ~LABEL; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { name: "button_icon_visible";
         signal: "elm,state,icon,visible"; source: "elm";
         script {
            new m = get_int(btmode);
            m |= ICON; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { name: "button_icon_hidden";
         signal: "elm,state,icon,hidden"; source: "elm";
         action:  STATE_SET "default" 0.0;
         script {
            new m = get_int(btmode);
            m &= ~ICON; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { name: "button_state_disabled";
         signal: "elm,state,disabled"; source: "elm";
         script {
            new m = get_int(btmode);
            m |= DISABLE; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { name: "button_state_enabled";
         signal: "elm,state,enabled"; source: "elm";
         script {
            new m = get_int(btmode);
            m &= ~DISABLE; set_int(btmode, m);
            eval_mode(m);
         }
      }
   }
#undef ICON
#undef LABEL
#undef MASK
#undef DISABLE
}

group { name: "elm/button/base/media_player/prev/default";
   alias: "elm/button/base/media_player/rewind/default";
   alias: "elm/button/base/media_player/play/default";
   alias: "elm/button/base/media_player/pause/default";
   alias: "elm/button/base/media_player/stop/default";
   alias: "elm/button/base/media_player/forward/default";
   alias: "elm/button/base/media_player/next/default";
   alias: "elm/button/base/media_player/info/default";
   alias: "elm/button/base/media_player/eject/default";
   alias: "elm/button/base/media_player/volume/default";
   alias: "elm/button/base/media_player/mute/default";

   alias: "elm/button/base/media_player/prev/flush";
   alias: "elm/button/base/media_player/rewind/flush";
   alias: "elm/button/base/media_player/play/flush";
   alias: "elm/button/base/media_player/pause/flush";
   alias: "elm/button/base/media_player/stop/flush";
   alias: "elm/button/base/media_player/forward/flush";
   alias: "elm/button/base/media_player/next/flush";
   alias: "elm/button/base/media_player/info/flush";
   alias: "elm/button/base/media_player/eject/flush";
   alias: "elm/button/base/media_player/volume/flush";
   alias: "elm/button/base/media_player/mute/flush";
   
   parts {
      part { name: "clip"; type: RECT;
         description { state: "default" 0.0;
         }
      }
      part { name: "bt";
		clip_to: "clip";
		description { state: "default" 0.0;
			image.normal: "images/button_im4.png";
			image.border: 6 6 13 6;
			visible: 0;
		}
		description { state: "selected" 0.0;
			inherit: "default" 0.0;
			visible: 1;
		}
      }
      part { name: "bt2_bg";
		description { state: "default" 0.0;
			visible: 0;
			image.normal: "images/button_im3.png";
			image.border: 7 7 7 7;
			color_class: "focus";
		}
		description { state: "selected" 0.0;
			inherit: "default" 0.0;
			visible: 1;
		}
      }
      part { name: "bt2";
		description { state: "default" 0.0;
			visible: 0;
			image.normal: "images/button_im4.png";
			image.border: 6 6 6 6;
		}
		description { state: "selected" 0.0;
			inherit: "default" 0.0;
			visible: 1;
		}
      }
      part { name: "elm.swallow.content"; type: SWALLOW; mouse_events: 0;
         description { state: "default" 0.0;
            rel1.offset: 3 1;
            rel2.offset: -4 -2;
         }
      }
      part { name: "event"; type: RECT;
         ignore_flags: ON_HOLD;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
   }
   programs {
      program {
         signal: "mouse,down,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,press" "elm";
         after: "button_click_anim";
      }
      program { name:   "button_click_anim";
         action: STATE_SET "selected" 0.0;
         target: "bt";
         target: "bt2_bg";
         target: "bt2";
      }
      program {
         signal: "mouse,up,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,unpress" "elm";
         after: "button_unclick_anim";
      }
      program { name:   "button_unclick_anim";
         action: STATE_SET "default" 0.0;
         target: "bt";
         target: "bt2_bg";
         target: "bt2";
      }
      program {
         signal: "elm,anim,activate"; source: "elm";
         action: STATE_SET "clicked" 0.0;
         target: "bt";
         target: "bt2_bg";
         target: "bt2";
         after: "button_unpressed_anim";
      }
      program { name:   "button_unpressed_anim";
         action: STATE_SET "default" 0.0;
         in: 0.5 0.0;
         target: "bt";
         target: "bt2_bg";
         target: "bt2";
      }
      program {
         signal: "mouse,clicked,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,click" "elm";
      }
   }
}

group { name: "elm/button/base/hoversel_vertical/default";
   inherit: "elm/button/base/default";
   alias: "elm/button/base/hoversel_vertical/entry";
   alias: "elm/button/base/hoversel_horizontal/default";
   alias: "elm/button/base/hoversel_horizontal/entry";
    
   parts {
      text { "elm.text";
         desc { "default";
            rel1.offset: 4 6;
            rel1.relative: 1.0 0.0;
            rel1.to_x: "elm.swallow.content";
            rel1.to_y: "base";
            rel2.to_y: "base";
            rel2.to_x: "arrow";
            rel2.offset: -6 -4;
            rel2.relative: 0.0 1.0;
            text.text_class: "hoversel";
            text.ellipsis: -1;
            TEXT_COLOR;
            fixed: 1 1;
         }
         desc { "visible";
            inherit: "default";
            rel1.offset: 2 5;
            text.min: 1 1;
            text.ellipsis: -1;
            visible: 1;
            fixed: 0 0;
         }
         desc { "textonly";
            inherit: "default";
            text.min: 1 1;
            text.ellipsis: -1;
            visible: 1;
            fixed: 0 0;
         }
         desc { "disabled_visible";
            inherit: "default";
            rel1.offset: 2 5;
            color_class: "button_text_disabled";
            TEXT_COLOR_DISABLED;
            text.min: 1 1;
            text.ellipsis: -1;
            visible: 1;
            fixed: 0 0;
         }
         desc { "disabled_textonly";
            inherit: "default";
            color_class: "button_text_disabled";
            TEXT_COLOR_DISABLED;
            text.min: 1 1;
            text.ellipsis: -1;
            visible: 1;
            fixed: 0 0;
         }
      }
      image { "arrow"; nomouse;
         desc { "default";
            align: 1.0 0.5;
            min: 15 10;
			max: 15 10;
            fixed: 1 1;
            rel1.to: "base";
            rel1.relative: 1.0 0.0;
            rel1.offset: -10 0;
            rel2.to: "base";
            rel2.offset: -10 0;
            color: 0 0 0 255;
            image.normal: "images/scrollbar_im9.png";
            image.border: 5 3 12 7;
            fill.smooth : 0;
         }
         desc { "clicked";
            inherit: "default";
         }
         desc { "disabled";
			inherit: "default";
			color: 255 255 255 125;
		}
      }
   }
   programs {
	  program { name: "button_state_disabled2";
         signal: "elm,state,disabled"; source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "arrow";         
      }
      program { name: "button_state_enabled2";
         signal: "elm,state,enabled"; source: "elm";
         action: STATE_SET "default" 0.0;
         target: "arrow";         
      } 
	   
      program { name: "button_click_anim";
         target: "arrow";
      }
      program { name: "button_unclick_anim";
         target: "arrow";
      }
      program { name: "buttonactivate";
         target: "arrow";
      }
      program { name: "button_unpressed_anim";
         target: "arrow";
      }
   }
}

group { name: "elm/button/base/hoversel_vertical_entry/default";
   alias: "elm/button/base/hoversel_vertical_entry/entry";
#define ICON     1
#define LABEL    2
#define MASK     3
#define DISABLE  4
   script {
      public btmode;
      public eval_mode(m) {
         new m1 = m & MASK;
         new d = m & DISABLE;
         if (m1 == (ICON | LABEL)) {
            if (!d) {
               set_state(PART:"elm.swallow.content", "visible", 0.0);
               set_state(PART:"sizer.content", "visible", 0.0);
               set_state(PART:"elm.text", "visible", 0.0);
               set_state(PART:"icon_clip", "default", 0.0);
               set_state(PART:"event", "default", 0.0);
            } else {
               set_state(PART:"elm.swallow.content", "visible", 0.0);
               set_state(PART:"sizer.content", "visible", 0.0);
               set_state(PART:"elm.text", "disabled_visible", 0.0);
               set_state(PART:"icon_clip", "disabled", 0.0);
               set_state(PART:"event", "disabled", 0.0);
            }
         } else if (m1 == (ICON)) {
            if (!d) {
               set_state(PART:"elm.swallow.content", "icononly", 0.0);
               set_state(PART:"sizer.content", "icononly", 0.0);
               set_state(PART:"elm.text", "default", 0.0);
               set_state(PART:"icon_clip", "default", 0.0);
               set_state(PART:"event", "default", 0.0);
            } else {
               set_state(PART:"elm.swallow.content", "icononly", 0.0);
               set_state(PART:"sizer.content", "icononly", 0.0);
               set_state(PART:"elm.text", "default", 0.0);
               set_state(PART:"icon_clip", "disabled", 0.0);
               set_state(PART:"event", "disabled", 0.0);
            }
         } else if (m1 == (LABEL)) {
            if (!d) {
               set_state(PART:"elm.swallow.content", "default", 0.0);
               set_state(PART:"sizer.content", "default", 0.0);
               set_state(PART:"elm.text", "textonly", 0.0);
               set_state(PART:"icon_clip", "default", 0.0);
               set_state(PART:"event", "default", 0.0);
            } else {
               set_state(PART:"elm.swallow.content", "default", 0.0);
               set_state(PART:"sizer.content", "default", 0.0);
               set_state(PART:"elm.text", "disabled_textonly", 0.0);
               set_state(PART:"icon_clip", "disabled", 0.0);
               set_state(PART:"event", "disabled", 0.0);
            }
         } else {
            if (!d) {
               set_state(PART:"elm.swallow.content", "default", 0.0);
               set_state(PART:"sizer.content", "default", 0.0);
               //set_state(PART:"elm.text", "icononly", 0.0);
               set_state(PART:"icon_clip", "default", 0.0);
               set_state(PART:"event", "default", 0.0);
            } else {
               set_state(PART:"elm.swallow.content", "default", 0.0);
               set_state(PART:"sizer.content", "default", 0.0);
               //set_state(PART:"elm.text", "icononly", 0.0);
               set_state(PART:"icon_clip", "disabled", 0.0);
               set_state(PART:"event", "disabled", 0.0);
            }
         }
      }
   }
   parts {
      image { "base"; nomouse;
         desc { "default";
            fixed: 1 1;
            rel1.offset: -6 0;
            image.normal: "images/elm/menu_im2.png";
            image.border: 5 5 5 5;
            fill.smooth: 0;
            visible: 0;
         }
         desc { "clicked";
            inherit: "default";
            visible: 1;
         }
      }
      rect { "icon_clip";
         desc { "default";
         }
         desc { "disabled";
            inherit: "default";
            color: 255 255 255 64;
         }
      }
      swallow { "elm.swallow.content"; nomouse;
         clip_to: "icon_clip";
         desc { "default";
            fixed: 1 0;
            align: 0.0 0.5;
            rel1.offset: 6 5;
            rel1.to: "base";
            rel2.relative: 0.0 1.0;
            rel2.offset: 6 -8;
            rel2.to: "base";
            visible: 0;
         }
         desc { "visible";
            inherit: "default";
            fixed: 1 0;
            aspect: 1.0 1.0;
            visible: 1;
         }
         desc { "icononly";
            inherit: "default";
            fixed: 0 0;
            align: 0.5 0.5;
            rel2.relative: 1.0 1.0;
            rel2.offset: -7 -8;
            visible: 1;
         }
      }
      text { "sizer.content"; nomouse;
         scale: 1;
         desc { "default";
            fixed: 1 1;
            visible: 0;
            text { font: FN; size: 10;
               min: 0 0;
               text_class: "button_text";
            }
         }
         desc { "visible";
            inherit: "default";
            rel1.to: "elm.swallow.content";
            rel2.to: "elm.swallow.content";
            text {
               min: 1 1;
               ellipsis: -1;
               text: "M";
            }
         }
         desc { "icononly";
            inherit: "default";
            rel1.to: "elm.swallow.content";
            rel2.to: "elm.swallow.content";
            text {
               min: 1 1;
               ellipsis: -1;
               text: "M";
            }
         }
      }
      rect { "click_clip";
         desc { "default";
         }
         desc { "clicked";
            inherit: "default";
            visible: 0;
         }
      }
      text { "elm.text"; nomouse;
         scale: 1;
         clip_to: "click_clip";
         desc { "default";
            rel1.offset: 0 5;
            rel1.relative: 1.0 0.0;
            rel1.to_x: "elm.swallow.content";
            rel1.to_y: "base";
            rel2.offset: -8 -8;
            rel2.to: "base";
            TEXT_COLOR;
            text { font: FN; size: 10;
               align: 0.0 0.5;
               min: 0 0;
               text_class: "button";
            }
            visible: 0;
         }
         desc { "visible";
            inherit: "default";
            rel1.offset: 2 5;
            text.min: 1 1;
            text.ellipsis: -1;
            visible: 1;
         }
         desc { "textonly";
            inherit: "default";
            text.min: 1 1;
            text.ellipsis: -1;
            visible: 1;
         }
         desc { "disabled_visible";
            inherit: "default";
            rel1.offset: 2 5;
            color: 0 0 0 128;
			color3: 0 0 0 0;
            text.min: 1 1;
            text.ellipsis: -1;
            visible: 1;
         }
         desc { "disabled_textonly";
            inherit: "default";
            color: 128 128 128 255;
			color3: 170 168 169 0;
            text.min: 1 1;
            text.ellipsis: -1;
            visible: 1;
         }
      }
      text { "label3"; nomouse;
         scale: 1;
         desc { "default";
            fixed: 1 1;
            rel1.offset: -2 -3;
            rel1.to: "elm.text";
            rel2.offset: 2 1;
            rel2.to: "elm.text";
            TEXT_COLOR;
            text { font: FN; size: 10;
               text_source: "elm.text";
               align: 0.0 0.5;
               text_class: "hoversel_item";
            }
            visible: 0;
         }
         desc { "clicked";
            inherit: "default";
            visible: 1;
         }
      }
      rect { name: "event";
         desc { "default";
            color: 0 0 0 0;
         }
         desc { "disabled";
            inherit: "default";
            visible: 0;
         }
      }
   }
   programs {
      program {
         signal: "mouse,down,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,press" "elm";
         after: "button_click_anim";
      }
      program { name: "button_click_anim";
         action: STATE_SET "clicked" 0.0;
         target: "base";
         target: "click_clip";
         target: "label3";
      }
      program { name: "button_unclick";
         signal: "mouse,up,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,unpress" "elm";
         after: "button_unclick_anim";
      }
      program { name: "button_unclick_anim";
         action: STATE_SET "default" 0.0;
         target: "base";
         target: "click_clip";
         target: "label3";
      }
      program { name: "buttonactivate";
         signal: "elm,anim,activate"; source: "elm";
         action: STATE_SET "clicked" 0.0;
         target: "base";
         target: "click_clip";
         target: "label3";
         after: "button_unpressed_anim";
      }
      program { name: "button_unpressed_anim";
         action: STATE_SET "default" 0.0;
         in: 0.5 0.0;
         target: "base";
         target: "click_clip";
         target: "label3";
      }
      program {
         signal: "mouse,clicked,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,click" "elm";
      }
      program { name:   "button_text_visible";
         signal: "elm,state,text,visible"; source: "elm";
         script {
            new m = get_int(btmode);
            m |= LABEL; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { name:   "button_text_hidden";
         signal: "elm,state,text,hidden"; source: "elm";
         script {
            new m = get_int(btmode);
            m &= ~LABEL; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { name:   "button_icon_visible";
         signal: "elm,state,icon,visible"; source: "elm";
         script {
            new m = get_int(btmode);
            m |= ICON; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { name:   "button_icon_hidden";
         signal: "elm,state,icon,hidden"; source: "elm";
         action:  STATE_SET "default" 0.0;
         script {
            new m = get_int(btmode);
            m &= ~ICON; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { name:   "button_state_disabled";
         signal: "elm,state,disabled"; source: "elm";
         script {
            new m = get_int(btmode);
            m |= DISABLE; set_int(btmode, m);
            eval_mode(m);
         }
      }
      program { name:   "button_state_enabled";
         signal: "elm,state,enabled"; source: "elm";
         script {
            new m = get_int(btmode);
            m &= ~DISABLE; set_int(btmode, m);
            eval_mode(m);
         }
      }
   }
#undef ICON
#undef LABEL
#undef MASK
#undef DISABLE
}

group { name: "elm/button/base/hoversel_horizontal_entry/default";
   inherit: "elm/button/base/hoversel_vertical_entry/default";
   alias: "elm/button/base/hoversel_horizontal_entry/entry";
   parts {
      image { "base";
         desc { "default";
            rel1.offset: 0 0;
         }
         desc { "clicked";
            inherit: "default";
            visible: 1;
         }
      }
   }
}
