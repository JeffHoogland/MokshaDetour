/* Guidelines for a notification theme.

 * Groups needed :
 *  - e/modules/notification/logo : Logo for the module and it must contain at least one part named image.
 *  - e/modules/notification/main : Main theme for the popup
 * The theme must contains two parts :
 *  - notification.swallow.app_icon  : Contains the notification icon
 *  - notification.textblock.message : Contains the notification message
 * The module can send those signals to the theme :
 *  - notification,new : A new notification occured
 *  - notification,del : The notification is to be deleted
 * A notification theme must send those signals to the module :
 *  - notification,deleted : The notification is ready to be deleted
 * Optionally those signals can be used to add some features :
 *  - notification,close : Close the popup
 *  - notification,find  : Find the source application of the event
 */
 
 group { name: "e/modules/notification/logo";
   images.image: "images/icon_exclam.png" COMP;
   parts {
      part { name: "base"; mouse_events: 0;
         description { state: "default" 0.0;
            image.normal: "images/icon_exclam.png";
            max: 48 48;
            aspect: 1.0 1.0;
         }
      }
   }
}
 
group {
	name: "e/modules/notification/main";
	//alias: "e/modules/notification/main/alpha";
	data {
        item: "app_icon_max" "48 48";
        item: "shaped" "1";
	}
	parts {

		part {
            name: "clipper_base";
            type: RECT;
            mouse_events: 0;
            description {
				state: "default" 0.0;
				color: 255 255 255 255;
            }
            description {
				state: "mouse_over" 0.0;
				inherit: "default" 0.0;
				color: 255 255 255 128;
            }
            description {
				state: "hidden" 0.0;
				inherit: "default" 0.0;
				color: 255 255 255 0;
				visible: 0;
            }
		}

		part {
            name: "clipper";
            type: RECT;
            mouse_events: 0;
            clip_to: "clipper_base";
            description {
				state: "default" 0.0;
				rel1 {
					to: "base";
					offset: 3 3;
				}
				rel2 {
					to: "base";
					offset: -4 -4;
				}
            }
		}

		part {
            name: "base";
            type: IMAGE;
            mouse_events: 1;
            clip_to: "clipper_base";
            description {
				state: "default" 0.0;
				//~ color: 255 255 255 200;
				image {
					normal: "images/window-border_bt5.png";
					border: 15 15 15 15;
				}
            }
		}

		part {
            name: "notification.text.title";
            type: TEXT;
            scale: 1;
            mouse_events: 0;
            effect: SOFT_SHADOW;
            clip_to: "clipper";
            description {
				state: "default" 0.0;
				fixed: 1 1;
				visible: 1;
				align: 0.0 0.0;
				rel1 {
					to_y: "clipper";
					to_x: "notification.swallow.app_icon";
					relative: 1.0 0.0;
					offset: 10 5;
				}
				rel2 {
					to: "clipper";
					relative: 1.0 0.0;
					offset: -20 15;
				}
				TEXT_COLOR_SELECTED;
				TEXT_NORMAL("menu_title", 0.0 0.0, 0 1);
			}
		}
		/* Close Button */

		part {
            name: "notification.close_btn";
            clip_to: "clipper";
            description {
				state: "default" 0.0;
				min: 15 15;
				max: 15 15;
				rel1 {
					relative: 1.0 0.0;
					offset: -24 5;
				}
				rel2 {
					relative: 1.0 0.0;
					offset:  -6 20;
				}
				image.normal: "images/actions/dialog-close.png";
            }
            description {
				state: "active" 0.0;
				inherit: "default" 0.0;
				visible: 1;
            }
		}

		part {
            name: "clipper_app_icon";
            type: RECT;
            mouse_events: 0;
            clip_to: "clipper";
            description {
				state: "default" 0.0;
				color: 255 255 255 255;
				rel1 {
					relative: 0.0 0.0;
					offset: 0 0;
				}
				rel2 {
					relative: 1.0 1.0;
					offset: -1 -1;
				}
            }
            description {
				state: "hidden" 0.0;
				inherit: "default" 0.0;
				color: 255 255 255 0;
				visible: 0;
            }
		}

		part {
            name: "notification.swallow.app_icon";
            type: SWALLOW;
            mouse_events:  0;
            clip_to: "clipper_app_icon";
            description {
				state: "default" 0.0;
				align: 0.0 0.0;
				aspect: 1 1;
				aspect_preference: BOTH;
				min: 48 48;
				max: 48 48;
				rel1 {
					relative: 0.0 0.0;
					offset: 5 5;
				}
				rel2 {
					relative: 1.0 1.0;
					offset: -6 -6;
				}
            }
		}
		/* Message text */

		part {
            name: "notification.textblock.message";
            type: TEXTBLOCK;
            scale: 1;
            mouse_events: 0;
            clip_to: "clipper";
            description {
				state: "default" 0.0;
				align: 0.0 0.0;
				max: 300 99999;
                min: 200 40;    /* **** */
				rel1 {
					to_x: "notification.swallow.app_icon";
					to_y: "notification.text.title";
					relative: 1.0 1.0;
					offset: 10 0;
				}
				rel2 {
					to: "clipper";
					relative: 1.0 1.0;
					offset: -10 -10;
				}
				text {
					style: "notification_style";
					min: 0 1;
				}
            }
		}
	}
	programs {
		program {
			signal: "mouse,in";
			source: "base";
			action: STATE_SET "mouse_over" 0.0;
			transition: ACCELERATE 0.2;
			target: "clipper_base";
			after: "show_base";
		}
		program {
			name: "show_base";
			in: 1.5 0.0;
			action: STATE_SET "default" 0.0;
			transition: ACCELERATE 0.5;
			target: "clipper_base";
		}
		program {
            name: "notification,new";
            signal: "notification,new";
            source: "notification";
            action: STATE_SET "hidden" 0.0;
            target: "clipper_app_icon";
            target: "base";
            after: "notification,new,2";
		}
		program {
            name: "notification,new,2";
            action: STATE_SET "default" 0.0;
            transition: SINUSOIDAL 0.5;
            target: "clipper_app_icon";
            target: "base";
		}
		program {
            name: "notification,del";
            signal: "notification,del";
            source: "notification";
            action: STATE_SET "hidden" 0.0;
            transition: ACCELERATE 0.4;
            target: "clipper_app_icon";
		}
		program {
            name: "close";
            signal: "mouse,down,1";
            source: "notification.close_btn";
            action: SIGNAL_EMIT "notification,close" "theme";
            after: "close_aft";
		}
		program {
            name: "close_aft";
            action: STATE_SET "active" 0.0;
            target: "notification.close_btn";
		}
		program { name: "bt_close_up";
            signal: "mouse,up,*";
            source: "notification.close_btn";
            action: STATE_SET "default" 0.0;
            target: "notification.close_btn";
		}
		program {
            name: "find";
            signal: "mouse,down,1";
            source: "base";
            action: SIGNAL_EMIT "notification,find" "theme";
		}
	}
}
