

#define FILEMAN_ICON(ALIGN, REL1, OFF1, REL2, OFF2)			\
	part {													\
		name: "icon_box_shadow";							\
		type: IMAGE;										\
		mouse_events: 0;									\
		clip_to: "e.swallow.icon_clip";						\
		description {										\
			state: "default" 0.0;							\
			color: 255 255 255 221;							\
			visible: 0;										\
			rel1 {											\
				to: "icon_box";								\
				relative: 0.0 0.0;							\
				offset: -4 -4;								\
			}												\
			rel2 {											\
				to: "icon_box";								\
				relative: 1.0 1.0;							\
				offset: 3 3;								\
			}												\
			image {											\
				normal: "images/fileman_im1.png";			\
				border: 8 8 8 8;							\
			}												\
		}													\
		description {										\
			state: "visible" 0.0;							\
			inherit: "default" 0.0;							\
			visible: 1;										\
		}													\
	}														\
	part {													\
		name: "icon_box";									\
		type: RECT;											\
		mouse_events: 0;									\
		description {										\
			state: "default" 0.0;							\
			visible: 0;										\
			align: 0.5 0.5;									\
			color: 7 7 7 192;								\
			rel1 {											\
				to: "e.swallow.icon";						\
				relative: 0.0 0.0;							\
				offset: -1 -1;								\
			}												\
			rel2 {											\
				to: "e.swallow.icon";						\
				relative: 1.0 1.0;							\
				offset: 0 0;								\
			}												\
		}													\
		description {										\
			state: "visible" 0.0;							\
			inherit: "default" 0.0;							\
			visible: 1;										\
		}													\
	}														\
	part {													\
		name: "icon_box_bg";								\
		type: IMAGE;										\
		mouse_events: 0;									\
		clip_to: "e.swallow.icon_clip";						\
		description {										\
			state: "default" 0.0;							\
			visible: 0;										\
			rel1 {											\
				to: "icon_box";								\
				relative: 0.0 0.0;							\
				offset: 1 1;								\
			}												\
			rel2 {											\
				to: "icon_box";								\
				relative: 1.0 1.0;							\
				offset: -2 -2;								\
			}												\
			image {											\
				normal: "images/fileman_im2.png";			\
			}												\
			fill {											\
				smooth: 0;									\
				size {										\
					relative: 0 0;							\
					offset: 16 16;							\
				}											\
			}												\
		}													\
		description {										\
			state: "visible" 0.0;							\
			inherit: "default" 0.0;							\
			visible: 1;										\
		}													\
	}														\
	part {													\
		name: "icon0";										\
		type: RECT;											\
		mouse_events: 0;									\
		description {										\
			state: "default" 0.0;							\
			align: ALIGN;									\
			aspect: 1.0 1.0;								\
			aspect_preference: VERTICAL;					\
			color: 0 0 0 0;									\
			visible: 0;										\
			rel1 {											\
				relative: REL1;								\
				offset: OFF1;								\
			}												\
			rel2 {											\
				relative: REL2;								\
				offset: OFF2;								\
			}												\
		}													\
	}														\
	part {													\
		name: "icon";										\
		type: RECT;											\
		mouse_events: 0;									\
		description {										\
			state: "default" 0.0;							\
			align: 0.5 0.5;									\
			aspect: 1.0 1.0;								\
			aspect_preference: BOTH;						\
			color: 0 0 0 0;									\
			visible: 0;										\
			rel1 {											\
				to: "icon0";								\
			}												\
			rel2 {											\
				to: "icon0";								\
			}												\
		}													\
		description {										\
			state: "min" 0.0;								\
			inherit: "default" 0.0;							\
			max: 0 0;										\
		}													\
		description {										\
			state: "max" 0.0;								\
			inherit: "default" 0.0;							\
			rel1 {											\
				to: "icon0";								\
				relative: 0.0 0.0;							\
				offset: -4 -4;								\
			}												\
			rel2 {											\
				to: "icon0";								\
				relative: 1.0 1.0;							\
				offset: 3 3;								\
			}												\
		}													\
		description {										\
			state: "max2" 0.0;								\
			inherit: "default" 0.0;							\
			rel1 {											\
				to: "icon0";								\
				relative: 0.0 0.0;							\
				offset: -2 -2;								\
			}												\
			rel2 {											\
				to: "icon0";								\
				relative: 1.0 1.0;							\
				offset: 1 1;								\
			}												\
		}													\
	}														\
	part {													\
		name: "e.swallow.icon";								\
		type: SWALLOW;										\
		clip_to: "e.swallow.icon_clip";						\
		description {										\
			state: "default" 0.0;							\
			aspect: 1.0 1.0;								\
			aspect_preference: BOTH;						\
			align: 0.5 0.5;									\
			color: 255 255 255 128;							\
			rel1 {											\
				to: "icon";									\
			}												\
			rel2 {											\
				to: "icon";									\
			}												\
		}													\
	}														\
	part {													\
		name: "e.swallow.icon_clip";						\
		type: RECT;											\
		mouse_events: 0;									\
		description {										\
			state: "default" 0.0;							\
			color: 235 235 235 255;							\
		}													\
		description {										\
			state: "hover" 0.0;								\
			color: 255 255 255 255;							\
		}													\
		description {										\
			state: "selected" 0.0;							\
			color: 229 229 229 255;							\
		}													\
	}														\

#define LIST_DND_ACTION										\
	part {													\
		name: "dnd_action";									\
		type: IMAGE;										\
		mouse_events: 0;									\
		repeat_events: 0;									\
		description {										\
			state: "default" 0.0;							\
			visible: 0;										\
		}													\
		description {										\
			state: "visible" 0.0;							\
			min: 24 24;										\
			max: 24 24;										\
			fixed: 1 1;										\
			visible: 1;										\
			image.normal: "images/icons/icon_efm_dnd_ask.png";\
			rel1 {											\
				to_x: "icon";								\
				to_y: "icon";								\
				relative: 0.95 0.85;						\
				offset: 0 0;								\
			}												\
			rel2 {											\
				to: "icon";									\
				relative: 1.0 0.85;							\
				offset: -1 -1;								\
			}												\
		}													\
		description {										\
			state: "copy" 0.0;								\
			inherit: "visible" 0.0;							\
			image.normal: "images/icons/icon_efm_dnd_copy.png";	\
		}													\
		description {										\
			state: "ask" 0.0;								\
			inherit: "visible" 0.0;							\
			image.normal: "images/icons/icon_efm_dnd_ask.png";		\
		}													\
		description {										\
			state: "move" 0.0;								\
			inherit: "visible" 0.0;							\
			image.normal: "images/icons/icon_efm_dnd_move.png";	\
		}													\
	}														\

#define FILEMAN_DND_PROGS									\
	program {												\
		name: "ask";										\
		signal: "e,state,ask";								\
		source: "e";										\
		action: STATE_SET "ask" 0.0;						\
		target: "dnd_action";								\
	}														\
	program {												\
		name: "move";										\
		signal: "e,state,move";								\
		source: "e";										\
		action: STATE_SET "move" 0.0;						\
		target: "dnd_action";								\
	}														\
	program {												\
		name: "copy";										\
		signal: "e,state,copy";								\
		source: "e";										\
		action: STATE_SET "copy" 0.0;						\
		target: "dnd_action";								\
	}														\

#define FILEMAN_LIST_PROGS									\
	program {												\
		name: "active_list";								\
		signal: "e,state,selected";							\
		source: "e";										\
		action: STATE_SET "selected" 0.0;					\
		transition: DECELERATE 0.3;							\
		target: "base";										\
	}														\
	program {												\
		name: "unactive_list";								\
		signal: "e,state,unselected";						\
		source: "e";										\
		action: STATE_SET "default" 0.0;					\
		transition: DECELERATE 0.3;							\
		target: "base";										\
	}														\
	program {												\
		name: "active_text";								\
		signal: "e,state,selected";							\
		source: "e";										\
		action: STATE_SET "selected" 0.0;					\
		target: "e.text.label";								\
	}														\
	program {												\
		name: "unactive_text";								\
		signal: "e,state,unselected";						\
		source: "e";										\
		action: STATE_SET "default" 0.0;					\
		target: "e.text.label";								\
	}														\

#define FILEMAN_THUMB_PROGS									\
	program {												\
		name: "thumb_gen";									\
		signal: "e,action,thumb,gen";						\
		source: "e";										\
		action: STATE_SET "visible" 0.0;					\
		target: "icon_box";									\
		/* target: "icon_box_bg"; */						\
		target: "icon_box_shadow";							\
		/* after: "thumb_gen2"; */							\
		after: "thumb_gen6";								\
	}														\
	program {												\
		name: "thumb_gen-";									\
		signal: "e,action,thumb,gen,alpha";					\
		source: "e";										\
		action: STATE_SET "visible" 0.0;					\
		target: "icon_box";									\
		target: "icon_box_bg";								\
		target: "icon_box_shadow";							\
		/*after: "thumb_gen2";*/							\
	}														\
	program {												\
		name: "thumb_gen2";									\
		action: STATE_SET "min" 0.0;						\
		target: "icon";										\
		after: "thumb_gen3";								\
	}														\
	program {												\
		name: "thumb_gen3";									\
		action: STATE_SET "max" 0.0;						\
		target: "icon";										\
		transition: DECELERATE 0.25;						\
		after: "thumb_gen4";								\
	}														\
	program {												\
		name: "thumb_gen4";									\
		action: STATE_SET "default" 0.0;					\
		target: "icon";										\
		after: "thumb_gen5";								\
	}														\
	program {												\
		name: "thumb_gen5";									\
		action: STATE_SET "max2" 0.0;						\
		target: "icon";										\
		after: "thumb_gen6";								\
	}														\
	program {												\
		name: "thumb_gen6";									\
		action: STATE_SET "default" 0.0;					\
		target: "icon";										\
	}														\


#define FILEMAN_VOL_PROGS									\
	program {												\
		name: "vol_off";									\
		signal: "e,state,volume,off";						\
		source: "e";										\
		action: STATE_SET "default" 0.0;					\
		target: "vol_state";								\
	}														\
	program {												\
		name: "vol_unmounted";								\
		signal: "e,state,volume,unmounted";					\
		source: "e";										\
		action: STATE_SET "unmounted" 0.0;					\
		target: "vol_state";								\
	}														\
	program {												\
		name: "vol_mounted";								\
		signal: "e,state,volume,mounted";					\
		source: "e";										\
		action: STATE_SET "mounted" 0.0;					\
		target: "vol_state";								\
	}

#define LIST_LABEL										\
	part {												\
		name: "e.text.label";							\
		type: TEXT;										\
		effect: TEXT_EFFECT;							\
		scale: 1;										\
		mouse_events: 0;								\
		description {									\
			state: "default" 0.0;						\
			min: 16 16;									\
			rel1 {										\
				to_x: "icon0";							\
				relative: 1.0 0.0;						\
				offset: 6 6;							\
			}											\
			rel2 {										\
				relative: 1.0 1.0;						\
				offset: -5 -3;							\
			}											\
			TEXT_COLOR;									\
			TEXT_NORMAL("ilist_item", 0.0 0.5, 1 1);	\
			text.ellipsis: -1;							\
			color_class: "ilist_item";					\
		}												\
		description {									\
			state: "selected" 0.0;						\
			inherit: "default" 0.0;						\
		    TEXT_COLOR_SELECTED;						\
		    color_class: "ilist_item_selected";			\
		}												\
	}

#define FILEMAN_VOL_STATE(MIN, REL1, REL2)						\
	part {														\
		name: "vol_state";										\
		type: IMAGE;											\
		mouse_events: 0;										\
		repeat_events: 0;										\
		description {											\
			state: "default" 0.0;								\
			image.normal: "images/icons/icon_efm_vol_unmounted.png";\
			color: 0 0 0 0;										\
		}														\
		description {											\
			state: "visible" 0.0;								\
			aspect: 1.0 1.0;									\
			aspect_preference: BOTH;							\
			align: 1.0 1.0;										\
			min: MIN;											\
			image.normal: "images/icons/icon_efm_vol_unmounted.png";\
			rel1 {												\
				relative: REL1;									\
				to: "icon";										\
			}													\
			rel2 {												\
				relative: REL2;									\
				to: "icon";										\
			}													\
		}														\
		description {											\
			state: "unmounted" 0.0;								\
			inherit: "visible" 0.0;								\
			image.normal: "images/icons/icon_efm_vol_unmounted.png";	\
		}														\
		description {											\
			state: "mounted" 0.0;								\
			inherit: "visible" 0.0;								\
			image.normal: "images/icons/icon_efm_vol_mounted.png";		\
		}														\
	}

#define FILEMAN_GRID_PROGS						\
	program {									\
		name: "event_in";						\
		signal: "mouse,in";						\
		source: "event";						\
		action: STATE_SET "hover" 0.0;			\
		target: "e.swallow.icon_clip";			\
	}											\
	program {									\
		name: "event_out";						\
		signal: "mouse,out";					\
		source: "event";						\
		action: STATE_SET "default" 0.0;		\
		target: "e.swallow.icon_clip";			\
	}											\
	program {									\
		name: "event_selected";					\
		signal: "e,state,selected";				\
		source: "e";							\
		action: STATE_SET "selected" 0.0;		\
		transition: ACCELERATE 0.0;				\
		target: "e.swallow.icon_clip";			\
		target: "e.text.label";					\
		target: "filename_overlay";				\
	}											\
	program {									\
		name: "event_unselected";				\
		signal: "e,state,unselected";			\
		source: "e";							\
		action: STATE_SET "default" 0.0;		\
		transition: DECELERATE 0.0;				\
		target: "e.swallow.icon_clip";			\
		target: "e.text.label";					\
		target: "filename_overlay";				\
	}

#define LIST_ICON \
	FILEMAN_ICON(0.0 0.5, 0.0 0.0, 4 4, 0.0 1.0, 4 -5)


#define GRID_ICON \
	FILEMAN_ICON(0.5 0.5, 0.0 0.0, 5 5, 1.0 1.0, -9 -40)

#define LIST_VOL_STATE \
	FILEMAN_VOL_STATE(0 0, 0.5 0.0, 1.0 1.0)

#define GRID_VOL_STATE \
	FILEMAN_VOL_STATE(16 16, 0.75 0.0, 1.0 1.0)

group { 
	name: "e/fileman/default/list/fixed";
	alias: "e/fileman/desktop/list/fixed";
	alias: "e/fileman/default/list/variable";
	data.item: "stacking" "below";
	data.item: "selectraise" "on";
	parts {

		part {
			name: "base";
			mouse_events: 0;
			type: RECT;
			description {
				state: "default" 0.0;
				color: COLOR_LIST_BG;
				min: 100 30;
			}
			description {
				state: "selected" 0.0;
				color: COLOR_LIST_BG_ACTIVE;
			}
		}
		LIST_ICON;
		LIST_LABEL;
		LIST_DND_ACTION;
		LIST_VOL_STATE;
		EVENT_RECT;
         part {
            name: "label_event";
            type: RECT;
            mouse_events: 1;
            repeat_events: 1;
            ignore_flags: ON_HOLD;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
               rel1.to: "e.text.label";
               rel2.to: "e.text.label";
            }
         }
         part {
            name: "e.swallow.entry";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               rel1.to: "e.text.label";
               rel2.to: "e.text.label";
            }
         }
	}
	programs {
         program {
            name: "label_click";
            signal: "mouse,clicked,1";
            source: "label_event";
            action: SIGNAL_EMIT "e,action,label,click" "e";
         }
		FILEMAN_THUMB_PROGS;
		FILEMAN_LIST_PROGS;
		FILEMAN_DND_PROGS;
		FILEMAN_VOL_PROGS;
	}
}
group {
	name: "e/fileman/default/list_odd/fixed";
	alias: "e/fileman/desktop/list_odd/fixed";
	alias: "e/fileman/default/list_odd/variable";
	data.item: "stacking" "below";
	data.item: "selectraise" "on";
	parts {

		part {
			name: "base";
			mouse_events: 0;
			type: RECT;
			description {
				state: "default" 0.0;
				color: COLOR_LIST_BG_ODD;
			}
			description {
				state: "selected" 0.0;
				color: COLOR_LIST_BG_ACTIVE;
			}
		}
		LIST_ICON;
		LIST_LABEL;		
		LIST_DND_ACTION;
		LIST_VOL_STATE;
		EVENT_RECT;
  part {
     name: "label_event";
     type: RECT;
     mouse_events: 1;
     repeat_events: 1;
     ignore_flags: ON_HOLD;
     description {
        state: "default" 0.0;
        color: 0 0 0 0;
        rel1.to: "e.text.label";
        rel2.to: "e.text.label";
     }
  }
         part {
            name: "e.swallow.entry";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               rel1.to: "e.text.label";
               rel2.to: "e.text.label";
            }
         }
	}
	programs {
         program {
            name: "label_click";
            signal: "mouse,clicked,1";
            source: "label_event";
            action: SIGNAL_EMIT "e,action,label,click" "e";
         }
		FILEMAN_LIST_PROGS;
		FILEMAN_THUMB_PROGS;
		FILEMAN_DND_PROGS;
		FILEMAN_VOL_PROGS;
	}
}
group {
	name: "e/fileman/default/icon/variable";
	alias: "e/fileman/default/icon/fixed";
	parts {
		GRID_ICON;

		part {
			name: "filename_overlay";
			type: IMAGE;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				align: 0.5 0.5;
				visible: 0;
				rel1 {
					to: "e.text.label";
					relative: 0.0 0.0;
					offset: -3 -3;
				}
				rel2 {
					to: "e.text.label";
					relative: 1.0 1.0;
					offset: 2 2;
				}
				image {
					normal: "images/fileman_im4.png";
					border: 8 8 9 8;
				}
			}
			description {
				state: "selected" 0.0;
				inherit: "default" 0.0;
				visible: 1;
			}
		}

		part {
			name: "e.text.label";
			type: TEXTBLOCK;
			scale: 1;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				align: 0.5 0.0;
				fixed: 1 1;
				color: 30 30 30 255;
				rel1 {
					to_y: "icon0";
					relative: 0.0 1.0;
					offset: 4 3;
				}
				rel2 {
					relative: 1.0 1.0;
					offset: -5 -1;
				}
				color_class: "fileman_icon_label_selected";
				text {
					style: "fileman_icon_name";
					min: 0 1;
					align: 0.5 0.0;
				}
			}
			description {
				state: "selected" 0.0;
				inherit: "default" 0.0;
				text {
					style: "fileman_icon_name_full";
					min: 0 1;
					max: 0 1;
				}
			}
		}
		LIST_DND_ACTION;
		GRID_VOL_STATE;

		part {
			name: "event";
			type: RECT;
			description {
				state: "default" 0.0;
				color: 0 0 0 0;
				rel1.offset: 10 10;
				rel2.offset: -11 -11;
			}
		}
  part {
     name: "label_event";
     type: RECT;
     mouse_events: 1;
     repeat_events: 1;
     ignore_flags: ON_HOLD;
     description {
        state: "default" 0.0;
        color: 0 0 0 0;
        rel1.to: "e.text.label";
        rel2.to: "e.text.label";
     }
  }
         part {
            name: "e.swallow.entry";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               rel1.to: "e.text.label";
               rel2.to: "e.text.label";
            }
         }
	}
	programs {
         program {
            name: "label_click";
            signal: "mouse,clicked,1";
            source: "label_event";
            action: SIGNAL_EMIT "e,action,label,click" "e";
         }
		FILEMAN_GRID_PROGS;
		FILEMAN_THUMB_PROGS;
		FILEMAN_DND_PROGS;
		FILEMAN_VOL_PROGS;
	}
}
group {
	name: "e/fileman/desktop/icon/variable";
	alias: "e/fileman/desktop/icon/fixed";
	parts {
		GRID_ICON;

		part {
			name: "filename_overlay";
			type: IMAGE;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				align: 0.5 0.5;
				visible: 0;
				rel1 {
					to: "e.text.label";
					relative: 0.0 0.0;
					offset: -3 -3;
				}
				rel2 {
					to: "e.text.label";
					relative: 1.0 1.0;
					offset: 2 2;
				}
				image {
					normal: "images/fileman_im4.png";
					border: 8 8 9 8;
				}
			}
			description {
				state: "selected" 0.0;
				inherit: "default" 0.0;
				visible: 1;
			}
		}

		part {
			name: "e.text.label";
			type: TEXTBLOCK;
			scale: 1;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				align: 0.5 0.0;
				fixed: 1 1;
				color: 225 225 225 255;
				rel1 {
					to_y: "icon0";
					relative: 0.0 1.0;
					offset: 4 3;
				}
				rel2 {
					relative: 1.0 1.0;
					offset: -5 -1;
				}
				color_class: "fileman_icon_label_selected";
				text {
					style: "fileman_desktop_icon_name";
					min: 0 1;
					align: 0.5 0.0;
				}
			}
			description {
				state: "selected" 0.0;
				inherit: "default" 0.0;
				color: 255 255 255 255;
				text {
					style: "fileman_desktop_icon_name_full";
					min: 0 1;
					max: 0 1;
				}
			}
		}
		LIST_DND_ACTION;
		GRID_VOL_STATE;

		part {
			name: "event";
			type: RECT;
			description {
				state: "default" 0.0;
				color: 0 0 0 0;
				rel1.offset: 10 10;
				rel2.offset: -11 -11;
			}
		}
         part {
            name: "label_event";
            type: RECT;
            mouse_events: 1;
            repeat_events: 1;
            ignore_flags: ON_HOLD;
            description {
               state: "default" 0.0;
               color: 0 0 0 0;
               rel1.to: "e.text.label";
               rel2.to: "e.text.label";
            }
         }
         part {
            name: "e.swallow.entry";
            type: SWALLOW;
            description {
               state: "default" 0.0;
               rel1.to: "e.text.label";
               rel2.to: "e.text.label";
            }
         }
	}
	programs {

         program {
            name: "label_click";
            signal: "mouse,clicked,1";
            source: "label_event";
            action: SIGNAL_EMIT "e,action,label,click" "e";
         }
		FILEMAN_GRID_PROGS;
		FILEMAN_THUMB_PROGS;
		FILEMAN_DND_PROGS;
		FILEMAN_VOL_PROGS;
	}
}
group {
	name: "e/fileman/default/window/main";
	parts {

		part {
			name: "background";
			type: RECT;
			description {
				state: "default" 0.0;
				color: 245 245 245 255;
				color_class: "fileman_base";
			}
		}
		part {
			name: "base";
			type: IMAGE;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				color: 205 204 188 2;
				visible: 0;
				image {
					normal: "images/wallpaper_pat1.png";
				}
				fill {
					smooth: 0;
					size {
						relative: 0 0;
						offset: 280 280;
					}
				}
			}
		}

		part {
			name: "e.swallow.bg";
			type: SWALLOW;
			mouse_events: 0;
			description {
				state: "default" 0.0;
			}
		}

		part {
			name: "top_shadow";
			type: IMAGE;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				min: 0 10;
				max: 9999 10;
				color: 255 255 255 129;
				rel1 {
					to: "base";
					relative: 0.0 0.0;
					offset: 0 8;
				}
				rel2 {
					to: "base";
					relative: 1.0 0.0;
					offset: -1 -1;
				}
				image {
					normal: "images/fileman_im5.png";
					border: 1 1 1 1;
				}
				fill {
					smooth: 0;
				}
			}
		}
	  part { name: "clip_favorites";
		  type: RECT;
		  description { state: "default" 0.0;
			  rel1.to: "e.swallow.favorites";
			  rel2.to: "e.swallow.favorites";
			  visible: 0;
		  }
		  description { state: "fav" 0.0;
			  inherit: "default" 0.0;
			  visible: 1;
		  }
		  
	  }
	  part { name: "favorites_rect";
		  type: RECT;
		  clip_to: "clip_favorites";
		  description { state: "default" 0.0;
			  color: 0 0 0 20;
			  rel1.to: "clip_favorites";
			  rel2.to: "clip_favorites";
			}
	  }
      part { name: "e.swallow.favorites";
         type: SWALLOW;
         description { state: "default" 0.0;
            align: 0.0 1.0;
            rel1.offset: 0 0;
            rel1.to: "region";
            rel2.offset: 0 -1;
            rel2.relative: 0.0 1.0;
            rel2.to: "region";
            fixed: 1 0;
         }
      }
      part { name: "e.swallow.content"; 
         type: SWALLOW;
         description { state: "default" 0.0;
            rel1.offset: 0 0;
            rel1.to: "region";
            rel2.offset: -1 -1;
            rel2.to: "region";
            align: 1.0 1.0;
         }
         description { state: "fav" 0.0;
            inherit: "default" 0.0;
            rel1.relative: 1.0 0.0;
            rel1.to_x: "e.swallow.favorites";
         }
      }
      part { name: "e.swallow.toolbar"; 
         type: SWALLOW;
         description { state: "default" 0.0;
         }
         description { state: "tb_top" 0.0;
            align: 0.5 0.0;
            rel1.offset: 0 0;
            rel2.offset: -1 0;
            rel2.relative: 1.0 0.0;
            fixed: 0 1;
         }
         description { state: "tb_bottom" 0.0;
            align: 0.5 1.0;
            rel1.offset: 0 0;
            rel1.relative: 0.0 1.0;
            rel2.offset: -1 0;
            fixed: 0 1;
         }
      }

      part { name: "region"; 
         type: SPACER;
         description { state: "default" 0.0;
         }
         description { state: "tb_top" 0.0;
            inherit: "default" 0.0;
            rel1.relative: 0.0 1.0;
            rel1.to_y: "e.swallow.toolbar";
         }
         description { state: "tb_bottom" 0.0;
            inherit: "default" 0.0;
            rel2.relative: 1.0 0.0;
            rel2.to_y: "e.swallow.toolbar";
         }
         description { state: "tb_left" 0.0;
            inherit: "default" 0.0;
            rel1.relative: 1.0 0.0;
            rel1.to_x: "e.swallow.toolbar";
         }
         description { state: "tb_right" 0.0;
            inherit: "default" 0.0;
            rel2.relative: 0.0 1.0;
            rel2.to_x: "e.swallow.toolbar";
         }
      }
   }
   programs {
      program {
         signal: "e,favorites,enabled"; source: "e";
         action: STATE_SET "fav" 0.0;
         target: "e.swallow.content";
         target: "clip_favorites";
      }
      program {
         signal: "e,favorites,disabled"; source: "e";
         action: STATE_SET "default" 0.0;
         target: "e.swallow.content";
         target: "clip_favorites";
      }
      program {
         signal: "e,toolbar,left"; source: "e";
         action: STATE_SET "tb_left" 0.0;
         target: "region";
      }
      program {
         signal: "e,toolbar,right"; source: "e";
         action: STATE_SET "tb_right" 0.0;
         target: "region";
      }
      program {
         signal: "e,toolbar,top"; source: "e";
         action: STATE_SET "tb_top" 0.0;
         target: "e.swallow.toolbar";
         target: "region";
      }
      program {
         signal: "e,toolbar,bottom"; source: "e";
         action: STATE_SET "tb_bottom" 0.0;
         target: "e.swallow.toolbar";
         target: "region";
      }
      program {
         signal: "e,toolbar,disabled"; source: "e";
         action: STATE_SET "default" 0.0;
         target: "e.swallow.toolbar";
         target: "region";
      }
   }
}

/* controls aspect of efm window overlay */
group
   { name: "e/fileman/default/overlay";
   alias: "e/fileman/desktop/overlay";
   parts {
      part { name: "typebuf_clip"; type: RECT;
         description { state: "default" 0.0;
            visible: 0;
            color: 255 255 255 0;
         }
         description { state: "active" 0.0;
            visible: 1;
            color: 255 255 255 255;
         }
      }
      part { name: "busy_clip"; type: RECT;
         description { state: "default" 0.0;
            visible: 0;
            color: 255 255 255 0;
         }
         description { state: "active" 0.0;
            visible: 1;
            color: 255 255 255 255;
         }
      }
      part { name: "busy_bevel"; mouse_events: 0;
         clip_to: "busy_clip";
         description { state: "default" 0.0;
            rel1.offset: -12 0;
            rel1.to: "e.text.busy_label";
            rel2.offset: 11 -1;
            rel2.to: "e.text.busy_label";
            image.normal: "images/ibar_im0.png";
			image.border: 5 5 5 5;
			color: 0 0 0 128;
            fill.smooth: 0;
         }
      }
      part { name: "e.text.busy_label"; type: TEXT; mouse_events: 0;
         clip_to: "busy_clip";
         effect: SHADOW BOTTOM;
         scale: 1;
         description { state: "default" 0.0;
            rel1.relative: 1.0 0.0;
            rel1.offset: 12 0;
            rel1.to: "busy_shadow";
            rel2.offset: 12 -1;
            rel2.to: "busy_shadow";
            align: 0.0 0.5;
            color: 255 255 255 255;
            text { font: FN; size: 10;
               min: 1 1;
               ellipsis: -1;
               align: 0.0 0.5;
               text_class: "textblock_style2";
            }
         }
      }
      part { name: "busy_shadow"; mouse_events: 0;
         clip_to: "busy_clip";
         description { state: "default" 0.0;
            fixed: 1 1;
            image.normal: "images/cursor_shadow.png";
            min: 40 40;
            max: 40 40;
            rel1.relative: 0.0 1.0;
            rel1.offset: 7 -8;
            rel2.relative: 0.0 1.0;
            rel2.offset: 7 -8;
            align: 0.0 1.0;
            fixed: 1 1;
         }
      }
      part { name: "busy_spinner"; mouse_events: 0;
         clip_to: "busy_clip";
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.to: "busy_shadow";
            rel2.to: "busy_shadow";
            image.normal: "images/cursor_main.png";
            map.on: 1;
            map.smooth: 1;
            map.rotation.center: "busy_shadow";
         }
         description { state: "spin" 0.0;
            inherit: "default" 0.0;
            map.rotation.z: 360;
         }
      }
      part { name: "busy_up"; mouse_events: 0;
         clip_to: "busy_clip";
         description { state: "default" 0.0;
            fixed: 1 1;
            image.normal: "images/cursor_up.png";
            rel1.to: "busy_shadow";
            rel2.to: "busy_shadow";
         }
      }
      part { name: "e.text.typebuf_label"; type: TEXT; mouse_events: 0;
         clip_to: "typebuf_clip";
         effect: SHADOW BOTTOM;
         scale: 1;
         description { state: "default" 0.0;
            rel1.relative: 0.5 0.5;
            rel1.offset: -8 -8;
            rel2.relative: 0.5 0.5;
            rel2.offset: 7 7;
            color: 255 255 255 255;
            text { font: FN; size: 10;
               min: 1 1;
               ellipsis: -1;
               align: 0.5 0.5;
               text_class: "textblock_style2";
            }
         }
      }
   }
   programs {
      program { name: "spin";
         signal: "e,state,busy,start"; source: "e";
         action: STATE_SET "spin" 0.0;
         transition: LINEAR 1.0;
         target: "busy_spinner";
         after: "spin2";
      }
      program { name: "spin2";
         action: STATE_SET "default" 0.0;
         target: "busy_spinner";
         after: "spin";
      }
      program {
         signal: "e,state,busy,start"; source: "e";
         action: STATE_SET "active" 0.0;
         transition: SINUSOIDAL 0.25;
         target: "busy_clip";
      }
      program {
         signal: "e,state,busy,stop"; source: "e";
         action: STATE_SET "default" 0.0;
         transition: SINUSOIDAL 1.0;
         target: "busy_clip";
         after: "spin3";
      }
      program { name: "spin3";
         action: ACTION_STOP;
         target: "spin";
         target: "spin2";
         after: "spin4";
      }
      program { name: "spin4";
         action: STATE_SET "default" 0.0;
         target: "busy_spinner";
      }
      program {
         signal: "e,state,typebuf,start"; source: "e";
         action: STATE_SET "active" 0.0;
         transition: SINUSOIDAL 0.25;
         target: "typebuf_clip";
      }
      program {
         signal: "e,state,typebuf,stop"; source: "e";
         action: STATE_SET "default" 0.0;
         transition: SINUSOIDAL 1.0;
         target: "typebuf_clip";
      }
   }
}

group {
	name: "e/fileman/default/list/drop_between";
	alias: "e/fileman/default/list/drop_in";
	alias: "e/fileman/desktop/list/drop_in";
	alias: "e/fileman/desktop/list/drop_between";
	parts {

		part {
			name: "bg";
			type: IMAGE;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				color: 255 255 255 255;
				rel1 {
					relative: 0.0 0.0;
				}
				rel2 {
					relative: 1.0 1.0;
				}
				image {
					normal: "images/fileman_im0.png";
					border: 26 26 26 26;
				}
			}
			description {
				state: "grow+fade" 0.0;
				color: 255 255 255 0;
				rel1 {
					relative: -0.25 -0.25;
				}
				rel2 {
					relative: 1.25 1.25;
				}
				image {
					normal: "images/fileman_im0.png";
					border: 26 26 26 26;
				}
			}
		}
	}
	programs {
		program {
			name: "go";
			signal: "e,state,unselected";
			source: "e";
			action: STATE_SET "grow+fade" 0.0;
			transition: LINEAR 0.25;
			target: "bg";
		}
		program {
	 		name: "stop";
	 		signal: "e,state,selected";
	 		source: "e";
			action: STATE_SET "default" 0.0;
			transition: LINEAR 0.25;
			target: "bg";
		}
	}
}


group { name: "e/fileman/default/scrollframe";
   parts {
// vert bar ////////////////////////////////////////////////////////////////
      part { name: "sb_vbar_show"; type: RECT;
         description { state: "default" 0.0;
            rel1.offset: -11 -11;
            rel2.offset: 10 10;
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "sb_vbar"; type: RECT;
         description { state: "default" 0.0;
            min: 15 15;
            align: 1.0 0.0;
            rel1.relative: 1.0 0.0;
            rel1.offset: -1 0;
            rel2.relative: 1.0 0.0;
            rel2.to_y: "sb_hbar";
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            min: 0 0;
            max: 0 99999;
         }
      }
      part { name: "sb_vbar_base"; type: RECT;
         clip_to: "sb_vbar";
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1.relative: 0.0 1.0;
            rel1.to: "sb_vbar_a1";
            rel2.relative: 1.0 0.0;
            rel2.to: "sb_vbar_a2";
         }
      }
      part { name: "sb_vbar_p1"; type: RECT;
         clip_to: "sb_vbar";
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1.relative: 0.0 1.0;
            rel1.to: "sb_vbar_a1";
            rel2.relative: 1.0 0.0;
            rel2.to: "e.dragable.vbar";
         }
      }
      part { name: "sb_vbar_p2"; type: RECT;
         clip_to: "sb_vbar";
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1.relative: 0.0 1.0;
            rel1.to: "e.dragable.vbar";
            rel2.relative: 1.0 0.0;
            rel2.to: "sb_vbar_a2";
         }
      }
      part { name: "e.dragable.vbar"; type: RECT;
         clip_to: "sb_vbar";
         dragable.x: 0 0 0;
         dragable.y: 1 1 0;
         dragable.confine: "sb_vbar_base";
         description { state: "default" 0.0;
            min: 16 36;
            max: 16 99999;
            rel1.relative: 0.5  0.5;
            rel1.to: "sb_vbar_base";
            rel2.relative: 0.5  0.5;
            rel2.to: "sb_vbar_base";
            color: 0 0 0 0;
         }
      }
      part { name: "sb_vbar_a1"; type: RECT;
         clip_to: "sb_vbar";
         description { state: "default" 0.0;
            min: 16 16;
            align: 0.5 0.0;
            aspect: 1.0 1.0; aspect_preference: HORIZONTAL;
            color: 0 0 0 0;
            rel1.to: "sb_vbar";
            rel2.to: "sb_vbar";
            rel1.offset: 1 0;
            rel2.relative: 1.0 0.0;
            rel2.offset: -1 0;
         }
      }
      part { name: "sb_vbar_a2"; type: RECT;
         clip_to: "sb_vbar";
         description { state: "default" 0.0;
            min: 16 16;
            align: 0.5 1.0;
            aspect: 1.0 1.0; aspect_preference: HORIZONTAL;
            color: 0 0 0 0;
            rel1.to: "sb_vbar";
            rel1.offset: 1 -1;
            rel1.relative: 0.0 1.0;
            rel2.to: "sb_vbar";
         }
      }
      program {
         signal: "e,action,show,vbar"; source: "e";
         action: STATE_SET "default" 0.0;
         target: "sb_vbar";
         target: "sb_vbar_show";
      }
      program {
         signal: "e,action,hide,vbar"; source: "e";
         action: STATE_SET "hidden" 0.0;
         target: "sb_vbar";
         target: "sb_vbar_show";
      }
      program {
         signal: "mouse,down,1*"; source: "sb_vbar_a1";
         action: STATE_SET "clicked" 0.0;
         //~ target: "sb_vbar_a1";
         target: "arrow1_vbar";
      }
      program {
         signal: "mouse,down,1*"; source: "sb_vbar_a1";
         action: DRAG_VAL_STEP 0.0 -1.0;
         target: "e.dragable.vbar";
      }
      program {
         signal: "mouse,up,1"; source: "sb_vbar_a1";
         action: STATE_SET "default" 0.0;
         target: "sb_vbar_a1";
         target: "arrow1_vbar";
      }
      program {
         signal: "mouse,down,1*"; source: "sb_vbar_a2";
         action: STATE_SET "clicked" 0.0;
         //~ target: "sb_vbar_a2";
         target: "arrow2_vbar";
      }
      program {
         signal: "mouse,down,1*"; source: "sb_vbar_a2";
         action: DRAG_VAL_STEP 0.0 1.0;
         target: "e.dragable.vbar";
      }
      program {
         signal: "mouse,up,1"; source: "sb_vbar_a2";
         action: STATE_SET "default" 0.0;
         target: "sb_vbar_a2";
         target: "arrow2_vbar";
      }
      program {
         signal: "mouse,down,1*"; source: "sb_vbar_p1";
         action: DRAG_VAL_PAGE 0.0 -1.0;
         target: "e.dragable.vbar";
      }
      program {
         signal: "mouse,down,1*"; source: "sb_vbar_p2";
         action: DRAG_VAL_PAGE  0.0 1.0;
         target: "e.dragable.vbar";
      }

// horiz bar /////////////////////////////////////////////////////////////
      part { name: "sb_hbar_show"; type: RECT;
         description { state: "default" 0.0;
            rel1.offset: -11 -11;
            rel2.offset: 10 10;
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "sb_hbar"; type: RECT; mouse_events: 0;
         description { state: "default" 0.0;
            min: 15 15;
            align: 0.0 1.0;
            rel1.relative: 0.0 1.0;
            rel1.offset: 0 -1;
            rel2.relative: 0.0 1.0;
            rel2.to_x: "sb_vbar";
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            min: 0 0;
            max: 99999 0;
         }
      }
      part { name: "sb_hbar_base"; type: RECT;
         clip_to: "sb_hbar";
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1.relative: 1.0 0.0;
            rel1.to: "sb_hbar_a1";
            rel2.relative: 0.0 1.0;
            rel2.to: "sb_hbar_a2";
         }
      }
      part { name: "sb_hbar_p1"; type: RECT;
         clip_to: "sb_hbar";
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1.relative: 1.0 0.0;
            rel1.to: "sb_hbar_a1";
            rel2.relative: 0.0 1.0;
            rel2.to: "e.dragable.hbar";
         }
      }
      part { name: "sb_hbar_p2"; type: RECT;
         clip_to: "sb_hbar";
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1.relative: 1.0 0.0;
            rel1.to: "e.dragable.hbar";
            rel2.relative: 0.0 1.0;
            rel2.to: "sb_hbar_a2";
         }
      }
      part { name: "e.dragable.hbar"; type: RECT;
         clip_to: "sb_hbar";
         dragable.x: 1 1 0;
         dragable.y: 0 0 0;
         dragable.confine: "sb_hbar_base";
         description { state: "default" 0.0;
            min: 36 16;
            max: 99999 16;
            rel1.relative: 0.5  0.5;
            rel1.to: "sb_hbar_base";
            rel2.relative: 0.5  0.5;
            rel2.to: "sb_hbar_base";
            color: 0 0 0 0;
         }
      }
      part { name: "sb_hbar_a1"; type: RECT;
         clip_to: "sb_hbar";
         description { state: "default" 0.0;
            min: 16 16;
            align: 0.0 0.5;
            aspect: 1.0 1.0; aspect_preference: VERTICAL;
            color: 0 0 0 0;
            rel1.to: "sb_hbar";
            rel2.to: "sb_hbar";
            rel2.relative: 0.0 1.0;
            rel2.offset: 0 -1;
         }
      }
      part { name: "sb_hbar_a2"; type: RECT;
         clip_to: "sb_hbar";
         description { state: "default" 0.0;
            min: 16 16;
            align: 1.0 0.5;
            aspect: 1.0 1.0; aspect_preference: VERTICAL;
            color: 0 0 0 0;
            rel1.to: "sb_hbar";
            rel1.offset: -1 0;
            rel1.relative: 1.0 0.0;
            rel2.to: "sb_hbar";
         }
      }
      program {
         signal: "e,action,show,hbar"; source: "e";
         action: STATE_SET "default" 0.0;
         target: "sb_hbar";
         target: "sb_hbar_show";
      }
      program {
         signal: "e,action,hide,hbar"; source: "e";
         action: STATE_SET "hidden" 0.0;
         target: "sb_hbar";
         target: "sb_hbar_show";
      }
      program {
         signal: "mouse,down,1*"; source: "sb_hbar_a1";
         action: STATE_SET "clicked" 0.0;
         //~ target: "sb_hbar_a1";
         target: "arrow1_hbar";
      }
      program {
         signal: "mouse,down,1*"; source: "sb_hbar_a1";
         action: DRAG_VAL_STEP -1.0 0.0;
         target: "e.dragable.hbar";
      }
      program {
         signal: "mouse,up,1"; source: "sb_hbar_a1";
         action: STATE_SET "default" 0.0;
         target: "sb_hbar_a1";
         target: "arrow1_hbar";
      }
      program {
         signal: "mouse,down,1*"; source: "sb_hbar_a2";
         action: STATE_SET "clicked" 0.0;
         //~ target: "sb_hbar_a2";
         target: "arrow2_hbar";
      }
      program {
         signal: "mouse,down,1*"; source: "sb_hbar_a2";
         action: DRAG_VAL_STEP 1.0 0.0;
         target: "e.dragable.hbar";
      }
      program {
         signal: "mouse,up,1"; source: "sb_hbar_a2";
         action: STATE_SET "default" 0.0;
         target: "sb_hbar_a2";
         target: "arrow2_hbar";
      }
      program {
         signal: "mouse,down,1*"; source: "sb_hbar_p1";
         action: DRAG_VAL_PAGE -1.0 0.0;
         target: "e.dragable.hbar";
      }
      program {
         signal: "mouse,down,1*"; source: "sb_hbar_p2";
         action: DRAG_VAL_PAGE  1.0 0.0;
         target: "e.dragable.hbar";
      }

      part { name: "bg"; type: RECT;
         description { state: "default" 0.0;
            rel1 {
                    offset: 2 2;
                }
                rel2 {
                    offset: -1 0;
					to_x: "sb_vbar";
					to_y: "sb_hbar";
					relative: 0.0 0.0;
                }
            color: 245 245 245 0;
            visible: 0;
         }
      }
      part { name: "clipper"; type: RECT;
         description { state: "default" 0.0;
            rel1.to: "e.swallow.content";
            rel2.to: "e.swallow.content";
         }
      }
      part { name: "e.swallow.bg"; type: SWALLOW;
         clip_to: "clipper";
         description { state: "default" 0.0;
            rel1.to: "bg";
            rel2.to: "bg";
         }
      }
      part { name: "e.swallow.content"; type: SWALLOW;
         clip_to: "clipper";
         description { state: "default" 0.0;
            rel1.offset: 1 1;
            rel2.relative: 0.0 0.0;
            rel2.offset: -2 -2;
            rel2.to_x: "sb_vbar";
            rel2.to_y: "sb_hbar";
         }
      }
      part { name: "e.swallow.overlay"; type: SWALLOW;
         clip_to: "clipper";
         description { state: "default" 0.0;
            rel1.to: "bg";
            rel2.to: "bg";
         }
      }
      part { name: "e.box.operations"; type: BOX;
         description { state: "default" 0.0;
            rel1.offset: 3 3;
            rel1.to: "bg";
            rel2.offset: -4 -4;
            rel2.to: "bg";
            align: 1.0 1.0;
            box { layout: "vertical";
               padding: 0 0;
               align: 1.0 1.0;
               min: 1 1;
            }
         }
      }
      part {
			name: "sb_vbar_bg";
			type: RECT;
			mouse_events: 0;
			clip_to: "sb_vbar_show";
			description {
				state: "default" 0.0;
				rel1.to_x: "sb_vbar";
				rel1.to_y: "sb_vbar_show";
				rel2.to_x: "sb_vbar_base";
				rel2.to_y: "sb_vbar_show";
				color: 200 200 200 255;
				color_class: "dialog_base";
			}
	  }
	  part {
			name: "sb_vbar_bg_line";
			type: RECT;
			mouse_events: 0;
			clip_to: "sb_vbar_show";
			description {
				state: "default" 0.0;
				color: 180 180 180 255;
				color_class: "dialog_base";
				rel1 {
					to: "sb_vbar_bg";
				}
				rel2 {
					to: "sb_vbar_bg";
					relative: 0.0 1.0;
					offset: 0 -1;
				}
			}
		}

      part { name: "runner_vbar"; mouse_events: 0;
         clip_to: "sb_vbar_show";
         description { state: "default" 0.0;
                max: 16 99999;
                min: 16 44;
				fixed: 1 0;
                rel1 {
                    to: "sb_vbar_base";
					offset: 1 0;
                }
                rel2 {
                    to: "sb_vbar_base";
                }
                image {
                    normal: "images/scrollframe/trough_v.png";
                    border: 8 8 7 8;
                }
				color_class: "dialog_base";
         }
      }
      part {
			name: "sb_hbar_bg";
			type: RECT;
			mouse_events: 0;
			clip_to: "sb_hbar_show";
			description {
				state: "default" 0.0;
				rel1.to_x: "sb_hbar_show";
				rel1.to_y: "sb_hbar_base";
				rel2.to_x: "sb_hbar";
				rel2.to_y: "sb_hbar_base";
				color: 200 200 200 255;
				color_class: "dialog_base";
			}
	  }
	  part {
			name: "sb_hbar_bg_line";
			type: RECT;
			mouse_events: 0;
			clip_to: "sb_hbar_show";
			description {
				state: "default" 0.0;
				color: 180 180 180 255;
				color_class: "dialog_base";
				rel1 {
					to: "sb_hbar_bg";
				}
				rel2 {
					to: "sb_hbar_bg";
					relative: 1.0 0.0;
					offset: -1 0;
				}
			}
		}
      part { name: "runner_hbar"; mouse_events: 0;
         clip_to: "sb_hbar_show";
         description { state: "default" 0.0;
				min: 55 16;
                max: 99999 16;
				fixed: 0 1;
                rel1 {
                    to: "sb_hbar_base";
					offset: 0 1;
                }
                rel2 {
                    to: "sb_hbar_base";
                }
                image {
                    normal: "images/scrollframe/trough_v.png";
                    border: 8 7 8 8;
                }
				color_class: "dialog_base";
         }
      }
      part { name: "runner_vbar_clip"; type: RECT;
         clip_to: "sb_vbar_show";
         description { state: "default" 0.0;
            visible: 0;
            min: 16 16;
            max: 16 99999;
            rel1.to: "runner_vbar";
            rel1.offset: 0 1;
            rel2.to: "runner_vbar";
            rel2.offset: -1 -2;
         }
      }
      part { name: "runner_hbar_clip"; type: RECT;
         clip_to: "sb_hbar_show";
         description { state: "default" 0.0;
            visible: 0;
            min: 16 16;
            max: 99999 16;
            rel1.to: "runner_hbar";
            rel1.offset: 1 0;
            rel2.to: "runner_hbar";
            rel2.offset: -2 -1;
         }
      }

      part { name: "arrow1_vbar"; mouse_events: 0;
         clip_to: "sb_vbar_show";
         description { state: "default" 0.0;
            rel1.to: "sb_vbar_a1";
            rel2.to: "sb_vbar_a1";
            image.normal: "images/scrollbar_im8.png";
            min: 17 13;
			max: 17 13;
			fixed: 1 1;
			color_class: "fileman_arrow";
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            color: 215 215 215 255;
            color_class: "fileman_arrow";
         }
      }
      part { name: "arrow2_vbar"; mouse_events: 0;
         clip_to: "sb_vbar_show";
         description { state: "default" 0.0;
            rel1.to: "sb_vbar_a2";
            rel2.to: "sb_vbar_a2";
            image.normal: "images/scrollbar_im9.png";
            min: 17 13;
			max: 17 13;
			fixed: 1 1;
			color_class: "fileman_arrow";
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            color: 215 215 215 255;
            color_class: "fileman_arrow";
         }
      }
      part { name: "base_vbar"; mouse_events: 0;
         clip_to: "sb_vbar_show";
         description { state: "default" 0.0;
            rel1.offset: 2 0;
            rel1.to: "e.dragable.vbar";
            rel2.offset: -3 -1;
            rel2.to: "e.dragable.vbar";
            image {
                    normal: "images/scrollframe-bar_im2.png";
                    border: 6 6 6 6;
                }
            fill.smooth: 0;
            min: 14 36;
            max: 14 99999;
         }
         description {
                state: "clicked" 0.0;
                inherit: "default" 0.0;
                color: 235 235 235 255;
         }
      }
      part { name: "center_vbar"; mouse_events: 0;
         clip_to: "sb_vbar_show";
         description { state: "default" 0.0;
            rel1.to: "base_vbar";
            rel1.offset: 0 8;
            rel2.to: "base_vbar";
            rel2.offset: 0 -8;
            image {
                    normal: "images/scrollframe-bar_im3.png";
                    border: 2 2 2 2;
                }
            min: 7 11;
            max: 7 11;
            fixed: 1 1;
         }
         description {
                state: "clicked" 0.0;
                inherit: "default" 0.0;
                color: 235 235 235 255;
         }
      }
      part { name: "arrow1_hbar"; mouse_events: 0;
         clip_to: "sb_hbar_show";
         description { state: "default" 0.0;
            rel1.to: "sb_hbar_a1";
            rel2.to: "sb_hbar_a1";
            image.normal: "images/scrollbar_im6.png";
            min: 13 17;
			max: 13 17;
			fixed: 1 1;
			color_class: "fileman_arrow";
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            color: 215 215 215 255;
            color_class: "fileman_arrow";
         }
      }
      part { name: "arrow2_hbar"; mouse_events: 0;
         clip_to: "sb_hbar_show";
         description { state: "default" 0.0;
            rel1.to: "sb_hbar_a2";
            rel2.to: "sb_hbar_a2";
            image.normal: "images/scrollbar_im7.png";
            min: 13 17;
			max: 13 17;
			fixed: 1 1;
			color_class: "fileman_arrow";
         }
         description { state: "clicked" 0.0;
            inherit: "default" 0.0;
            color: 215 215 215 255;
            color_class: "fileman_arrow";
         }
      }
      part { name: "base_hbar"; mouse_events: 0;
         clip_to: "sb_hbar_show";
         description { state: "default" 0.0;
            rel1.offset: 0 2;
            rel1.to: "e.dragable.hbar";
            rel2.offset: -1 -3;
            rel2.to: "e.dragable.hbar";
            image {
                    normal: "images/scrollframe-bar_im0.png";
                    border: 6 6 6 6;
                }
            min: 36 14;
            max: 99999 14;
            fixed: 1 1;
         }
         description {
                state: "clicked" 0.0;
                inherit: "default" 0.0;
                color: 235 235 235 255;
         }
      }
      part { name: "center_hbar"; mouse_events: 0;
         clip_to: "sb_hbar_show";
         description { state: "default" 0.0;
            rel1.to: "base_hbar";
            rel1.offset: 8 0;
            rel2.to: "base_hbar";
            rel2.offset: -8 0;
            image {
                    normal: "images/scrollframe-bar_im1.png";
                    border: 2 2 2 2;
                }
            min: 11 7;
            max: 11 7;
            fixed: 1 1;
         }
         description {
                state: "clicked" 0.0;
                inherit: "default" 0.0;
                color: 235 235 235 255;
         }
      }
   }
   programs {
      program {
         signal: "mouse,down,1*"; source: "e.dragable.vbar";
         action: STATE_SET "clicked" 0.0;
         //~ target: "e.dragable.vbar";
         target: "base_vbar";
         target: "center_vbar";
      }
      program {
         signal: "mouse,up,1"; source: "e.dragable.vbar";
         action: STATE_SET "default" 0.0;
         target: "e.dragable.vbar";
         target: "base_vbar";
         target: "center_vbar";
      }
      program {
         signal: "mouse,down,1*"; source: "e.dragable.hbar";
         action: STATE_SET "clicked" 0.0;
         //~ target: "e.dragable.hbar";
         target: "base_hbar";
         target: "center_hbar";
      }
      program {
         signal: "mouse,up,1"; source: "e.dragable.hbar";
         action: STATE_SET "default" 0.0;
         target: "e.dragable.hbar";
         target: "base_hbar";
         target: "center_hbar";
      }
   }
}



group { name: "e/fileman/desktop/scrollframe";
   inherit: "e/fileman/default/scrollframe";
   parts {
      part {
			name: "e.swallow.content";
			type: SWALLOW;
			description { state: "default" 0.0;
				rel1.offset: 0 0;
				rel2.offset: -1 -1;
			}
		}
   }
}

group {
	name: "e/fileman/default/rubberband";
	parts {

		part {
			name: "middle";
			type: IMAGE;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				color: 255 255 255 48;
				rel1 {
					to: "base";
					relative: 0.0 0.0;
					offset: 6 6;
				}
				rel2 {
					to: "base";
					relative: 1.0 1.0;
					offset: -6 -6;
				}
				image {
					normal: "images/wallpaper_pat0.png";
				}
				fill {
					smooth: 0;
					size {
						relative: 0 0;
						offset: 240 240;
					}
				}
			}
		}

		part {
			name: "base";
			type: IMAGE;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				min: 16 16;
				//aspect: 1.0 1.0;
				image {
					normal: "images/fileman_im3.png";
					border: 10 10 10 10;
					middle: 0;
				}
			}
		}
	}
}

group { name: "e/fileman/default/progress";
   images.image: "images/media_busy_progress.png" COMP;
   images.image: "images/sym_close_light_normal.png" COMP;
   images.image: "images/sym_close_light_selected.png" COMP;
   images.image: "images/led_red_light.png" COMP;
   images.image: "images/led_strobe.png" COMP;
   parts {
      part { name: "base"; type: SPACER;
         description { state: "default" 0.0;
            rel1.to_x: "e.text.info";
            rel2.to_x: "e.text.info";
            min: 0 35;
         }
      }
      part { name: "bevel"; mouse_events: 0;
         description { state: "default" 0.0;
            rel1.offset: -5 -5;
            rel2.offset: 4 4;
            image.normal: "images/ibar_im0.png";
			image.border: 5 5 5 5;
			color: 0 0 0 128;
            fill.smooth: 0;
            fixed: 1 1;
         }
      }
      part { name: "e.text.info"; type: TEXT; mouse_events: 0;
         effect: SHADOW BOTTOM;
         scale: 1;
         description { state: "default" 0.0;
            rel1.relative: 1.0 0.0;
            rel1.to_x: "busy_shadow";
            rel2.relative: 0.0 1.0;
            rel2.to_x: "close_event";
            rel2.offset: -3 -1;
            color: 255 255 255 255;
            text { font: FN; size: 10;
               min: 1 0;
               ellipsis: -1;
               align: 0.0 0.5;
               text_class: "textblock_style2";
            }
         }
      }
      part { name: "busy_clip"; type: RECT;
         description { state: "default" 0.0;
            rel1.offset: -20 0;
            color: 255 255 255 0;
            visible: 0;
         }
         description { state: "active" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
            visible: 1;
         }
      }
      part { name: "led_clip"; type: RECT;
         description { state: "default" 0.0;
            rel1.offset: -20 0;
            color: 255 255 255 0;
            visible: 0;
         }
         description { state: "active" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
            visible: 1;
         }
      }
      part { name: "busy_shadow"; mouse_events: 0;
         clip_to: "busy_clip";
         description { state: "default" 0.0;
            image.normal: "images/cursor_shadow.png";
            min: 40 40;
            max: 40 40;
            fixed: 1 1;
            align: 0.0 0.5;
         }
      }
      part { name: "busy_spinner"; mouse_events: 0;
         clip_to: "busy_clip";
         description { state: "default" 0.0;
            rel1.to: "busy_shadow";
            rel2.to: "busy_shadow";
            image.normal: "images/cursor_main.png";
            fixed: 1 1;
            map.on: 1;
			map.smooth: 1;
			map.rotation.center: "busy_shadow";
         }
         description { state: "spin" 0.0;
				inherit: "default" 0.0;
				map.rotation.z: 360;
		 }
      }
      part { name: "busy_up"; mouse_events: 0;
		  clip_to: "busy_clip";
		  description { state: "default" 0.0;
			  fixed: 1 1;
			  image.normal: "images/cursor_up.png";
			  rel1.to: "busy_shadow";
			  rel2.to: "busy_shadow";
		  }
	  }
      part { name: "attention_event"; mouse_events: 1;
         type: RECT;
         description { state: "default" 0.0;
            color: 0 0 0 0;
            visible: 0;
         }
         description { state: "active" 0.0;
            color: 0 0 0 0;
            visible: 1;
         }
      }
      part { name: "led"; mouse_events: 0;
         clip_to: "led_clip";
         description { state: "default" 0.0;
            image.normal: "images/led_red_light.png";
            min: 30 30;
            max: 30 30;
            fixed: 1 1;
            rel1.offset: 5 0;
            align: 0.0 0.5;
         }
      }
      part { name: "led_spinner"; mouse_events: 0;
         clip_to: "led_clip";
         description { state: "default" 0.0;
            rel1.to: "led";
            rel2.to: "led";
            min: 40 40;
            max: 40 40;
            fixed: 1 1;
            image.normal: "images/led_strobe.png";
            map {
               on: 1;
               smooth: 1;
               rotation.center: "led";
            }
         }
         description { state: "spin" 0.0;
            inherit: "default" 0.0;
            map.rotation.z: 360;
         }
      }
      part { name: "close";
         description { state: "default" 0.0;
            image.normal: "images/sym_close_light_normal.png";
            rel1.to: "close_event";
            rel2.to: "close_event";
            fixed: 1 1;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            image.normal: "images/sym_close_light_selected.png";
         }
      }
      part { name: "close_event"; type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            align: 1.0 0.5;
            rel1.relative: 1.0 0.0;
            rel1.offset: -4 0;
            rel2.offset: -4 -1;
            color: 0 0 0 0;
            min: 15 15;
            max: 15 15;
            fixed: 1 1;
         }
      }
      part { name: "progress"; mouse_events: 0;
         clip_to: "busy_clip";
         description { state: "default" 0.0;
            rel1.to: "base";
            rel1.offset: -5 0;
            rel2.to: "e.gauge.bar";
            rel2.offset: 4 -1;
            image.normal: "images/media_busy_progress.png";
            image.border: 5 5 0 0;
            min: 10 40;
            align: 0.0 1.0;
            fixed: 1 1;
         }
      }
      part { name: "e.gauge.bar"; type: SPACER; mouse_events: 0;
         dragable.x: 1 1 0;
         dragable.y: 0 0 0;
         dragable.confine: "base";
         description { state: "default" 0.0;
         }
      }
   }
/* we can also use messages with floats for progresss.
   script {
    public message(Msg_Type:type, id, ...) {
       if ((type == MSG_FLOAT) && (id == 1)) {
          new Float:val;
          val = getfarg(2);
          // val 0.0 -. 1.0 percentage
          custom_state(PART:"progress", "default", 0.0);
          set_state_val(PART:"progress", STATE_REL2, val, 1.0);
          set_state(PART:"progress", "custom", 0.0);
       }
    }
   }
 */
   programs {
      program { name: "spin";
         signal: "e,state,busy,start"; source: "e";
         action: STATE_SET "spin" 0.0;
         transition: LINEAR 1.0;
         target: "busy_spinner";
         after: "spin2";
      }
      program { name: "spin2";
         action: STATE_SET "default" 0.0;
         target: "busy_spinner";
         after: "spin";
      }
      program {
         signal: "e,state,busy,start"; source: "e";
         action: STATE_SET "active" 0.0;
         transition: SINUSOIDAL 0.25;
         target: "busy_clip";
      }
      program {
         signal: "e,state,busy,stop"; source: "e";
         action: STATE_SET "default" 0.0;
         transition: SINUSOIDAL 1.0;
         target: "busy_clip";
         after: "spin3";
      }
      program { name: "spin3";
         action: ACTION_STOP;
         target: "spin";
         target: "spin2";
         after: "spin4";
      }
      program { name: "spin4";
         action: STATE_SET "default" 0.0;
         target: "busy_spinner";
      }
      program {
         signal: "e,state,attention,start"; source: "e";
         action: STATE_SET "active" 0.0;
         target: "led_clip";
         target: "attention_event";
      }
      program {
         signal: "e,state,attention,stop"; source: "e";
         action: STATE_SET "default" 0.0;
         transition: SINUSOIDAL 0.6;
         target: "led_clip";
         target: "attention_event";
         after: "led_stop_spin";
      }
      program { name: "led_spin";
         signal: "e,state,attention,start"; source: "e";
         action: STATE_SET "spin" 0.0;
         transition: LINEAR 0.6;
         target: "led_spinner";
         after: "led_spin2";
      }
      program { name: "led_spin2";
         action: STATE_SET "default" 0.0;
         target: "led_spinner";
         after: "led_spin";
      }
      program { name: "led_stop_spin";
         action: ACTION_STOP;
         target: "led_spin";
      }
      program {
         signal: "mouse,down,1*"; source: "close_event";
         action: STATE_SET "selected" 0.0;
         target: "close";
      }
      program {
         signal: "mouse,up,1*"; source: "close_event";
         action: STATE_SET "default" 0.0;
         target: "close";
      }
      program {
         signal: "mouse,clicked,1*"; source: "close_event";
         action: SIGNAL_EMIT "e,fm,operation,abort" "";
      }
      program {
         signal: "mouse,clicked,1*"; source: "attention_event";
         action: SIGNAL_EMIT "e,fm,window,jump" "";
      }
/* XXX: implement these
      program {
         signal: "e,action,set,normal"; source: "e";
      }
      program {
         signal: "e,action,icon,unknown"; source: "e";
      }
      program {
         signal: "e,action,icon,copy"; source: "e";
      }
      program {
         signal: "e,action,icon,move"; source: "e";
      }
      program {
         signal: "e,action,icon,secure_delete"; source: "e";
      }
 */
   }
}


group { name: "e/fileman/popup/default";
     parts {   
      part { name: "base"; type: RECT; mouse_events: 0;
         description { state: "default" 0.0;
            color: 255 255 255 0;
         }
      }
      part {
			name: "bg_border";
			//clip_to: "bottom";
			mouse_events: 0;
			description {
				state: "default" 0.0;
				rel1.to: "base";
				rel2.to: "base";
				image {
					normal: "images/menu_im0.png";
					border: 1 1 1 1;
					middle: 0;
				}
			}
		}
	  part {
			name: "gradient";
			//clip_to: "bottom";
			description {
				state: "default" 0.0;
				image.normal: "images/dialog_im0.png";
				color_class: "dialog_base";
				rel1.to: "base";
				rel2.to: "base";
				rel1.offset: 1 1;
				rel2.offset: -2  -2;
			}
		}
		part {
			name: "gradient2";
			//clip_to: "bottom";
			type: RECT;
			description {
				state: "default" 0.0;
				rel1.to: "gradient";
				rel2.to: "gradient";
				color: 0 0 0 20;
			}
		}
      part { name: "e.swallow.content"; type: SWALLOW;
         description { state: "default" 0.0;
            rel1.offset: 4 0;
            rel1.relative: 0.0 1.0;
            rel1.to_y: "e.text.title";
            rel2.offset: -5 -5;
         }
      }
      part { name: "e.text.title"; type: TEXT; mouse_events: 0;
         scale: 1;
         //effect: SHADOW BOTTOM;
         description { state: "default" 0.0;
            //color_class: "fileman_popup_title";
            rel1.relative: 0.0 0.0;
            rel1.offset: 1 9;
            rel2.relative: 1.0 0.0;
            rel2.offset: -2 9;
            //align: 0.5 0.0;
            TEXT_COLOR;
			TEXT_BOLD("popup", 0.5 0.0, 0 1);
            fixed: 0 1;
         }
      }
   }
}
