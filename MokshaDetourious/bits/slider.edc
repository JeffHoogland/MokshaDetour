
group {
	name: "e/widgets/slider_horizontal";

	parts {
		part {
			name: "base";
			type: RECT;
			mouse_events: 1;
			description {
				state: "default" 0.0;
				color: 157 57 11 0;
				rel1.offset: 2 2;
				rel2.offset: -7 -3;
			}
			description {
				state: "active" 0.0;
				color: 157 57 11 0;
				rel1 {
					offset: 2 -1;
				}
				rel2 {
					to_x: "label_under";
					relative: 0.0 1.0;
					offset: -6 -3;
				}
			}
		}

		part {
			name: "slider_runner";
			mouse_events: 0;
			clip_to: "clip";
			description {
				state: "default" 0.0;
				max: 99999 16;
				min: 40 16;
				rel1.to: "base";
				rel1.offset: 6 -1;
				rel2.to: "base";
				rel2.offset: -5 -2;
				image {
					normal: "images/runner_im0.png";
					border: 6 6 0 0;
				}
				fill.smooth: 0;
				fixed: 0 1;
			}
			description {
				state: "disabled" 0.0;
				inherit: "default" 0.0;
				color: 255 255 255 200;
			}
		}
		part {
			name: "slider_runner_active";
			mouse_events: 0;
			clip_to: "clip";
			description { state: "default" 0.0;
				max: 99999 15;
				min: 0 15;
				rel1.to: "slider_runner";
				rel2.to_x: "slider_image";
				rel2.to_y: "slider_runner";
				rel2.relative: 0.5 1.0;
				image {
					normal: "images/runner_im2.png";
					border: 6 6 0 0;
					}
				fill.smooth: 0;
				color: COLOR_SELECTED;
				fixed: 0 1;
			    }
			 description { state: "disabled" 0.0;
				inherit: "default" 0.0;
				color_class: "none";
				color: COLOR_SELECTED_FADE;
				}
		}
		part {
			name: "label_under";
			mouse_events: 0;
			description {
				state: "default" 0.0;
				visible: 0;
				min: 20 24;
				max: 9999 24;
				fixed: 1 0;
				image {
					normal: "images/entry_im0.png";
					border: 6 6 8 7;
				}
				color_class: "dialog_base";
			}
			description {
				state: "active" 0.0;
				inherit: "default" 0.0;
				visible: 1;
				/* align: 0.0 1.0;  */
				fixed: 1 0;
				rel1 {
					to: "e.text.label";
					relative: 0.0  0.0;
					offset: -11 -4;
				}
				rel2 {
					to: "e.text.label";
					relative: 1.0 1.0;
					offset: 9 1;
				}
			}
		}

		part {
			name: "e.text.label";
			type: TEXT;
			effect: TEXT_EFFECT;
			scale: 1;
			mouse_events: 0;
			clip_to: "clip";
			description {
				state: "default" 0.0;
				visible: 0;
				fixed: 1 0;
			}
			description {
				state: "active" 0.0;
				align: 1.0 0.5;
				fixed: 1 0;
				min: 30 10;
				rel1 {
					relative: 1.0 0.0;
					offset: -8 7;
				}
				rel2 {
					relative: 1.0 1.0;
					offset: -12 -8;
				}
				TEXT_COLOR;
				TEXT_NORMAL("slider", 0.5 0.5, 1 1);
				text.ellipsis: -1;
				/* text.max: 0 1; */
			}
		}

		part {
			name: "slider_p1";
			type: RECT;
			mouse_events: 1;
			description {
				state: "default" 0.0;
				color: 18 119 186 0;
				rel2 {
					to: "e.dragable.slider";
					relative: 0.0 1.0;
					offset: -1 -1;
				}
			}
		}

		part {
			name: "slider_p2";
			type: RECT;
			mouse_events: 1;
			description {
				state: "default" 0.0;
				color: 231 93 7 0;
				rel2 {
					to: "e.dragable.slider";
					relative: 1.0 0.0;
					offset: 0 0;
				}
			}
		}

		part {
			name: "confine_area";
			type: RECT;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				max: 99999 20;
				fixed: 1 1;
				color: 255 0 0 0;
				rel1 {
					to: "base";
					//offset: 1 0;
				}
				rel2 {
					to: "base";
					//offset: -1 -1;
				}
			}
		}


		part {
            name: "e.swallow.bar";
            type: SWALLOW;
            description { state: "default" 0.0;
               rel1 {
                  to_x: "base";
                  to_y: "e.dragable.slider";
                  offset: 5 0;
               }
               rel2 {
                  to_x: "base";
                  to_y: "e.dragable.slider";
                  offset: -6 -1;
               }
            }
         }
         
		part {
			name: "e.dragable.slider";
			type: RECT;
			mouse_events: 1;
			dragable {
				x: 1 1 0;
				y: 0 0 0;
				confine: "confine_area";
			}
			description {
				state: "default" 0.0;
				min: 29 20;
				max: 29 20;
				fixed: 1 1;
				color: 255 0 0 0;
				rel1.relative: 0.5 0.0;
				rel1.to_x: "base";
				rel2.relative: 0.5 1.0;
				rel2.to_x: "base";
			}
		}

		part {
			name: "shadow_focus_clip";
			type: RECT;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				color: 255 255 255 128;
			}
			description {
				state: "focused" 0.0;
				inherit: "default" 0.0;
				color: 255 255 255 64;
			}
			description {
				state: "disabled" 0.0;
				inherit: "focused" 0.0;
			}
		}

		part {
			name: "slider_image_shadow";
			type: IMAGE;
			mouse_events: 0;
			clip_to: "shadow_focus_clip";
			description {
				state: "default" 0.0;
				rel1 {
					to: "slider_image";
					offset: 1 -1;
				}
				rel2 {
					to: "slider_image";
					offset: -2 -1;
				}
				image {
					normal: "images/slider_im1.png";
					border: 7 8 7 7;
				}
			}
		}

		part {
			name: "slider_image";
			type: IMAGE;
			mouse_events: 0;
			//clip_to: "clip";
			description {
				state: "default" 0.0;
				min: 29 17;
				max: 29 17;
				fixed: 1 1;
				rel1.to: "e.dragable.slider";
				rel2.to: "e.dragable.slider";
				image.normal: "images/slider_im0.png";
			}
			description {
				state: "clicked" 0.0;
				inherit: "default" 0.0;
				color: 235 235 235 255;
			}
			description {
				state: "disabled" 0.0;
				inherit: "default" 0.0;
			}
		}

		part {
			name: "clip";
			type: RECT;
			mouse_events: 0;
			description {
				state: "default" 0.0;
			}
			description {
				state: "disabled" 0.0;
				color: 255 255 255 128;
			}
		}

		part {
			name: "catch";
			type: RECT;
			mouse_events: 1;
			description {
				state: "default" 0.0;
				visible: 0;
				color: 0 0 0 0;
			}
			description {
				state: "disabled" 0.0;
				inherit: "default" 0.0;
				visible: 1;
			}
		}
	}

	programs {
# ifdef PROG
#  undef PROG
# endif
#define PROG(NAME,SIGNAL,SRC,ACT,TARGET)        \
		program {								\
			name: NAME;							\
			signal: SIGNAL;						\
			source: SRC;						\
			action: ACT;						\
			target: TARGET;						\
		}

		PROG("slider-", "mouse,down,1", "slider_p1", DRAG_VAL_PAGE -1.0 0.0, "e.dragable.slider");
		PROG("slider+", "mouse,down,1", "slider_p2", DRAG_VAL_PAGE 1.0 0.0, "e.dragable.slider");

# ifdef PROG
#  undef PROG
# endif
#define PROG(NAME,SIGNAL,SRC,ACT,TARGET)		\
		program {								\
			name: NAME;							\
			signal: SIGNAL;						\
			source: SRC;						\
			action: STATE_SET ACT 0.0;			\
			transition: DECELERATE 0.25;		\
			target: TARGET;						\
		}

		PROG("up", "mouse,up,1", "e.dragable.slider", "default", "slider_image");
		PROG("down", "mouse,down,1", "e.dragable.slider", "clicked", "slider_image");

# ifdef PROG
#  undef PROG
# endif
#define PROG(NAME,SIGNAL,SRC,ACT,TARGET1,TARGET2,TARGET3)	\
		program {											\
			name: NAME;										\
			signal: SIGNAL;									\
			source: SRC;									\
			action: STATE_SET ACT 0.0;						\
			target: TARGET1;								\
			target: TARGET2;								\
			target: TARGET3;								\
		}

		PROG("show_label", "e,action,show,label", "e", "active", "base", "label_under", "e.text.label");
		PROG("hide_label", "e,action,hide,label", "e", "default", "base", "label_under", "e.text.label");

		program {
			name: "enable";
			signal: "e,state,enabled";
			source: "e";
			action: STATE_SET "default" 0.0;
			target: "clip";
			target: "catch";
			target: "slider_runner_active";
			target: "slider_image";
			target: "shadow_focus_clip";
		}

		program {
			name: "disable";
			signal: "e,state,disabled";
			source: "e";
			action: STATE_SET "disabled" 0.0;
			target: "clip";
			target: "catch";
			target: "slider_runner_active";
			target: "slider_image";
			target: "shadow_focus_clip";
		}

		program {
			name: "gain_focus";
			signal: "e,state,focused";
			source: "e";
			action: STATE_SET "focused" 0.0;
			transition: DECELERATE 0.5;
			target: "shadow_focus_clip";
		}

		program {
			name: "lose_focus";
			signal: "e,state,unfocused";
			source: "e";
			action: STATE_SET "default" 0.0;
			transition: DECELERATE 0.5;
			target: "shadow_focus_clip";
		}
	}
}

group {
	name: "e/widgets/slider_vertical";

	parts {
		part {
			name: "base";
			type: RECT;
			mouse_events: 1;
			description {
				state: "default" 0.0;
				color: 255 0 0 0;
				min: 32 10;
				rel1 {
					offset: 0 0;
				}
				rel2 {
					offset: -1 -1;
				}
			}
			description {
				state: "active" 0.0;
				color: 255 0 0 0;
				min: 32 10;
				rel1 {
					offset: 2 2;
				}
				rel2 {
					to_y: "label_under";
					relative: 1.0 0.0;
					offset: -3 -1;
				}
			}
		}

		part {
			name: "slider_runner";
			type: IMAGE;
			mouse_events: 0;
			clip_to: "clip";
			description {
				state: "default" 0.0;
				max: 16 99999;
				min: 16 20;
				rel1 {
					to: "base";
					offset: -1 11;
				}
				rel2 {
					to: "base";
					offset: -2 -10;
				}
				image {
					normal: "images/runner_im1.png";
					border: 0 0 6 6;
				}
				fill.smooth: 0;
				fixed: 1 0;
			}
			description {
				state: "disabled" 0.0;
				inherit: "default" 0.0;
				color: 255 255 255 200;
			}
		}
		part {
			name: "slider_runner_active";
			mouse_events: 0;
			clip_to: "clip";
			description { state: "default" 0.0;
				max: 15 99999;
				min: 15 0;
				rel1.to_x: "slider_runner";
				rel1.to_y: "slider_image";
				rel1.relative: 0.0 0.5;
				rel2.to: "slider_runner";
				image {
					normal: "images/runner_im3.png";
					border: 0 0 6 6;
					}
				fill.smooth: 0;
				color: COLOR_SELECTED;
				fixed: 1 0;
			    }
			 description { state: "disabled" 0.0;
				inherit: "default" 0.0;
				color_class: "none";
				color: COLOR_SELECTED_FADE;
				}
		}
		part {
			name: "label_under";
			type: IMAGE;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				min: 30 24;
				max: 9999 24;
				visible: 0;
				image {
					normal: "images/entry_im0.png";
					border: 6 6 8 7;
				}
				color_class: "dialog_base";
			}
			description {
				state: "active" 0.0;
				inherit: "default" 0.0;
				max: 9999 24;
				visible: 1;
				rel1 {
					to: "e.text.label";
					relative: 0.0 0.0;
					offset: -7 -4;
				}
				rel2 {
					to: "e.text.label";
					relative: 1.0 1.0;
					offset: 3 3;
				}
			}
		}

		/* part {
		 * 	name: "label_focus";
		 * 	type: IMAGE;
		 * 	mouse_events: 0;
		 * 	description {
		 * 		state: "default" 0.0;
		 * 		min: 27 24;
		 * 		max: 9999 24;
		 * 		visible: 0;
		 * 		rel1 {
		 * 			to: "e.text.label";
		 * 			relative: 0.0 0.0;
		 * 			offset: -7 -4;
		 * 		}
		 * 		rel2 {
		 * 			to: "e.text.label";
		 * 			relative: 1.0 1.0;
		 * 			offset: 3 3;
		 * 		}
		 * 		image {
		 * 			normal: "images/entry_im1.png";
		 * 			border: 7 7 8 7;
		 * 		}
		 * 	}
		 * 	description {
		 * 		state: "active" 0.0;
		 * 		inherit: "default" 0.0;
		 * 		visible: 1;
		 * 	}
		 * } */

		part {
			name: "e.text.label";
			type: TEXT;
			effect: TEXT_EFFECT;
			scale: 1;
			mouse_events: 0;
			clip_to: "clip";
			description {
				state: "default" 0.0;
				fixed: 1 1;
				visible: 0;
			}
			description {
				state: "active" 0.0;
				align: 0.5 1.0;
				rel1 {
					relative: 0.0 1.0;
					offset: 7 -8;
				}
				rel2 {
					relative: 1.0 1.0;
					offset: -8 -8;
				}
				TEXT_COLOR;
				TEXT_NORMAL("slider", 0.5 0.5, 1 1);
				text.ellipsis: -1;
			}
		}

		part {
			name: "slider_p1";
			type: RECT;
			mouse_events: 1;
			description {
				state: "default" 0.0;
				color: 18 119 186 0;
				rel2 {
					to: "e.dragable.slider";
					relative: 1.0 0.0;
					offset: -1 -1;
				}
			}
		}

		part {
			name: "slider_p2";
			type: RECT;
			mouse_events: 1;
			description {
				state: "default" 0.0;
				color: 231 93 7 0;
				rel1 {
					to: "e.dragable.slider";
					relative: 0.0 1.0;
					offset: 0 0;
				}
			}
		}

		part {
			name: "confine_area";
			type: RECT;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				max: 20 99999;
				fixed: 1 1;
				color: 0 0 0 0;
				rel1 {
					to: "base";
					offset: 0 6;
				}
				rel2 {
					to: "base";
					offset: -1 -5;
				}
			}
		}

			part {
            name: "e.swallow.bar";
            type: SWALLOW;
            description { state: "default" 0.0;
               rel1 {
                  to_x: "e.dragable.slider";
                  to_y: "base";
                  offset: 0 5;
               }
               rel2 {
                  to_x: "e.dragable.slider";
                  to_y: "base";
                  offset: -1 -6;
               }
            }
         }

		part {
			name: "e.dragable.slider";
			type: RECT;
			mouse_events: 1;
			dragable {
				x: 0 0 0;
				y: -1 1 0;
				confine: "confine_area";
			}
			description {
				state: "default" 0.0;
				min: 20 29;
				max: 40 29;
				fixed: 1 1;
				color: 0 0 0 0;
				rel1 {
					to: "base";
					relative: 0.5 0.5;
					offset: 1 0;
				}
				rel2 {
					to: "base";
					relative: 0.5 0.5;
					offset: 1 0;
				}
			}
		}

		part {
			name: "shadow_focus_clip";
			type: RECT;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				color: 255 255 255 128;
			}
			description {
				state: "focused" 0.0;
				inherit: "default" 0.0;
				color: 255 255 255 64;
			}
			description {
				state: "disabled" 0.0;
				inherit: "focused" 0.0;
			}
		}

		part {
			name: "slider_image_shadow";
			type: IMAGE;
			mouse_events: 0;
			clip_to: "shadow_focus_clip";
			description {
				state: "default" 0.0;
				rel1 {
					to: "slider_image";
					offset: 0 1;
				}
				rel2 {
					to: "slider_image";
					offset: -1 0;
				}
				image {
					normal: "images/slider_im3.png";
					border: 7 7 7 7;
				}
			}
		}

		part {
			name: "slider_image";
			type: IMAGE;
			mouse_events: 0;
			//clip_to: "clip";
			description {
				state: "default" 0.0;
				min: 17 29;
				max: 17 29;
				fixed: 1 1;
				rel1.to: "e.dragable.slider";
				rel2.to: "e.dragable.slider";
				image {
					normal: "images/slider_im2.png";
				}
			}
			description {
				state: "clicked" 0.0;
				inherit: "default" 0.0;
				color: 235 235 235 255;
			}
			description {
				state: "disabled" 0.0;
				inherit: "default" 0.0;
			}
		}

		part {
			name: "clip";
			type: RECT;
			description {
				state: "default" 0.0;
				color: 255 255 255 255;
			}
			description {
				state: "disabled" 0.0;
				color: 255 255 255 128;
			}
		}

		part {
			name: "catch";
			type: RECT;
			mouse_events: 1;
			description {
				state: "default" 0.0;
				color: 0 0 0 0;
				visible: 0;
			}
			description {
				state: "disabled" 0.0;
				inherit: "default" 0.0;
				visible: 1;
			}
		}
	}

	programs {
# ifdef PROG
#  undef PROG
# endif
#define PROG(NAME,SIGNAL,SRC,ACT,TARGET)        \
		program {								\
			name: NAME;							\
			signal: SIGNAL;						\
			source: SRC;						\
			action: ACT;						\
			target: TARGET;						\
		}

		PROG("slider-", "mouse,down,1", "slider_p1", DRAG_VAL_PAGE 0.0 -1.0, "e.dragable.slider");
		PROG("slider+", "mouse,down,1", "slider_p2", DRAG_VAL_PAGE 0.0 1.0, "e.dragable.slider");

# ifdef PROG
#  undef PROG
# endif
#define PROG(NAME,SIGNAL,SRC,ACT,TARGET)		\
		program {								\
			name: NAME;							\
			signal: SIGNAL;						\
			source: SRC;						\
			action: STATE_SET ACT 0.0;			\
			transition: DECELERATE 0.25;		\
			target: TARGET;						\
		}

		PROG("up", "mouse,up,1", "e.dragable.slider", "default", "slider_image");
		PROG("down", "mouse,down,1", "e.dragable.slider", "clicked", "slider_image");

# ifdef PROG
#  undef PROG
# endif
#define PROG(NAME,SIGNAL,SRC,ACT,TARGET1,TARGET2,TARGET3)	\
		program {											\
			name: NAME;										\
			signal: SIGNAL;									\
			source: SRC;									\
			action: STATE_SET ACT 0.0;						\
			target: TARGET1;								\
			target: TARGET2;								\
			target: TARGET3;								\
		}

		PROG("show_label", "e,action,show,label", "e", "active", "base", "label_under", "e.text.label");
		PROG("hide_label", "e,action,hide,label", "e", "default", "base", "label_under", "e.text.label");

		program {
			name: "enable";
			signal: "e,state,enabled";
			source: "e";
			action: STATE_SET "default" 0.0;
			target: "clip";
			target: "catch";
			//target: "slider_runner";
			target: "slider_runner_active";
			target: "slider_image";
			target: "shadow_focus_clip";
		}

		program {
			name: "disable";
			signal: "e,state,disabled";
			source: "e";
			action: STATE_SET "disabled" 0.0;
			target: "clip";
			target: "catch";
			target: "slider_runner_active";
			target: "slider_image";
			target: "shadow_focus_clip";
		}

		program {
			name: "focused";
			signal: "e,state,focused";
			source: "e";
			action: STATE_SET "focused" 0.0;
			transition: DECELERATE 0.5;
			target: "shadow_focus_clip";
		}

		program {
			name: "unfocused";
			signal: "e,state,unfocused";
			source: "e";
			action: STATE_SET "default" 0.0;
			transition: DECELERATE 0.5;
			target: "shadow_focus_clip";
		}
	}
}

