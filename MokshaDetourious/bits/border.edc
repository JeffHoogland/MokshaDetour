
#define BORDER_PROGRAMS()						\
	program {									\
		name: "active";							\
		signal: "e,state,focused";				\
		source: "e";							\
		action: STATE_SET "focused" 0.0;		\
		transition: ACCELERATE 0.2;				\
		target: "e.text.title";					\
		target: "border";						\
		target: "button-close_bg";				\
		target: "button-max_bg";				\
		target: "button-min_bg";				\
		target: "button-close";					\
		target: "button-max";					\
		target: "button-min";					\
	}											\
	program {									\
		name: "inactive";						\
		signal: "e,state,unfocused";			\
		source: "e";							\
		action: STATE_SET "default" 0.0;		\
		transition: DECELERATE 0.2;				\
		target: "e.text.title";					\
		target: "border";						\
		target: "border_color";					\
		target: "border_color_post";			\
		target: "button-close_bg";				\
		target: "button-max_bg";				\
		target: "button-min_bg";				\
		target: "button-close";					\
		target: "button-max";					\
		target: "button-min";					\
	}											\
	program {									\
		name: "close_click";					\
		signal: "mouse,down,1";					\
		source: "e.event.close";				\
		action: STATE_SET "clicked" 0.0;		\
		target: "button-close";					\
	}											\
	program {									\
		name: "close_unclick";					\
		signal: "mouse,up,1";					\
		source: "e.event.close";				\
		action: STATE_SET "default" 0.0;		\
		target: "button-close";					\
	}											\
	program {									\
		name: "max_click";						\
		signal: "mouse,down,1";					\
		source: "e.event.maximize";				\
		action: STATE_SET "clicked" 0.0;		\
		target: "button-max";					\
	}											\
	program {									\
		name: "max_unclick";					\
		signal: "mouse,up,1";					\
		source: "e.event.maximize";				\
		action: STATE_SET "default" 0.0;		\
		target: "button-max";					\
	}											\
	program {									\
		name: "min_click";						\
		signal: "mouse,down,1";					\
		source: "e.event.minimize";				\
		action: STATE_SET "clicked" 0.0;		\
		target: "button-min";					\
	}											\
	program {									\
		name: "min_unclick";					\
		signal: "mouse,up,1";					\
		source: "e.event.minimize";				\
		action: STATE_SET "default" 0.0;		\
		target: "button-min";					\
	}											\
	program {									\
		name: "urgent";							\
		signal: "e,state,urgent";				\
		source: "e";							\
		action: STATE_SET "urgent" 0.0;			\
		transition: DECELERATE 0.5;				\
		target: "e.swallow.icon";				\
		after: "urgent2";						\
	}											\
	program {									\
		name: "urgent2";						\
		action: STATE_SET "default" 0.0;		\
		transition: DECELERATE 0.5;				\
		target: "e.swallow.icon";				\
		after: "urgent";						\
	}											\
	program {									\
		name: "stop";							\
		signal: "e,state,not_urgent";			\
		source: "e";							\
		action: ACTION_STOP;					\
		target: "urgent";						\
		target: "urgent2";						\
	}											\
	program { name: "shade_hide";					\
         action: STATE_SET "hidden" 0.0;			\
         target: "client_clip";						\
    }												\
    program {										\
			signal: "e,state,shading"; source: "e";	\
			action: STATE_SET "shaded" 0.0;			\
			target: "e.swallow.client";				\
	}												\
	program {										\
			signal: "e,state,unshaded"; source: "e";\
			action: STATE_SET "default" 0.0;		\
			target: "e.swallow.client";				\
	}												\
	program {										\
         signal: "e,state,shadow,on"; source: "e";	\
         action: STATE_SET "default" 0.0;			\
         target: "shadow_clip";						\
    }												\
    program {										\
         signal: "e,state,shadow,off"; source: "e";	\
         action: STATE_SET "hidden" 0.0;			\
         target: "shadow_clip";						\
    }												\

#define BORDER_int_PROGRAMS()					\
	program {									\
		name: "active";							\
		signal: "e,state,focused";				\
		source: "e";							\
		action: STATE_SET "focused" 0.0;		\
		transition: ACCELERATE 0.2;				\
		target: "e.text.title";					\
		target: "border";						\
		target: "border_color";					\
		target: "border_color_post";			\
		target: "button-close_bg";				\
		target: "button-close";					\
	}											\
	program {									\
		name: "inactive";						\
		signal: "e,state,unfocused";			\
		source: "e";							\
		action: STATE_SET "default" 0.0;		\
		transition: DECELERATE 0.2;				\
		target: "e.text.title";					\
		target: "border";						\
		target: "border_color";					\
		target: "border_color_post";			\
		target: "button-close_bg";				\
		target: "button-close";					\
	}											\
	program {									\
		name: "close_click";					\
		signal: "mouse,down,1";					\
		source: "e.event.close";				\
		action: STATE_SET "clicked" 0.0;		\
		target: "button-close";					\
	}											\
	program {									\
		name: "close_unclick";					\
		signal: "mouse,up,1";					\
		source: "e.event.close";				\
		action: STATE_SET "default" 0.0;		\
		target: "button-close";					\
	}											\
	program {									\
		name: "urgent";							\
		signal: "e,state,urgent";				\
		source: "e";							\
		action: STATE_SET "urgent" 0.0;			\
		transition: DECELERATE 0.5;				\
		target: "e.swallow.icon";				\
		after: "urgent2";						\
	}											\
	program {									\
		name: "urgent2";						\
		action: STATE_SET "default" 0.0;		\
		transition: DECELERATE 0.5;				\
		target: "e.swallow.icon";				\
		after: "urgent";						\
	}											\
	program {									\
		name: "stop";							\
		signal: "e,state,not_urgent";			\
		source: "e";							\
		action: ACTION_STOP;					\
		target: "urgent";						\
		target: "urgent2";						\
	}											\
	program { name: "shade_hide";					\
         action: STATE_SET "hidden" 0.0;			\
         target: "client_clip";						\
    }												\
    program {										\
			signal: "e,state,shading"; source: "e";	\
			action: STATE_SET "shaded" 0.0;			\
			target: "e.swallow.client";				\
	}												\
	program {										\
			signal: "e,state,unshaded"; source: "e";\
			action: STATE_SET "default" 0.0;		\
			target: "e.swallow.client";				\
	}												\
	program {										\
         signal: "e,state,shadow,on"; source: "e";	\
         action: STATE_SET "default" 0.0;			\
         target: "shadow_clip";						\
    }												\
    program {										\
         signal: "e,state,shadow,off"; source: "e";	\
         action: STATE_SET "hidden" 0.0;			\
         target: "shadow_clip";						\
    }												\
    
#define BORDER_BUSY_PROGRAMS()						\
	  program { name: "spin";						\
         signal: "e,state,hung"; source: "e";		\
         action: STATE_SET "spin" 0.0;				\
         transition: LINEAR 1.0;					\
         target: "busy_spinner";					\
         after: "spin2";							\
      }												\
      program { name: "spin2";						\
         action: STATE_SET "default" 0.0;			\
         target: "busy_spinner";					\
         after: "spin";								\
      }												\
      program {										\
         signal: "e,state,hung"; source: "e";		\
         action: STATE_SET "hung" 0.0;				\
         transition: SINUSOIDAL 0.25;				\
         target: "busy_clip";						\
      }												\
      program {										\
         signal: "e,state,unhung"; source: "e";		\
         action: STATE_SET "default" 0.0;			\
         transition: SINUSOIDAL 1.0;				\
         target: "busy_clip";						\
         after: "spin3";							\
      }												\
      program { name: "spin3";						\
         action: ACTION_STOP;						\
         target: "spin";							\
         target: "spin2";							\
         after: "spin4";							\
      }												\
      program { name: "spin4";						\
         action: STATE_SET "default" 0.0;			\
         target: "busy_spinner";					\
      }												\


#define BORDER_EVENT_MAP(NAME, REL1, OFF1, REL2, OFF2)	\
	part {												\
		name: NAME;										\
		type: RECT;										\
		mouse_events: 1;								\
		description {									\
			state: "default" 0.0;						\
			color: 0 0 0 0;								\
			rel1 {										\
				relative: REL1;							\
				offset: OFF1;							\
			}											\
														\
			rel2 {										\
				relative: REL2;							\
				offset: OFF2;							\
			}											\
		}												\
	}													\

#define BORDER_BUTTONS(NAME, EVENT, SIZE, REL1, OFF1, REL2, OFF2, IMG)	\
	part {																\
		name: NAME"_bg";												\
		type: IMAGE;													\
		mouse_events: 0;												\
		description {													\
			state: "default" 0.0;										\
			rel1.to: NAME;												\
			rel2.to: NAME;												\
			image {														\
				normal: "images/window-border_bt0.png";					\
			}															\
			COLORIZE_BUTTONS;											\
		}																\
		description {													\
			state: "focused" 0.0;										\
			inherit: "default" 0.0;										\
			COLORIZE_ACTIVE_BUTTONS;									\
		}																\
	}																	\
	part {																\
		name: NAME;														\
		type: IMAGE;													\
		mouse_events: 1;												\
		description {													\
			state: "default" 0.0;										\
			min: SIZE;													\
			max: SIZE;													\
			rel1 {														\
				relative: REL1;											\
				offset: OFF1;											\
			}															\
			rel2 {														\
				relative: REL2;											\
				offset: OFF2;											\
			}															\
			image {														\
				normal: IMG;											\
			}															\
			color: 240 240 240 255;										\
		}																\
		description {													\
			state: "focused" 0.0;										\
			inherit: "default" 0.0;										\
			color: 255 255 255 255;										\
		}																\
		description {													\
			state: "clicked" 0.0;										\
			inherit: "default" 0.0;										\
			color: 205 205 205 255;										\
		}																\
	}																	\
	part {																\
		name: EVENT;													\
		type: RECT;														\
		repeat_events: 1;												\
		description {													\
			state: "default" 0.0;										\
			color: 0 0 0 0;												\
			rel1.to: NAME;												\
			rel2.to: NAME;												\
		}																\
	}																	\


#define BORDER_ICON(NAME, EVENT, TO)					\
	part {												\
		name: NAME;										\
		type: SWALLOW;									\
														\
		description {									\
			state: "default" 0.0;						\
			aspect: 1.0 1.0;							\
			align: 0.0 0.0;								\
			aspect_preference: BOTH;					\
			rel1 {										\
				to: TO;									\
				offset: 6 3;							\
			}											\
			rel2 {										\
				to: TO;									\
				offset: 0 -4;							\
			}											\
		}												\
		description {									\
			state: "urgent" 0.0;						\
			inherit: "default" 0.0;						\
			color: 255 200 200 255;						\
		}												\
	}													\
	part {												\
		name: EVENT;									\
		type: RECT;										\
		mouse_events: 1;								\
														\
		description {									\
			state: "default" 0.0;						\
			color: 0 0 0 0;								\
			rel1 {										\
				to: NAME;								\
			}											\
														\
			rel2 {										\
				to: NAME;								\
			}											\
		}												\
	}

#define BORDER_EVENT_MAP_RESIZE(LEFT, RIGHT, TOP, BOTTOM, OFFSET)		\
	BORDER_EVENT_MAP("e.event.resize.t",  0.0 0.0, 5     0,       1.0 0.0, -6     2);	\
	BORDER_EVENT_MAP("e.event.resize.l",  0.0 0.0, 0     5,       0.0 1.0, LEFT  -6);	\
	BORDER_EVENT_MAP("e.event.resize.r",  1.0 0.0, RIGHT 0,       1.0 1.0, -1    -6);	\
	BORDER_EVENT_MAP("e.event.resize.tl", 0.0 0.0, 0     0,       0.0 0.0,  5     5);	\
	BORDER_EVENT_MAP("e.event.resize.tr", 1.0 0.0, -6    0,       1.0 0.0, -1     5);	\
	BORDER_EVENT_MAP("e.event.resize.bl", 0.0 1.0, 0    -6,       0.0 1.0,  5    -1);	\
	BORDER_EVENT_MAP("e.event.resize.br", 1.0 1.0, -6   -6,       1.0 1.0, -1    -1);	\
	BORDER_EVENT_MAP("e.event.resize.b",  0.0 1.0, 5     BOTTOM,  1.0 1.0, -6    -1);	\

#define BORDER_IMAGE(IMG, _BORDER, SIZE)			\
	part {											\
		name: "border";								\
		description {								\
			state: "default" 0.0;					\
			min: SIZE;								\
			image {									\
				normal: IMG;						\
				border: _BORDER;					\
				middle: 0;							\
			}										\
			COLORIZE;								\
		}											\
		description {								\
			state: "focused" 0.0;					\
			inherit: "default" 0.0;					\
			COLORIZE_ACTIVE;						\
		}											\
	}												\

#define BORDER_COLOR(IMG, _BORDER, SIZE)		\
	part {										\
		name: "border_color";					\
		description {							\
			state: "default" 0.0;				\
			min: SIZE;							\
			image {								\
				normal: IMG;					\
				border: _BORDER;				\
				middle: 0;						\
			}									\
			color_class: "border_frame";		\
		}										\
		description {							\
			state: "focused" 0.0;				\
			inherit: "default" 0.0;				\
			color_class: "border_frame_active";	\
		}										\
	}											\
	
#define BORDER_COLOR_POST(IMG, _BORDER, SIZE)	\
	part {										\
		name: "border_color_post";				\
		description {							\
			state: "default" 0.0;				\
			min: SIZE;							\
			image {								\
				normal: IMG;					\
				border: _BORDER;				\
				middle: 0;						\
			}									\
			color_class: "border_frame_post";	\
		}										\
		description {							\
			state: "focused" 0.0;				\
			inherit: "default" 0.0;				\
			color_class: "border_frame_active_post";	\
		}										\
	}											\

#define BORDER_SHADOW()											\
part { name: "shadow_clip"; type: RECT;										\
         description { state: "default" 0.0;								\
            rel1.to: "shadow";												\
            rel2.to: "shadow";												\
            color: 255 255 255 255;											\
         }																	\
         description { state: "hidden" 0.0;									\
            inherit: "default" 0.0;											\
            color: 255 255 255 0;											\
            visible: 0;														\
         }																	\
      }																		\
      part { name: "shadow"; mouse_events: 0;								\
         clip_to: "shadow_clip";											\
         description { state: "default" 0.0;								\
            image.normal: "images/comp/comp-sh1.png";						\
            image.border: 35 35 35 35;										\
            image.middle: 0;												\
            rel1.to: "border";												\
            rel1.offset: -35  -35;											\
            rel2.to: "border";												\
            rel2.offset: 34 34;												\
            fill.smooth: 1;													\
            color: 0 0 0 255;												\
         }																	\
         description { state: "maximized" 0.0;								\
			inherit: "default" 0.0;											\
			visible: 0;														\
			color: 0 0 0 0;													\
         }																	\
      }																		\

#define BORDER_CLIENT(LEFT, RIGHT, TOP, BOTTOM)								\
	part { name: "client_clip"; type: RECT; mouse_events: 0;				\
         description { state: "default" 0.0;								\
            rel1.to: "e.swallow.client";									\
            rel2.to: "e.swallow.client";									\
         }																	\
         description { state: "hidden" 0.0;									\
			inherit: "default" 0.0;											\
			visible: 0;														\
		}																	\
	}																		\
	part {																	\
		name: "e.swallow.client";											\
		clip_to: "client_clip";												\
		type: SWALLOW;														\
		description {														\
			state: "default" 0.0;											\
			rel1.relative: 0.0 0.0;											\
            rel1.to: "border";												\
            rel1.offset: LEFT TOP;											\
            rel2.relative: 1.0 1.0;											\
            rel2.to: "border";												\
            rel2.offset: RIGHT BOTTOM;										\
		}																	\
		description { state: "shaded" 0.0;									\
			inherit: "default" 0.0;											\
			visible: 0;														\
		}																	\
	}																		\

#define BORDER_TITLE(HEIGHT, TO_LEFT, TO_RIGHT)			\
	part {												\
		name: "title.area.clip";						\
		type: RECT;										\
		mouse_events: 0;								\
		description {									\
			state: "default" 0.0;						\
			min: 1 HEIGHT;								\
			rel1 {										\
				relative: 1.0 0.0;						\
				to_x: TO_LEFT;							\
				offset: 6 0;							\
			}											\
			rel2 {										\
				to_x: TO_RIGHT;							\
				relative: 0.0 0.0;						\
				offset: -1 HEIGHT;						\
			}											\
		}												\
	}													\
	part {												\
		name: "e.text.title";							\
		type: TEXT;										\
		effect: SHADOW;									\
		scale: 1;										\
		mouse_events: 0;								\
		clip_to: "title.area.clip";						\
		description {									\
			state: "default" 0.0;						\
			rel1.to: "title.area.clip";					\
			rel2.to: "title.area.clip";					\
			rel1.offset: 0 5;							\
			rel2.offset: -1 -3;							\
			color3: 255 255 255 255;					\
			color_class: "border_title";				\
			TEXT_TITLE("title_bar", 0.5 0.5, 0 1);		\
		}												\
		description {									\
			state: "focused" 0.0;						\
			inherit: "default" 0.0;						\
			color3: 255 255 255 255;					\
			color_class: "border_title_active";			\
		}												\
	}

#define BORDER_SPARKLE()								\
	part { name: "border_sparkle";						\
			description {								\
				state: "default" 0.0;					\
				min: 25 25;								\
				image {									\
					normal: "images/window-border1.png";\
					border: 0 0 23 2;					\
					middle: 0;							\
				}										\
				fill { size { relative: 0.0 1.0; offset: 48 0; } }	\
				color: 255 255 255 50;					\
			}											\
			description {								\
				state: "focused" 0.0;					\
				inherit: "default" 0.0;					\
				color: 255 255 255 200;					\
			}											\
		}												\

#define BORDER_KNOB()									\
	part { name: "busy_clip"; type: RECT; mouse_events: 0;\
         description { state: "default" 0.0;			\
            color: 255 255 255 0;						\
            visible: 0;									\
         }												\
         description { state: "hung" 0.0;				\
            inherit: "default" 0.0;						\
            color: 255 255 255 255;						\
            visible: 1;									\
         }												\
      }													\
      part { name: "busy_shadow"; mouse_events: 0;		\
          clip_to: "busy_clip";							\
		  description { state: "default" 0.0;			\
				fixed: 1 1;								\
				image.normal: "images/cursor_shadow.png";	\
				aspect: 1.0 1.0; aspect_preference: VERTICAL;	\
				max: 20 20;								\
				rel1.relative: 1.0 0.0;					\
				rel1.offset: 2 -0;						\
				rel1.to: "e.event.icon";				\
				rel2.relative: 1.0 1.0;					\
				rel2.offset: 2 -1;						\
				rel2.to: "e.event.icon";				\
				align: 0.0 0.5;							\
				fixed: 1 1;								\
			}											\
		}												\
		part { name: "busy_spinner"; mouse_events: 0;	\
			clip_to: "busy_clip";						\
			description { state: "default" 0.0;			\
				fixed: 1 1;								\
				rel1.to: "busy_shadow";					\
				rel2.to: "busy_shadow";					\
				image.normal: "images/cursor_main.png";	\
				map.on: 1;								\
				map.smooth: 1;							\
				map.rotation.center: "busy_shadow";		\
			}											\
			description { state: "spin" 0.0;			\
				inherit: "default" 0.0;					\
				map.rotation.z: 360;					\
				}										\
		}												\
		part { name: "busy_up"; mouse_events: 0;		\
			clip_to: "busy_clip";						\
			description { state: "default" 0.0;			\
				fixed: 1 1;								\
				image.normal: "images/cursor_up.png";	\
				rel1.to: "busy_shadow";					\
				rel2.to: "busy_shadow";					\
			}											\
		}												\


#if BUILD_COMPOSITE
#define BORDER_DATA								\
	data {										\
		item: "argb" "1";						\
	}
#else
#define BORDER_DATA								\
	data {										\
        item: "shaped" "1";						\
	}
#endif

#if (COLORS == 0)
#define COLORIZE
#define COLORIZE_ACTIVE
#define COLORIZE_BUTTONS		color_class: "border_buttons_post";
#define COLORIZE_ACTIVE_BUTTONS color_class: "border_buttons_post_active";
#else
#define COLORIZE        color_class: "border_frame";
#define COLORIZE_ACTIVE color_class: "border_frame_active";
#define COLORIZE_BUTTONS		color_class: "border_frame";
#define COLORIZE_ACTIVE_BUTTONS color_class: "border_frame_active";
#endif		

#define TOP 23
#define LEFT 1
#define RIGHT -2
#define BOTTOM -3

group {
    name: "e/widgets/border/default/border";
    alias: "e/widgets/border/urgent/border";
    alias: "e/widgets/border/wm_app/border";
    alias: "e/widgets/border/dialog/border";
	alias: "e/widgets/border/internal_fileman/border";
	alias: "e/widgets/border/shaped/border";
	BORDER_DATA;
	data.item: "shaped" "1";

    parts {
		BORDER_SHADOW();

		BORDER_COLOR("images/window-border-color.png", 6 6 23 2, 25 25);
		BORDER_IMAGE("images/window-border.png", 6 6 23 2, 25 25);
		BORDER_COLOR_POST("images/window-border-color.png", 6 6 23 2, 25 25);
		
		BORDER_CLIENT(LEFT, RIGHT, TOP, BOTTOM);
		
		BORDER_TITLE(TOP, "e.swallow.icon", "button-min");

        BORDER_EVENT_MAP("e.event.titlebar",  0.0 0.0, 0 0, 1.0 0.0, -1 TOP);
		BORDER_EVENT_MAP_RESIZE(LEFT, RIGHT, TOP, BOTTOM, 5);

        BORDER_BUTTONS("button-close", "e.event.close",
					   20 18, 1.0 0.0, -8 1, 1.0 0.0, -28 TOP,
					   "images/window-border_bt2.png");
		BORDER_BUTTONS("button-max",   "e.event.maximize",
					   20 18, 1.0 0.0, -29 1, 1.0 0.0, -49 TOP,
					   "images/window-border_bt2.png");
		BORDER_BUTTONS("button-min",   "e.event.minimize",
					   20 18, 1.0 0.0, -50 1, 1.0 0.0, -70 TOP,
					   "images/window-border_bt2.png");

        BORDER_ICON("e.swallow.icon", "e.event.icon", "e.event.titlebar");
        BORDER_KNOB();
    }

    programs {
        BORDER_PROGRAMS();
        BORDER_BUSY_PROGRAMS();
    }
}

group {
	name: "e/widgets/border/noresize_dialog/border";
    alias: "e/widgets/border/noresize/border";
    alias: "e/widgets/border/modal/border";
    BORDER_DATA;
	data.item: "shadow" "1";
	
	parts {
		BORDER_SHADOW();
		BORDER_COLOR("images/window-border-color.png", 6 6 23 2, 25 25);
		BORDER_IMAGE("images/window-border.png", 6 6 23 2, 25 25);
		BORDER_COLOR_POST("images/window-border-color.png", 6 6 23 2, 25 25);

		BORDER_CLIENT(LEFT, RIGHT, TOP, BOTTOM);

		BORDER_TITLE(TOP, "e.swallow.icon", "button-close");

        BORDER_EVENT_MAP("e.event.titlebar",  0.0 0.0, 0 0, 1.0 0.0, -1 TOP);

        BORDER_BUTTONS("button-close", "e.event.close",
					   20 18, 1.0 0.0, -8 1, 1.0 0.0, -28 TOP,
					   "images/window-border_bt2.png");

        BORDER_ICON("e.swallow.icon", "e.event.icon", "e.event.titlebar");
        BORDER_KNOB();
    }
    programs {
        BORDER_int_PROGRAMS();
        BORDER_BUSY_PROGRAMS();
    }

}

group { name: "e/widgets/border/sparkle/border";
    BORDER_DATA;
	data.item: "shadow" "1";
	images.image: "images/window-border1.png" COMP;
    parts {
		BORDER_SHADOW();

		BORDER_COLOR("images/window-border-color.png", 6 6 23 2, 25 25);
		BORDER_IMAGE("images/window-border.png", 6 6 23 2, 25 25);
		BORDER_COLOR_POST("images/window-border-color.png", 6 6 23 2, 25 25);
		BORDER_SPARKLE();
		BORDER_CLIENT(LEFT, RIGHT, TOP, BOTTOM);
		
		BORDER_TITLE(TOP, "e.swallow.icon", "button-min");

        BORDER_EVENT_MAP("e.event.titlebar",  0.0 0.0, 0 0, 1.0 0.0, -1 TOP);
		BORDER_EVENT_MAP_RESIZE(LEFT, RIGHT, TOP, BOTTOM, 5);

        BORDER_BUTTONS("button-close", "e.event.close",
					   20 18, 1.0 0.0, -8 1, 1.0 0.0, -28 TOP,
					   "images/window-border_bt2.png");
		BORDER_BUTTONS("button-max",   "e.event.maximize",
					   20 18, 1.0 0.0, -29 1, 1.0 0.0, -49 TOP,
					   "images/window-border_bt2.png");
		BORDER_BUTTONS("button-min",   "e.event.minimize",
					   20 18, 1.0 0.0, -50 1, 1.0 0.0, -70 TOP,
					   "images/window-border_bt2.png");

        BORDER_ICON("e.swallow.icon", "e.event.icon", "e.event.titlebar");
        BORDER_KNOB();
    }

    programs {
        BORDER_PROGRAMS();
        BORDER_BUSY_PROGRAMS();
        program {
			name: "active1";
			signal: "e,state,focused";
			source: "e";
			action: STATE_SET "focused" 0.0;
			transition: ACCELERATE 0.2;
			target: "border_sparkle";
		}
		program {
			name: "inactive1";
			signal: "e,state,unfocused";
			source: "e";
			action: STATE_SET "default" 0.0;
			transition: DECELERATE 0.2;
			target: "border_sparkle";
		}
    }
}

#undef TOP
#undef LEFT
#undef RIGHT
#undef BOTTOM

#define TOP 23
#define LEFT 1
#define RIGHT -2
#define BOTTOM -2

group {
    name: "e/widgets/border/square/border";
	data.item: "shadow" "1";
    parts {
		BORDER_SHADOW();
		BORDER_COLOR("images/window-border-squarec.png", 2 2 23 1, 24 23);
		BORDER_IMAGE("images/window-border-square.png", 2 2 23 1, 24 23);
		BORDER_COLOR_POST("images/window-border-squarec.png", 2 2 23 1, 24 23);

		BORDER_CLIENT(LEFT, RIGHT, TOP, BOTTOM);
		
		BORDER_TITLE(TOP, "e.swallow.icon", "button-min");

        BORDER_EVENT_MAP("e.event.titlebar",  0.0 0.0, 0 0, 1.0 0.0, -1 TOP);
		BORDER_EVENT_MAP_RESIZE(LEFT, RIGHT, TOP, BOTTOM, 5);

        BORDER_BUTTONS("button-close", "e.event.close",
					   20 18, 1.0 0.0, -8 1, 1.0 0.0, -28 TOP,
					   "images/window-border_bt2.png");
		BORDER_BUTTONS("button-max",   "e.event.maximize",
					   20 18, 1.0 0.0, -29 1, 1.0 0.0, -49 TOP,
					   "images/window-border_bt2.png");
		BORDER_BUTTONS("button-min",   "e.event.minimize",
					   20 18, 1.0 0.0, -50 1, 1.0 0.0, -70 TOP,
					   "images/window-border_bt2.png");

        BORDER_ICON("e.swallow.icon", "e.event.icon", "e.event.titlebar");
        BORDER_KNOB();
    }

    programs {
        BORDER_PROGRAMS();
        BORDER_BUSY_PROGRAMS();
    }
}

#if BUILD_COMPOSITE
#undef TOP
#undef LEFT
#undef RIGHT
#undef BOTTOM

#define TOP 22
#define LEFT 5
#define RIGHT -6
#define BOTTOM -6

group {
    name: "e/widgets/border/glass/border";

	BORDER_DATA;
	data.item: "shadow" "1";
    parts {
		part {
            name: "border_color";
            type: RECT;
            mouse_events: 0;
            description {
				state: "default" 0.0;
				visible: 0;
            }
		}
		BORDER_SHADOW();
		BORDER_IMAGE("images/window-border-glass.png", 6 6 22 6, 28 28);
		part {
            name: "border_color_post";
            type: RECT;
            mouse_events: 0;
            description {
				state: "default" 0.0;
				visible: 0;
            }
		}
		BORDER_CLIENT(LEFT, RIGHT, TOP, BOTTOM);
		
		BORDER_TITLE(TOP, "e.swallow.icon", "button-min");

        BORDER_EVENT_MAP("e.event.titlebar",  0.0 0.0, 0 0, 1.0 0.0, -1 TOP);
		BORDER_EVENT_MAP_RESIZE(LEFT, RIGHT, TOP, BOTTOM, 5);

        BORDER_BUTTONS("button-close", "e.event.close",
					   20 18, 1.0 0.0, -8 1, 1.0 0.0, -28 TOP,
					   "images/window-border_bt2.png");
		BORDER_BUTTONS("button-max",   "e.event.maximize",
					   20 18, 1.0 0.0, -29 1, 1.0 0.0, -49 TOP,
					   "images/window-border_bt2.png");
		BORDER_BUTTONS("button-min",   "e.event.minimize",
					   20 18, 1.0 0.0, -50 1, 1.0 0.0, -70 TOP,
					   "images/window-border_bt2.png");

        BORDER_ICON("e.swallow.icon", "e.event.icon", "e.event.titlebar");
        BORDER_KNOB();
    }

    programs {
        BORDER_PROGRAMS();
        BORDER_BUSY_PROGRAMS();
    }
}
#endif

#undef TOP
#undef LEFT
#undef RIGHT
#undef BOTTOM

group {
    name: "e/widgets/border/pixel/border";
	parts {
        part {
            name: "pixel";
            type: RECT;

            description {
                state: "default" 0.0;
                color: 104 108 111 255;
                visible: 1;

                rel1 {
                    relative: 0.0 0.0;
                    offset: 0 0;
                }

                rel2 {
                    relative: 1.0 1.0;
                    offset: -1 -1;
                }
            }
        }

		//BORDER_CLIENT(1, -2, 1, -2);
		//#define BORDER_CLIENT(LEFT, RIGHT, TOP, BOTTOM)
		part {
			name: "e.swallow.client";
			type: SWALLOW;
				description {
					state: "default" 0.0;
					rel1 {
					offset: 1 1;
					}
					rel2 {
					offset: -2 -2;
					}
				}
		}
	}
}

BORDER_MENU_BUTTON("basic", "empty");
BORDER_MENU_BUTTON("resize_icon", "object-resize");
BORDER_MENU_BUTTON("move_icon","object-move")
BORDER_MENU_BUTTON("close", "dialog-close");
BORDER_MENU_BUTTON("minimize", "bottom");
BORDER_MENU_BUTTON("maximize", "gtk-fullscreen");
BORDER_MENU_BUTTON("shade", "list-remove");
BORDER_MENU_BUTTON("stick", "gtk-media-record");
BORDER_MENU_BUTTON("kill", "dialog-close");
BORDER_MENU_BUTTON("locks", "button_cancel");
BORDER_MENU_BUTTON("locks_user", "button_cancel");
BORDER_MENU_BUTTON("locks_application", "button_cancel");
BORDER_MENU_BUTTON("borderless", "application-default-icon");
BORDER_MENU_BUTTON("fullscreen", "gtk-fullscreen");
BORDER_MENU_BUTTON("remember", "hint");
BORDER_MENU_BUTTON("skip_winlist", "edit-redo");
BORDER_MENU_BUTTON("sendto", "go-jump");
BORDER_MENU_BUTTON("stacking", "format-justify-fill");
BORDER_MENU_BUTTON("stack_on_top", "go-up");
BORDER_MENU_BUTTON("stack_normal", "centrejust");
BORDER_MENU_BUTTON("stack_below", "down");
BORDER_MENU_BUTTON("skip", "edit-redo");
BORDER_MENU_BUTTON("skip_pager", "edit-redo");
BORDER_MENU_BUTTON("skip_taskbar", "edit-redo");
BORDER_MENU_BUTTON("properties", "gtk-edit");

#undef BORDER_PROGRAMS
#undef BORDER_int_PROGRAMS
#undef BORDER_EVENT_MAP
#undef BORDER_BUTTONS
#undef BORDER_ICON
#undef BORDER_EVENT_MAP_RESIZE
#undef BORDER_IMAGE
#undef BORDER_COLOR
#undef BORDER_COLOR_POST
#undef BORDER_SHADOW
#undef BORDER_CLIENT
#undef BORDER_TITLE
#undef BORDER_DATA
#undef COLORIZE
#undef COLORIZE_ACTIVE
#undef COLORIZE_BUTTONS
#undef COLORIZE_ACTIVE_BUTTONS
#undef BORDER_KNOB
