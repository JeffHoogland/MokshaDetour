#if (BUILD_ILLUME == 1)
group { name: "elm/scroller/base/default";

   alias: "elm/list/base/default";
   alias: "elm/genlist/base/default";
   alias: "elm/carousel/base/default";
   alias: "elm/gengrid/base/default";
   alias: "elm/scroller/base/map_bubble";
   alias: "elm/genscroller/base/default";

   data {
      item: "focus_highlight" "on";
   }

   script {
      public sbvis_v, sbvis_h, sbalways_v, sbalways_h, sbvis_timer;
      public timer0(val) {
         new v;
         v = get_int(sbvis_v);
         if (v) {
            v = get_int(sbalways_v);
            if (!v) {
               emit("do-hide-vbar", "");
               set_int(sbvis_v, 0);
            }
         }
         v = get_int(sbvis_h);
         if (v) {
            v = get_int(sbalways_h);
            if (!v) {
               emit("do-hide-hbar", "");
               set_int(sbvis_h, 0);
            }
         }
         set_int(sbvis_timer, 0);
         return 0;
      }
   }
   parts {
	   part {
		   name: "bg";
		   type: IMAGE;
		   mouse_events: 0;

		   description {
			   state: "default" 0.0;
			   rel1 {
				   to: "overlay";
				   offset: -1 0;
			   }
			   rel2 {
				   to: "overlay";
				   offset: 0 0;
			   }
			   image {
				   normal: "images/scrollframe_im0.png";
				   border: 7 7 7 7;
			   }
			   color: 0 0 0 0;
			   color_class: "scrollframe_base";
		   }
	   }
      part { name: "clipper";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to: "bg";
            rel2.to: "bg";
            rel1.offset: 2 2;
            rel2.offset: -3 -3;
         }
      }
      part { name: "elm.swallow.content";
         clip_to: "clipper";
         type: SWALLOW;
         description { state: "default" 0.0;
            rel1.to: "bg";
            rel2.to: "bg";
            rel1.offset: 2 2;
            rel2.offset: -3 -3;
         }
      }
	  part {
		  name: "overlay";
		  type: IMAGE;
		  mouse_events: 0;
		  description {
			  state: "default" 0.0;
			  rel1 {
			  	  offset: -2 -1;
			  }
			  rel2 {
			  	  offset: 1 -1;
			  }
			  image {
				  normal: "images/scrollframe/over.png";
				  border: 5 5 5 6;
				  middle: 0;
			  }
			  color_class: "dialog_base";
		  }
	  }

      part { name: "sb_vbar_clip_master";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
         }
         description { state: "hidden" 0.0;
            visible: 0;
            color: 255 255 255 0;
         }
      }
      part { name: "sb_vbar_clip";
         clip_to: "sb_vbar_clip_master";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
         }
         description { state: "hidden" 0.0;
            visible: 0;
            color: 255 255 255 0;
         }
      }
      part { name: "sb_vbar";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            fixed: 1 1;
            visible: 0;
            min: 10 17;
            align: 1.0 0.0;
            rel1 {
               relative: 1.0 0.0;
               offset:   0 2;
               to_y:     "elm.swallow.content";
               to_x:     "elm.swallow.content";
            }
            rel2 {
               relative: 1.0 0.0;
               offset:   -1 -1;
               to_y:     "sb_hbar";
               to_x:     "elm.swallow.content";
            }
         }
      }
      part { name: "elm.dragable.vbar";
         clip_to: "sb_vbar_clip";
         mouse_events: 0;
         dragable {
            x: 0 0 0;
            y: 1 1 0;
            confine: "sb_vbar";
         }
         description { state: "default" 0.0;
            fixed: 1 1;
            min: 10 17;
            max: 10 99999;
            rel1 {
               relative: 0.5  0.5;
               offset:   0    0;
               to: "sb_vbar";
            }
            rel2 {
               relative: 0.5  0.5;
               offset:   0    0;
               to: "sb_vbar";
            }
            image {
               normal: "images/elm/bt_sm_base1.png";
               border: 6 6 6 6;
               middle: SOLID;
            }
            color_class: "scroller_drag";
         }
      }

      part { name: "sb_hbar_clip_master";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
         }
         description { state: "hidden" 0.0;
            visible: 0;
            color: 255 255 255 0;
         }
      }
      part { name: "sb_hbar_clip";
         clip_to: "sb_hbar_clip_master";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
         }
         description { state: "hidden" 0.0;
            visible: 0;
            color: 255 255 255 0;
         }
      }
      part { name: "sb_hbar";
         type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            fixed: 1 1;
            visible: 0;
            min: 17 10;
            align: 0.0 1.0;
            rel1 {
               relative: 0.0 1.0;
               offset:   2 0;
               to_x:     "elm.swallow.content";
               to_y:     "elm.swallow.content";
            }
            rel2 {
               relative: 0.0 1.0;
               offset:   -1 -1;
               to_x:     "sb_vbar";
               to_y:     "elm.swallow.content";
            }
         }
      }
      part { name: "elm.dragable.hbar";
         clip_to: "sb_hbar_clip";
         mouse_events: 0;
         dragable {
            x: 1 1 0;
            y: 0 0 0;
            confine: "sb_hbar";
         }
         description { state: "default" 0.0;
            fixed: 1 1;
            min: 17 10;
            max: 99999 10;
            rel1 {
               relative: 0.5  0.5;
               offset:   0    0;
               to: "sb_hbar";
            }
            rel2 {
               relative: 0.5  0.5;
               offset:   0    0;
               to: "sb_hbar";
            }
            image {
               normal: "images/elm/bt_sm_base1.png";
               border: 6 6 6 6;
               middle: SOLID;
            }
         }
      }
      part { name: "disabler";
         type: RECT;
         description { state: "default" 0.0;
            rel1.to: "clipper";
            rel2.to: "clipper";
            color: 0 0 0 0;
            visible: 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            color: 128 128 128 128;
         }
      }
   }
   programs {
      program { name: "load";
         signal: "load";
         source: "";
         script {
            set_state(PART:"sb_hbar_clip", "hidden", 0.0);
            set_state(PART:"sb_vbar_clip", "hidden", 0.0);
            set_int(sbvis_h, 0);
            set_int(sbvis_v, 0);
            set_int(sbalways_v, 0);
            set_int(sbalways_h, 0);
            set_int(sbvis_timer, 0);
         }
      }

      program { name: "vbar_show";
         signal: "elm,action,show,vbar";
         source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "sb_vbar_clip_master";
      }
      program { name: "vbar_hide";
         signal: "elm,action,hide,vbar";
         source: "elm";
         action:  STATE_SET "hidden" 0.0;
         target: "sb_vbar_clip_master";
      }
      program { name: "vbar_show_always";
         signal: "elm,action,show_always,vbar";
         source: "elm";
         script {
            new v;
            v = get_int(sbvis_v);
            v |= get_int(sbalways_v);
            if (!v) {
               set_int(sbalways_v, 1);
               emit("do-show-vbar", "");
               set_int(sbvis_v, 1);
            }
         }
      }
      program { name: "vbar_show_notalways";
         signal: "elm,action,show_notalways,vbar";
         source: "elm";
         script {
            new v;
            v = get_int(sbalways_v);
            if (v) {
               set_int(sbalways_v, 0);
               v = get_int(sbvis_v);
               if (!v) {
                  emit("do-hide-vbar", "");
                  set_int(sbvis_v, 0);
               }
            }
         }
      }
      program { name: "sb_vbar_show";
         signal: "do-show-vbar";
         source: "";
         action:  STATE_SET "default" 0.0;
         transition: LINEAR 0.5;
         target: "sb_vbar_clip";
      }
      program { name: "sb_vbar_hide";
         signal: "do-hide-vbar";
         source: "";
         action:  STATE_SET "hidden" 0.0;
         transition: LINEAR 0.5;
         target: "sb_vbar_clip";
      }

      program { name: "hbar_show";
         signal: "elm,action,show,hbar";
         source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "sb_hbar_clip_master";
      }
      program { name: "hbar_hide";
         signal: "elm,action,hide,hbar";
         source: "elm";
         action:  STATE_SET "hidden" 0.0;
         target: "sb_hbar_clip_master";
      }
      program { name: "hbar_show_always";
         signal: "elm,action,show_always,hbar";
         source: "elm";
         script {
            new v;
            v = get_int(sbvis_h);
            v |= get_int(sbalways_h);
            if (!v) {
               set_int(sbalways_h, 1);
               emit("do-show-hbar", "");
               set_int(sbvis_h, 1);
            }
         }
      }
      program { name: "hbar_show_notalways";
         signal: "elm,action,show_notalways,hbar";
         source: "elm";
         script {
            new v;
            v = get_int(sbalways_h);
            if (v) {
               set_int(sbalways_h, 0);
               v = get_int(sbvis_h);
               if (!v) {
                  emit("do-hide-hbar", "");
                  set_int(sbvis_h, 0);
               }
            }
         }
      }
      program { name: "sb_hbar_show";
         signal: "do-show-hbar";
         source: "";
         action:  STATE_SET "default" 0.0;
         transition: LINEAR 0.5;
         target: "sb_hbar_clip";
      }
      program { name: "sb_hbar_hide";
         signal: "do-hide-hbar";
         source: "";
         action:  STATE_SET "hidden" 0.0;
         transition: LINEAR 0.5;
         target: "sb_hbar_clip";
      }

      program { name: "scroll";
         signal: "elm,action,scroll";
         source: "elm";
         script {
            new v;
            v = get_int(sbvis_v);
            v |= get_int(sbalways_v);
            if (!v) {
               emit("do-show-vbar", "");
               set_int(sbvis_v, 1);
            }
            v = get_int(sbvis_h);
            v |= get_int(sbalways_h);
            if (!v) {
               emit("do-show-hbar", "");
               set_int(sbvis_h, 1);
            }
            v = get_int(sbvis_timer);
            if (v > 0) cancel_timer(v);
            v = timer(1.0, "timer0", 0);
            set_int(sbvis_timer, v);
         }
      }

      program { name: "highlight_show";
         signal: "elm,action,focus_highlight,show";
         source: "elm";
         action: STATE_SET "enabled" 0.0;
         transition: ACCELERATE 0.3;
         /* target: "focus_highlight"; */
         target: "overlay";
      }
      program { name: "highlight_hide";
         signal: "elm,action,focus_highlight,hide";
         source: "elm";
         action: STATE_SET "default" 0.0;
         transition: DECELERATE 0.3;
         /* target: "focus_highlight"; */
         target: "overlay";
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "disabler";
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "disabler";
      }
   }
}
#else
group { name: "elm/scroller/base/default";
   
   alias: "elm/scroller/base/map_bubble";
   alias: "elm/genscroller/base/default";
   alias: "elm/scroller/base/popup/default";
   alias: "elm/scroller/base/popup/transparent";
   alias: "elm/list/base/default";
   alias: "elm/genlist/base/default";
   alias: "elm/carousel/base/default";
   alias: "elm/gengrid/base/default";

   data.item: "focus_highlight" "on";

   parts {
      program {
         signal: "load"; source: "";
         script {
            emit("reload", "elm");
         }
      }
// vert bar ////////////////////////////////////////////////////////////////
      part { name: "sb_vbar_show"; type: RECT; mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            rel1.offset: -11 -11;
            rel2.offset: 10 10;
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "sb_vbar"; type: RECT; mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            min: 14 14;
            align: 1.0 0.0;
            rel1.to: "bg";
			rel1.relative: 1.0 0.0;
			rel1.offset: 0 0;

			rel2.to: "bg";
			rel2.relative: 1.0 0.0;
			rel2.offset: -1 -1;
			rel2.to_y: "sb_hbar";
            fixed: 1 1;

         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            min: 0 0;
            max: 0 99999;
         }
      }
     

// horiz bar /////////////////////////////////////////////////////////////
      part { name: "sb_hbar_show"; type: RECT; mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            rel1.offset: -11 -11;
            rel2.offset: 10 10;
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "sb_hbar"; type: RECT; mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            min: 14 14;
            align: 0.0 1.0;
            rel1.to_x: "bg";
            rel1.relative: 0.0 1.0;
            rel1.offset: 0 -1;
            rel2.relative: 0.0 1.0;
            rel2.to_x: "sb_vbar";
            rel2.to_y: "bg";
            
            fixed: 1 1;
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            min: 0 0;
            max: 99999 0;
         }
      }
      
      

      part { name: "bg"; type: RECT; mouse_events: 0;
         description { state: "default" 0.0;
            rel1.offset: 3 3;
            rel2.offset: -4 -4;
			color: 0 0 0 0;
            color_class: "scrollframe_base";
            
         }
      }
      part { name: "clipper"; type: RECT; mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to: "elm.swallow.background"; 
            rel2.to: "elm.swallow.background";
         }
      }
      part { name: "elm.swallow.background"; type: SWALLOW; mouse_events: 0;
         clip_to: "clipper";
         description { state: "default" 0.0;
            rel1.to: "elm.swallow.content"; 
            rel2.to: "elm.swallow.content";
            
         }
      }
      part { name: "elm.swallow.content"; type: SWALLOW;
         clip_to: "clipper";
         description { state: "default" 0.0;
            rel1.offset: 1 1;
            rel1.to: "bg";
            rel2.relative: 0.0 0.0;
            rel2.offset: -4 -4;
            rel2.to_x: "sb_vbar";
            rel2.to_y: "sb_hbar";
         }
      }
      part { name: "inset"; mouse_events: 0;
         description { state: "default" 0.0;
            image.normal: "images/scrollframe/over.png";
            image.border: 5 5 5 6;
            image.middle: 0;
            color_class: "dialog_base";
            rel1.to: "clipper";
            rel1.offset: -1 -1;
            rel2.to: "clipper";
            rel2.offset: 0 0;
         }
      }
      part { name: "elm.swallow.overlay"; type: SWALLOW; mouse_events: 0;
         clip_to: "clipper";
         description { state: "default" 0.0;
            rel1.to: "elm.swallow.content";
            rel2.to: "elm.swallow.content";
         }
      }
      //With this part you can click on the Scrollbar Runner to move the dragable 
      part { name: "sb_vbar_p1"; type: RECT;
         clip_to: "sb_vbar";
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1.relative: 0.0 0.0;
            rel1.to: "sb_vbar";
            rel2.relative: 1.0 0.0;
            rel2.to: "elm.dragable.vbar";
         }
      }
      part { name: "sb_vbar_p2"; type: RECT;
         clip_to: "sb_vbar";
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1.relative: 0.0 1.0;
            rel1.to: "elm.dragable.vbar";
            rel2.relative: 1.0 1.0;
            rel2.to: "sb_vbar";
         }
      }
      part { name: "elm.dragable.vbar"; type: RECT;
         clip_to: "sb_vbar";
         scale: 1;
         dragable.x: 0 0 0;
         dragable.y: 1 1 0;
         dragable.confine: "sb_vbar";
         description { state: "default" 0.0;
            min: 14 15;
            max: 14 99999;
            rel1.relative: 0.5  0.5;
            rel1.to: "sb_vbar";
            rel2.relative: 0.5  0.5;
            rel2.to: "sb_vbar";
            color: 0 0 0 0;
            fixed: 1 1;
         }
      }
      part { name: "sb_hbar_p1"; type: RECT;
         clip_to: "sb_hbar";
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1.relative: 0.0 0.0;
            rel1.to: "sb_hbar";
            rel2.relative: 0.0 1.0;
            rel2.to: "elm.dragable.hbar";
         }
      }
      part { name: "sb_hbar_p2"; type: RECT;
         clip_to: "sb_hbar";
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1.relative: 1.0 0.0;
            rel1.to: "elm.dragable.hbar";
            rel2.relative: 1.0 1.0;
            rel2.to: "sb_hbar";
         }
      }
      part { name: "elm.dragable.hbar"; type: RECT;
         clip_to: "sb_hbar";
         scale: 1;
         dragable.x: 1 1 0;
         dragable.y: 0 0 0;
         dragable.confine: "sb_hbar";
         description { state: "default" 0.0;
            min: 15 14;
            max: 99999 14;
            rel1.relative: 0.5  0.5;
            rel1.to: "sb_hbar";
            rel2.relative: 0.5  0.5;
            rel2.to: "sb_hbar";
            color: 0 0 0 0;
            fixed: 1 1;
         }
      }
      //images
      part { name: "runner_vbar"; mouse_events: 0;
         clip_to: "sb_vbar_show";
         description { state: "default" 0.0;
            image.normal: "images/scrollframe/trough_v.png";
            image.border: 8 8 7 8;
            rel1.to: "sb_vbar";
            rel2.to: "sb_vbar";
            color_class: "dialog_base";
            max: 16 99999;
            min: 16 44;
			fixed: 1 0;
         }
      }
      part { name: "runner_hbar"; mouse_events: 0;
         clip_to: "sb_hbar_show";
         description { state: "default" 0.0;
            image.normal: "images/scrollframe/trough_v.png";
            image.border: 8 7 8 8;
            rel1.to: "sb_hbar";
            rel2.to: "sb_hbar";
            color_class: "dialog_base";
            min: 55 16;
            max: 99999 16;
			fixed: 0 1;
         }
      }
	  part { name: "base_vbar"; mouse_events: 0;
         clip_to: "sb_vbar_show";
         description { state: "default" 0.0;
            rel1.relative: 0.0 0.0;
            rel1.to: "elm.dragable.vbar";
            rel2.relative: 1.0 1.0;
            rel2.to: "elm.dragable.vbar";
            image.normal: "images/scrollframe-bar_im2.png";
            image.border: 6 6 6 6;
            fill.smooth: 1;
            min: 14 15;
            max: 14 99999;
            fixed: 1 1;
            color: 255 255 255 255;
            /*color_class: "scrollframe_base";*/
         }
         description {
                state: "clicked" 0.0;
                inherit: "default" 0.0;
                color: 235 235 235 255;
            }
      }
	  part { name: "base_vbar_over"; mouse_events: 0;
			clip_to: "sb_vbar_show";
		  description { state: "default" 0.0;
			  min: 7 11;
              max: 7 11;
			  rel1.to: "base_vbar";
			  rel1.offset: 0 8;
			  rel2.to: "base_vbar";
			  rel2.offset: 0 -8;
			  fixed: 1 1;
			  color: 255 255 255 255;
			  image.normal: "images/scrollframe-bar_im3.png";
			  image.border: 2 2 2 2;
		  }
		  description {
                state: "clicked" 0.0;
                inherit: "default" 0.0;
                color: 235 235 235 255;
            }
	  }
      part { name: "base_hbar"; mouse_events: 0;
         clip_to: "sb_hbar_show";
         description { state: "default" 0.0;
            rel1.relative: 0.0 0.0;
            rel1.to: "elm.dragable.hbar";
            rel2.relative: 1.0 1.0;
            rel2.to: "elm.dragable.hbar";
            image.normal: "images/scrollframe-bar_im0.png";
            image.border: 6 6 6 6;
            fill.smooth: 1;
            min: 15 14;
            max: 99999 14;
            fixed: 1 1;
            color: 255 255 255 255;
            /*color_class: "scrollframe_base";*/
         }
         description {
                state: "clicked" 0.0;
                inherit: "default" 0.0;
                color: 235 235 235 255;
            }
      }
	  part { name: "base_hbar_over"; mouse_events: 0;
			clip_to: "sb_hbar_show";
		  description { state: "default" 0.0;
			  min: 11 7;
              max: 11 7;
			  rel1.to: "base_hbar";
			  rel1.offset: 8 0;
			  rel2.to: "base_hbar";
			  rel2.offset: -8 0;
			  fixed: 1 1;
			  color: 255 255 255 255;
			  image.normal: "images/scrollframe-bar_im1.png";
			  image.border: 2 2 2 2;
		  }
		  description {
                state: "clicked" 0.0;
                inherit: "default" 0.0;
                color: 235 235 235 255;
            }
	  }
   }
   programs {
	  
	  program {
         signal: "elm,action,show,vbar"; source: "elm";
         action: STATE_SET "default" 0.0;
         target: "sb_vbar";
         target: "sb_vbar_show";
      }
      program {
         signal: "elm,action,hide,vbar"; source: "elm";
         action: STATE_SET "hidden" 0.0;
         target: "sb_vbar";
         target: "sb_vbar_show";
      }
      program {
         signal: "mouse,down,1*"; source: "sb_vbar_p1";
         action: DRAG_VAL_PAGE 0.0 -1.0;
         target: "elm.dragable.vbar";
      }
      program {
         signal: "mouse,down,1*"; source: "sb_vbar_p2";
         action: DRAG_VAL_PAGE  0.0 1.0;
         target: "elm.dragable.vbar";
      }
      program {
         signal: "elm,action,show,hbar"; source: "elm";
         action: STATE_SET "default" 0.0;
         target: "sb_hbar";
         target: "sb_hbar_show";
      }
      program {
         signal: "elm,action,hide,hbar"; source: "elm";
         action: STATE_SET "hidden" 0.0;
         target: "sb_hbar";
         target: "sb_hbar_show";
      }
      program {
         signal: "mouse,down,1*"; source: "sb_hbar_p1";
         action: DRAG_VAL_PAGE -1.0 0.0;
         target: "elm.dragable.hbar";
      }
      program {
         signal: "mouse,down,1*"; source: "sb_hbar_p2";
         action: DRAG_VAL_PAGE  1.0 0.0;
         target: "elm.dragable.hbar";
      } 
	   
	   
      program {
         signal: "mouse,down,1*"; source: "elm.dragable.vbar";
         action: STATE_SET "clicked" 0.0;
         transition: DECELERATE 0.15;
         target: "base_vbar";
         target: "base_vbar_over";
      }
      program {
         signal: "mouse,up,1"; source: "elm.dragable.vbar";
         action: STATE_SET "default" 0.0;
         transition: DECELERATE 0.5;
         target: "base_vbar";
         target: "base_vbar_over";
      }
      program {
         signal: "mouse,down,1*"; source: "elm.dragable.hbar";
         action: STATE_SET "clicked" 0.0;
         transition: DECELERATE 0.15;
         target: "base_hbar";
         target: "base_hbar_over";
      }
      program {
         signal: "mouse,up,1"; source: "elm.dragable.hbar";
         action: STATE_SET "default" 0.0;
         transition: DECELERATE 0.5;
         target: "base_hbar";
         target: "base_hbar_over";
      }
   }
}

#endif
///////////////////////////////////////////////////////////////////////////////
