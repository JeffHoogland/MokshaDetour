#define MENU_SELECT_ANIM DECELERATE 0.0

#define MENU_TEXT										\
	part {												\
		name: "elm.text";								\
		type: TEXT;										\
		effect:	SHADOW;									\
		mouse_events:  0;								\
		description { state: "default" 0.0;				\
			align: 0.0 0.5;								\
			rel1.to_x: "elm.swallow.content";			\
			rel1.relative: 1.0 0.0;						\
			rel1.offset: 5 7;							\
			rel2.offset: -10 -8;						\
			TEXT_COLOR;									\
			TEXT_BOLD("menu_item", 0.0 0.5, 1 1);		\
			text.ellipsis: -1;							\
		}												\
		description { state: "visible" 0.0;				\
			inherit: "default" 0.0;						\
			visible: 1;									\
		}												\
		description { state: "selected" 0.0;			\
			inherit: "default" 0.0;						\
			inherit: "visible" 0.0;						\
			TEXT_COLOR_SELECTED;						\
		}												\
		description { state: "disabled" 0.0;			\
			inherit: "default" 0.0;						\
			color: 0 0 0 128;							\
		}												\
		description { state: "disabled_visible" 0.0;	\
			inherit: "default" 0.0;						\
			inherit: "visible" 0.0;						\
			color: 0 0 0 128;							\
		}												\
	}													\

#define MENU_ITEM_IMG								\
	part { name: "item_image";						\
		mouse_events: 1;							\
		description {								\
			state: "default" 0.0;					\
			max: 9999 26;							\
			image.normal: "images/elm/menu_im2.png";\
			image.border: 5 5 5 5;					\
			image.middle: SOLID;					\
			visible: 0;								\
			rel1.offset: 1 1;						\
			rel2.offset: -2 -2;						\
		}											\
		description { state: "visible" 0.0;			\
			inherit: "default" 0.0;					\
			color: 255 255 255 255;					\
			visible: 1;								\
		}											\
		description { state: "clicked" 0.0;			\
			inherit: "default" 0.0;					\
			inherit: "visible" 0.0;					\
		}											\
		description { state: "disabled" 0.0;		\
			inherit:  "default" 0.0;				\
		}											\
	}												\
	part { name: "item_image_disabled";				\
		type: RECT;									\
		mouse_events: 1;							\
		description { state: "default" 0.0;			\
			color: 255 255 255 0;					\
		}											\
		description { state: "disabled" 0.0;		\
			inherit:  "default" 0.0;				\
			color: 255 255 255 0;					\
		}											\
	}

#define MENU_ITEM_OVER							\
	part { name: "over2";						\
		type: RECT;								\
		mouse_events: 1;						\
		repeat_events: 1;						\
		ignore_flags: ON_HOLD;					\
		description { state: "default" 0.0;		\
			color: 0 0 0 0;						\
		}										\
		description { state: "disabled" 0.0;	\
			inherit:  "default" 0.0;			\
			visible: 0;							\
		}										\
	}											\
	part { name: "over3";						\
		type: RECT;								\
		mouse_events: 1;						\
		repeat_events: 1;						\
		description { state: "default" 0.0;		\
			color: 0 0 0 0;						\
		}										\
		description { state: "clicked" 0.0;		\
			inherit:  "default" 0.0;			\
			visible: 1;							\
		}										\
	}											\
	part { name: "disabler";					\
		type: RECT;								\
		description { state: "default" 0.0;		\
			color: 0 0 0 0;						\
			visible: 0;							\
		}										\
		description { state: "disabled" 0.0;	\
			inherit: "default" 0.0;				\
			visible: 1;							\
		}										\
	}

group { name: "elm/menu/item/default";
	script {
		public menu_text_visible; //0:hide (default), 1:visible
		public menu_disable; //0:enable, 1:disable
	}
	parts {
		MENU_ITEM_IMG;

		part { name: "elm.swallow.content";
			type: SWALLOW;
			description { state: "default" 0.0;
				fixed: 1 0;
				visible: 1;
				align: 0.0 0.5;
				rel1.offset: 4 4;
				rel2.offset: 3 -5;
				rel2.relative: 0.0 1.0;
				aspect: 1.0 1.0;
				aspect_preference: VERTICAL;
				rel2.offset: 4 -5;
			}
		}
		MENU_TEXT;

		MENU_ITEM_OVER;

	}
	programs {
        //
		program {
			name:   "item_mouse_in";
			signal: "mouse,in";
			source: "over2";
			action: SIGNAL_EMIT "elm,action,activate" "";
			after: "item_mouse_in_2";
			after: "item_mouse_in_3";
		}
		program {
			name:   "item_mouse_in_2";
			transition: MENU_SELECT_ANIM;
			script {
				new v, d;
				v = get_int(menu_text_visible);
				d = get_int(menu_disable);

				if (v==1 && d==0)
					run_program(PROGRAM:"selected_text");
			}
		}
		program {
			name:   "item_mouse_in_3";
			action : STATE_SET "visible" 0.0;
			target: "item_image";
			/* target: "over1"; */
			transition: MENU_SELECT_ANIM;
		}
		program {
			name:   "selected_text";
			action: STATE_SET "selected" 0.0;
			target: "elm.text";
			transition: MENU_SELECT_ANIM;
		}
		//

		//
		program {
			name:   "item_mouse_out";
			signal: "mouse,out";
			source: "over2";
			action: SIGNAL_EMIT "elm,action,inactivate" "";
			after: "item_mouse_out_2";
			after: "item_mouse_out_3";
		}
		program {
			name:   "item_mouse_out_2";
			transition: MENU_SELECT_ANIM;
			script {
				new v, d;
				v = get_int(menu_text_visible);
				d = get_int(menu_disable);

				if (v==1 && d==0)
					run_program(PROGRAM:"visible_text");
			}
		}
		program {
			name:   "item_mouse_out_3";
			action: STATE_SET "default" 0.0;
			target: "item_image";
			/* target: "over1"; */
			transition: MENU_SELECT_ANIM;
		}
		program {
			name:   "visible_text";
			action: STATE_SET "visible" 0.0;
			target: "elm.text";
			transition: MENU_SELECT_ANIM;
		}
		//

		program {
			name:   "item_unclick";
			signal: "mouse,up,1";
			source: "over2";
			action: STATE_SET "visible" 0.0;
			target: "item_image";
		}
		program {
			name:   "item_click2";
			signal: "mouse,down,1";
			source: "over3";
			action: STATE_SET "clicked" 0.0;
			target: "over3";
		}
		program {
			name:   "item_unclick2";
			signal: "mouse,up,1";
			source: "over3";
			action: STATE_SET "default" 0.0;
			transition: MENU_SELECT_ANIM;
			target: "over3";
		}
		program {
			name:   "item_unclick3";
			signal: "mouse,up,1";
			source: "over2";
			action: SIGNAL_EMIT "elm,action,click" "";
		}
		program { name: "text_show";
			signal: "elm,state,text,visible";
			source: "elm";
			script {
				set_int(menu_text_visible, 1);
				set_state(PART:"elm.text", "visible", 0.0);
			}
		}
		program { name: "text_hide";
			signal: "elm,state,text,hidden";
			source: "elm";
			script {
				set_int(menu_text_visible, 0);
				set_state(PART:"elm.text", "default", 0.0);
			}
		}
		program { name: "disable";
			signal: "elm,state,disabled";
			source: "elm";
			action: STATE_SET "disabled" 0.0;
			target: "item_image";
			target: "item_image_disabled";
			target: "over2";
			target: "disabler";
			after: "disable_text";
		}
		program { name: "disable_text";
			script {
				new v;
				v = get_int(menu_text_visible);
				if (v==1)
					set_state(PART:"elm.text", "disabled_visible", 0.0);
				else if (v==0)
					set_state(PART:"elm.text", "disabled", 0.0);
				set_int(menu_disable, 1);
			}
		}
		program { name: "item_select";
			signal: "elm,state,selected";
			source: "elm";
			after: "item_mouse_in_2";
			after: "item_mouse_in_3";
		}
		program { name: "item_unselect";
			signal: "elm,state,unselected";
			source: "elm";
			after: "item_mouse_out_2";
			after: "item_mouse_out_3";
		}
		program { name: "enable";
			signal: "elm,state,enabled";
			source: "elm";
			action: STATE_SET "default" 0.0;
			target: "item_image";
			target: "item_image_disabled";
			target: "over2";
			target: "disabler";
			after: "enable_text";
		}
		program { name: "enable_text";
			script {
				new v;
				v = get_int(menu_text_visible);
				if (v==1)
					set_state(PART:"elm.text", "visible", 0.0);
				else  if (v==0)
					set_state(PART:"elm.text", "default", 0.0);
				set_int(menu_disable, 0);
			}
		}
	}
}

group { name: "elm/menu/item_with_submenu/default";
	script {
		public menu_text_visible; //0:hide (default), 1:visible
		public menu_disable; //0:enable, 1:disable
	}
	parts {
		MENU_ITEM_IMG;
		part { name: "arrow";
			mouse_events: 1;
			description { state: "default" 0.0;
				color: 255 255 255 255;
				align: 1.0 0.5;
				min: 10 11;
				max: 10 11;
				fixed: 1 1;
				rel1.relative: 1.0 0.0;
				rel1.offset: -4 0;
				rel2.offset: -4 -1;
				image.normal: "images/menu_im3.png";
			}
			description { state: "rtl" 0.0;
				inherit: "default" 0.0;
				image.normal: "images/menu_im5.png";
			}
		}
		part { name: "elm.swallow.content";
			type: SWALLOW;
			description { state: "default" 0.0;
				fixed: 1 0;
				visible: 1;
				align: 0.0 0.5;
				rel1.offset: 4 4;
				rel2.offset: 3 -5;
				rel2.relative: 0.0 1.0;
				aspect: 1.0 1.0;
				aspect_preference: VERTICAL;
				rel2.offset: 4 -5;
			}
		}
		part {
			name: "elm.text";
			type: TEXT;
			effect:	SHADOW;
			mouse_events:  0;
			description { state: "default" 0.0;
				align: 0.0 0.5;
				rel1.to_x: "elm.swallow.content";
				rel1.relative: 1.0 0.0;
				rel1.offset: 5 7;
				rel2.to_x: "arrow";
				rel2.relative: 0.0 1.0;
				rel2.offset: -10 -8;
				TEXT_COLOR;
				TEXT_BOLD("menu_item", 0.0 0.5, 1 1);
				text.ellipsis: -1;
			}
			description { state: "visible" 0.0;
				inherit: "default" 0.0;
				visible: 1;
			}
			description { state: "selected" 0.0;
				inherit: "default" 0.0;
				inherit: "visible" 0.0;
				TEXT_COLOR_SELECTED;
			}
			description { state: "disabled" 0.0;
				inherit: "default" 0.0;
				color: 0 0 0 128;
			}
			description { state: "disabled_visible" 0.0;
				inherit: "default" 0.0;
				inherit: "visible" 0.0;
				color: 0 0 0 128;
			}
		}

		MENU_ITEM_OVER;
	}
	programs {
        //
		program {
			name:   "item_mouse_in";
			signal: "mouse,in";
			source: "over2";
			action: SIGNAL_EMIT "elm,action,activate" "";
			after: "item_mouse_in_2";
			after: "item_mouse_in_3";
		}
		program {
			name:   "item_mouse_in_2";
			transition: MENU_SELECT_ANIM;
			script {
				new v, d;
				v = get_int(menu_text_visible);
				d = get_int(menu_disable);

				if (v==1 && d==0)
					run_program(PROGRAM:"selected_text");
			}
		}
		program {
			name:   "item_mouse_in_3";
			action : STATE_SET "visible" 0.0;
			target: "item_image";
			transition: MENU_SELECT_ANIM;
		}
		program {
			name:   "selected_text";
			action: STATE_SET "selected" 0.0;
			target: "elm.text";
			transition: MENU_SELECT_ANIM;
		}
		//

		//
		program {
			name:   "item_mouse_out";
			signal: "mouse,out";
			source: "over2";
			after: "item_mouse_out_2";
			after: "item_mouse_out_3";
		}
		program {
			name:   "item_mouse_out_2";
			transition: MENU_SELECT_ANIM;
			script {
				new v, d;
				v = get_int(menu_text_visible);
				d = get_int(menu_disable);

				if (v==1 && d==0)
					run_program(PROGRAM:"visible_text");
			}
		}
		program {
			name:   "item_mouse_out_3";
			action: STATE_SET "default" 0.0;
			target: "item_image";
			transition: MENU_SELECT_ANIM;
		}
		program {
			name:   "visible_text";
			action: STATE_SET "visible" 0.0;
			target: "elm.text";
			transition: MENU_SELECT_ANIM;
		}
		//

		program {
			name:   "item_unclick";
			signal: "mouse,up,1";
			source: "over2";
			action: STATE_SET "visible" 0.0;
			target: "item_image";
		}
		program {
			name:   "item_click2";
			signal: "mouse,down,1";
			source: "over3";
			action: STATE_SET "clicked" 0.0;
			target: "over3";
		}
		program {
			name:   "item_unclick2";
			signal: "mouse,up,1";
			source: "over3";
			action: STATE_SET "default" 0.0;
			transition: MENU_SELECT_ANIM;
			target: "over3";
		}
		program {
			name:   "item_unclick3";
			signal: "mouse,up,1";
			source: "over2";
			action: SIGNAL_EMIT "elm,action,click" "";
		}
		program {
			name:   "menu_open";
			signal: "mouse,in";
			source: "over2";
			action: SIGNAL_EMIT "elm,action,open" "";
		}
		program { name: "text_show";
			signal: "elm,state,text,visible";
			source: "elm";
			script {
				set_int(menu_text_visible, 1);
				set_state(PART:"elm.text", "visible", 0.0);
			}
		}
		program { name: "text_hide";
			signal: "elm,state,text,hidden";
			source: "elm";
			script {
				set_int(menu_text_visible, 0);
				set_state(PART:"elm.text", "default", 0.0);
			}
		}
		program { name: "disable";
			signal: "elm,state,disabled";
			source: "elm";
			action: STATE_SET "disabled" 0.0;
			target: "item_image";
			target: "item_image_disabled";
			target: "over2";
			target: "disabler";
			after: "disable_text";
		}
		program { name: "disable_text";
			script {
				new st[31];
				new Float:vl;
				get_state(PART:"elm.text", st, 30, vl);
				if (!strcmp(st, "visible"))
					set_state(PART:"elm.text", "disabled_visible", 0.0);
				else if (!strcmp(st, "default"))
					set_state(PART:"elm.text", "disabled", 0.0);
			}
		}
		program { name: "enable";
			signal: "elm,state,enabled";
			source: "elm";
			action: STATE_SET "default" 0.0;
			target: "item_image";
			target: "item_image_disabled";
			target: "over2";
			target: "disabler";
			after: "enable_text";
		}
		program { name: "enable_text";
			script {
				new v;
				v = get_int(menu_text_visible);
				if (v==1)
					set_state(PART:"elm.text", "visible", 0.0);
				else  if (v==0)
					set_state(PART:"elm.text", "default", 0.0);
				set_int(menu_disable, 0);
			}
		}
		program { name: "to_rtl";
			signal: "edje,state,rtl";
			source: "edje";
			action: STATE_SET "rtl" 0.0;
			target: "arrow";
		}
		program { name: "to_ltr";
			signal: "edje,state,ltr";
			source: "edje";
			action: STATE_SET "default" 0.0;
			target: "arrow";
		}
	}
}

group { name: "elm/menu/separator/default";
	images {
		image: "images/elm/separator_h.png" COMP;
	}
	parts {
		part { name: "separator"; // separator group
			description { state: "default" 0.0;
				min: 2 2;
				rel1.offset: 4 4;
				rel2.offset: -5 -5;
				color_class: "dialog_base";
				image {
					normal: "images/elm/separator_h.png";
				}
				fill {
					smooth: 0;
				}
			}
		}
	}
}

group { name: "elm/menu/main_menu_submenu/default";
   script {
      public menu_text_visible; //0:hide (default), 1:visible
      public menu_disable; //0:enable, 1:disable
   }
   parts {
      part { name: "base"; mouse_events: 0;
         description { state: "default" 0.0;
            image.normal: "images/elm/menu_im2.png";
            fill.smooth: 0;
            image.border: 5 5 5 5;
			image.middle: SOLID;
            visible: 0;
         }
         description { state: "active" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
         description { state: "disabled" 0.0;
            inherit:  "default" 0.0;
         }
      }
      part { name: "base2";
			mouse_events: 0;
			description { state: "default" 0.0;
				visible: 0;
				fill.smooth: 0;
				color: 255 255 255 0;
				rel1.offset: -3 -3;
				rel2.offset: 2 2;			
				image {
					normal: "images/button_im4.png";
					border: 7 7 7 7;
				}
			}
			description { state: "active" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
            visible: 1;
			}
         description { state: "disabled" 0.0;
            inherit:  "default" 0.0;
			}
		}
		
      part { name: "elm.swallow.content"; type: SWALLOW; mouse_events:  0;
         clip_to: "disabler";
         scale: 1;
         description { state: "default" 0.0;
            min: 16 16;
            fixed: 1 0;
            align: 0.0 0.5;
            rel1.offset: 3 3;
            rel2.offset: 3 -5;
            rel2.relative: 0.0 1.0;
         }
         description { state: "noicon" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      // XXX: check/radio goes next (right of) content, no radio/check handle
      // XXX: need to handle no text?
      // XXX: need arrowspace on/off based on submenus in menu
      part { name: "arrowspace"; type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            min: 15 15;
            max: 15 15;
            rel1.offset: -2 0;
            rel1.relative: 1.0 0.0;
            rel2.offset: -2 -1;
            align: 1.0 0.5;
         }
      }
      part { name: "elm.text"; type: TEXT; mouse_events:  0;
         effect: SHADOW BOTTOM;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to_x: "elm.swallow.content";
            rel1.relative: 1.0 0.0;
            rel1.offset: 5 -1;
            rel2.to_x: "arrowspace";
            rel2.offset: -6 -1;
            rel2.relative: 0.0 1.0;
            TEXT_COLOR;									
			TEXT_BOLD("menu_item", 0.0 0.5, 1 1);
			text.ellipsis: -1;
         }
         description { state: "active" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
         description { state: "disabled" 0.0;
            inherit:  "default" 0.0;
            color: 0 0 0 128;
            visible: 1;
         }
      }
      part { name: "event"; type: RECT;
         ignore_flags: ON_HOLD;
         description { state: "default" 0.0;
            color: 255 255 255 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "disabler"; type: RECT;
         description { state: "default" 0.0;
            color: 255 255 255 255;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 128;
         }
      }
   }
   programs {
      program {
         signal: "mouse,in"; source: "event";
         action: SIGNAL_EMIT "elm,action,activate" "elm";
         after: "selected";
      }
      program {
         signal: "mouse,out"; source: "event";
//         action: SIGNAL_EMIT "elm,action,inactivate" "elm";
         after: "unselected";
      }
      program { signal: "mouse,down,1"; source: "event";
         after: "selected";
      }
      program {
         signal: "mouse,down,1"; source: "event";
         action: SIGNAL_EMIT "elm,action,click" "elm";
      }
      program { name: "text_show";
         signal: "elm,state,text,visible"; source: "elm";
         script {
            set_int(menu_text_visible, 1);
//            set_state(PART:"elm.text", "active", 0.0);
//            set_state(PART:"elm.text2", "active", 0.0);
         }
      }
      program { name: "text_hide";
         signal: "elm,state,text,hidden"; source: "elm";
         script {
            set_int(menu_text_visible, 0);
//            set_state(PART:"elm.text", "default", 0.0);
//            set_state(PART:"elm.text2", "default", 0.0);
         }
      }
      program { name: "icon_show";
         signal: "elm,state,icon,visible"; source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.swallow.content";
      }
      program { name: "icon_hide";
         signal: "elm,state,icon,hidden"; source: "elm";
         action: STATE_SET "noicon" 0.0;
         target: "elm.swallow.content";
      }
      program { name: "selected";
         signal: "elm,state,selected"; source: "elm";
         action: STATE_SET "active" 0.0;
         target: "base";
         target: "base2";
         target: "elm.text";
      }
      program { name: "unselected";
         signal: "elm,state,unselected"; source: "elm";
         action: STATE_SET "default" 0.0;
         target: "base";
         target: "base2";
         target: "elm.text";
      }
      program {
         signal: "elm,state,enabled"; source: "elm";
         action: STATE_SET "default" 0.0;
         target: "base";
         target: "base2";
         target: "event";
         target: "disabler";
         target: "elm.text";
      }
      program {
         signal: "elm,state,disabled"; source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "base";
         target: "base2";
         target: "event";
         target: "disabler";
         target: "elm.text";
      }
   }
}

//In the hover used by the menu only the bottom part is used.
group { name: "elm/hover/base/menu/default";
	alias: "elm/hover/base/main_menu_submenu/default";
	parts {
		part { name: "elm.swallow.offset";
			type: SWALLOW;
			description { state: "default" 0.0;
				align: 0.0 0.0;
				rel1.relative: 0.0 0.0;
				rel2.relative: 0.0 0.0;
			}
		}
		part { name: "elm.swallow.size";
			type: SWALLOW;
			description { state: "default" 0.0;
				align: 0.0 0.0;
				rel1.to: "elm.swallow.offset";
				rel1.relative: 1.0 1.0;
				rel2.to: "elm.swallow.offset";
				rel2.relative: 1.0 1.0;
			}
		}
		BACKGROUND_OVERLAY;
		part { name: "elm.swallow.slot.left";
			type: SWALLOW;
			description { state: "default" 0.0;
			}
		}
		part { name: "elm.swallow.slot.right";
			type: SWALLOW;
			description { state: "default" 0.0;
			}
		}
		part { name: "elm.swallow.slot.top";
			type: SWALLOW;
			description { state: "default" 0.0;
			}
			description { state: "visible" 0.0;
				inherit: "default" 0.0;
			}
		}
		part { name: "bottomclip";
			type: RECT;
			description { state: "default" 0.0;
				rel1.to_y: "pop";
				rel1.relative: 0.0 1.0;
				rel1.offset: -1 -2;
			}
		}
		part { name: "shadow";
            mouse_events: 0;
            description { state: "default" 0.0;
				visible: 0;
				image {
					normal: "images/elm/comp-sh1.png";
					border: 18 18 18 18;
					middle: 0;
				}
				fill.smooth: 0;
				rel1 {
					to_x: "bg";
					to_y: "pop";
					relative: 0.0  1.0;
					offset: -16  -13;
				}
				rel2 {
					to: "bg";
					relative: 1.0  1.0;
					offset: 15   17;
				}
            }
            description { state: "visible" 0.0;
				inherit: "default" 0.0;
				visible: 1;
            }
		}
		part {
			name: "bg";
			clip_to: "bottom";
			mouse_events: 0;;
			type: RECT;
			description {
				state: "default" 0.0;
				color: 235 235 235 255;
				rel1.to: "elm.swallow.slot.bottom";
				rel2.to: "elm.swallow.slot.bottom";
			}
		}
		part {
			name: "bg_border";
			clip_to: "bottom";
			mouse_events: 0;
			description {
				state: "default" 0.0;
				rel1.to: "bg";
				rel2.to: "bg";
				image {
					normal: "images/menu_im0.png";
					border: 1 1 1 1;
					middle: 0;
				}
				color_class: "dialog_base";
			}
		}
		part {
			name: "gradient";
			clip_to: "bottom";
			description {
				state: "default" 0.0;
				image.normal: "images/dialog_im0.png";
				color_class: "dialog_base";
				rel1.to: "bg";
				rel2.to: "bg";
				rel1.offset: 1 1;
				rel2.offset: -2  -2;
			}
		}
		part {
			name: "gradient2";
			clip_to: "bottom";
			type: RECT;
			description {
				state: "default" 0.0;
				rel1.to: "gradient";
				rel2.to: "gradient";
				color: 0 0 0 20;
			}
		}
		part { name: "bottom";
			clip_to: "bottomclip";
			type: RECT;
			description { state: "default" 0.0;
				visible: 0;
				rel1.to: "elm.swallow.slot.bottom";
				rel2.to: "elm.swallow.slot.bottom";
			}
			description { state: "visible" 0.0;
				inherit: "default" 0.0;
				visible: 1;
			}
		}
		part { name: "elm.swallow.slot.bottom";
			type: SWALLOW;
			clip_to: "bottomclip";
			description { state: "default" 0.0;
				align: 0.5 1.0;
				rel1.to: "elm.swallow.slot.middle";
				rel1.relative: 0.0 1.0;
				rel1.offset: 0 0;
				rel2.to: "elm.swallow.slot.middle";
				rel2.relative: 1.0 1.0;
				rel2.offset: -1 0;
			}
			description { state: "visible" 0.0;
				inherit: "default" 0.0;
				rel1.offset: 0 6;
				rel2.offset: -1 6;
				align: 0.5 0.0;
			}
		}
		part { name: "pop";
			type: RECT;
			mouse_events: 1;
			repeat_events:1;
			description { state: "default" 0.0;
				visible: 0;
				rel1.to: "elm.swallow.slot.middle";
				rel1.offset: -5 -5;
				rel2.to: "elm.swallow.slot.middle";
				rel2.offset: 4 4;
			}
		}
		part { name: "elm.swallow.slot.middle";
			type: SWALLOW;
			repeat_events:1;
			description { state: "default" 0.0;
				rel1.to: "elm.swallow.size";
				rel2.to: "elm.swallow.size";
			}
		}
	}
	programs {
		program { name: "end";
			signal: "mouse,up,1";
			source: "base";
			action: SIGNAL_EMIT "elm,action,dismiss" "elm";
		}
		program { name: "show";
			signal: "elm,action,show";
			source: "elm";
			action: STATE_SET "visible" 0.0;
			//            transition: DECELERATE 0.5;
			target: "base";
		}
		program { name: "hide";
			signal: "elm,action,hide";
			source: "elm";
			action: STATE_SET "default" 0.0;
			//            transition: DECELERATE 0.5;
			target: "base";
		}
		program { name: "bottomshow";
			signal: "elm,action,slot,bottom,show";
			source: "elm";
			action: STATE_SET "visible" 0.0;
			transition: DECELERATE 0.3;
			target: "bottom";
			target: "shadow";
			target: "elm.swallow.slot.bottom";
		}
		program { name: "bottomhide";
			signal: "elm,action,slot,bottom,hide";
			source: "elm";
			action: STATE_SET "default" 0.0;
			transition: DECELERATE 0.5;
			target: "bottom";
			target: "shadow";
			target: "elm.swallow.slot.bottom";
		}
	}
}

//In the hover used by the submenu only the bottom part is used
//and no part should interact except the bottom area
group { name: "elm/hover/base/submenu/default";
   inherit: "elm/hover/base/menu/default";
   parts {
      part { name: "elm.swallow.offset";
         repeat_events: 1;
      }
      //here we don't catch events like the hover does
      part { name: "base"; type: RECT; repeat_events: 1;
         description { state: "visible" 0.0;
            color: 0 0 0 0;
            visible: 0;
         }
      }
   }
}

group { name: "elm/hover/base/main_menu/default";
   parts {
      part { name: "elm.swallow.offset"; type: SWALLOW;
         description { state: "default" 0.0;
            visible: 0;
            fixed: 1 1;
         }
      }
      part { name: "elm.swallow.size"; type: SWALLOW;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            rel2.relative: 0.0 0.0;
            rel1.offset: 0 0;
            fixed: 1 1;
         }
      }
      part { name: "bottomclip"; type: RECT;
         description { state: "default" 0.0;
            rel1.offset: -1 -2;
         }
      }
      part { name: "base";
         description { state: "default" 0.0;
		    image {
					normal: "images/menubar.png";
					border: 0 0 1 1;
			}
            rel1.to_y: "bottom";
            rel2.to_y: "bottom";
            fill.smooth: 0;
            color_class: "dialog_base";
          }
      }
      part { name: "bottom"; type: RECT;
         clip_to: "bottomclip";
         description { state: "default" 0.0;
            visible: 0;
            rel1.to: "elm.swallow.slot.bottom";
            rel1.offset: 0 0;
            rel2.to: "elm.swallow.slot.bottom";
            rel2.offset: -1 -1;
         }
      }
      part { name: "elm.swallow.slot.bottom"; type: SWALLOW;
         clip_to: "bottomclip";
         description { state: "default" 0.0;
            align: 0.5 0.0;
            rel1.to: "elm.swallow.size";
            rel1.relative: 0.0 1.0;
            rel2.to: "elm.swallow.size";
            fixed: 1 0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
         }
      }
   }
   programs {
      program { name: "bottomshow";
         signal: "elm,action,slot,bottom,show"; source: "elm";
         action: STATE_SET "visible" 0.0;
         transition: DECELERATE 0.3;
         target: "elm.swallow.slot.bottom";
      }
   }
}
