group { name: "elm/photocam/base/default";
	script {
		public sbvis_v, sbvis_h, sbalways_v, sbalways_h, sbvis_timer;
		public timer0(val) {
			new v;
			v = get_int(sbvis_v);
			if (v) {
				v = get_int(sbalways_v);
				if (!v) {
					emit("do-hide-vbar", "");
					set_int(sbvis_v, 0);
				}
			}
			v = get_int(sbvis_h);
			if (v) {
				v = get_int(sbalways_h);
				if (!v) {
					emit("do-hide-hbar", "");
					set_int(sbvis_h, 0);
				}
			}
			set_int(sbvis_timer, 0);
			return 0;
		}
	}
	parts {
		part { name: "bg";
			type: RECT;
			description { state: "default" 0.0;
				rel1.to: "conf_over";
				rel2.to: "conf_over";
				rel1.offset: -1 0;
				rel2.offset: 0 0;
				color: 255 255 255 0;
			}
		}
		part { name: "clipper";
			type: RECT;
			mouse_events: 0;
			description { state: "default" 0.0;
				rel1.offset: 2 2;
				rel2.offset: -3 -3;
				rel1.to: "bg";
				rel2.to: "bg";
			}
		}
		part { name: "elm.swallow.content";
			clip_to: "clipper";
			type: SWALLOW;
			description { state: "default" 0.0;
				rel1.offset: 1 1;
				rel2.offset: -2 -2;
			}
		}
		part { name: "busy_clip";
			type: RECT;
			mouse_events: 0;
			description { state: "default" 0.0;
				visible: 0;
				color: 255 255 255 0;
			}
			description { state: "active" 0.0;
				visible: 1;
				color: 255 255 255 255;
			}
		}
		part { name: "busy";
			clip_to: "busy_clip";
			mouse_events: 0;
			description { state: "default" 0.0;
				fixed: 1 1;
				min: 32 32;
				aspect: 1.0 1.0;
				align: 1.0 1.0;
				aspect_preference: BOTH;
				rel1 {
					relative: 0.9 0.9;
					offset:   -9 -9;
				}
				rel2 {
					relative: 0.9 0.9;
					offset:   -9 -9;
				}
				image {
					normal: "images/elm/busy-9.png";
					tween:  "images/elm/busy-1.png";
					tween:  "images/elm/busy-2.png";
					tween:  "images/elm/busy-3.png";
					tween:  "images/elm/busy-4.png";
					tween:  "images/elm/busy-5.png";
					tween:  "images/elm/busy-6.png";
					tween:  "images/elm/busy-7.png";
					tween:  "images/elm/busy-8.png";
				}
			}
		}
	    part {
			name: "conf_over";
			type: IMAGE;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				rel1.offset: 2 2;
				rel2.offset: -3 -3;
				image {
					normal: "images/scrollframe/over.png";
					border: 5 5 5 6;
					middle: 0;
				}
			}
		}
		part { name: "sb_vbar_clip_master";
			type: RECT;
			mouse_events: 0;
			description { state: "default" 0.0;
			}
			description { state: "hidden" 0.0;
				visible: 0;
				color: 255 255 255 0;
			}
		}
		part { name: "sb_vbar_clip";
			clip_to: "sb_vbar_clip_master";
			type: RECT;
			mouse_events: 0;
			description { state: "default" 0.0;
			}
			description { state: "hidden" 0.0;
				visible: 0;
				color: 255 255 255 0;
			}
		}
		part { name: "sb_vbar";
			type: RECT;
			mouse_events: 0;
			description { state: "default" 0.0;
				fixed: 1 1;
				visible: 0;
				min: 10 17;
				align: 1.0 0.0;
				rel1 {
					relative: 1.0 0.0;
					offset:   -2 0;
				}
				rel2 {
					relative: 1.0 0.0;
					offset:   -2 -1;
					to_y:     "sb_hbar";
				}
			}
		}
		part { name: "elm.dragable.vbar";
			clip_to: "sb_vbar_clip";
			mouse_events: 0;
			dragable {
				x: 0 0 0;
				y: 1 1 0;
				confine: "sb_vbar";
			}
			description { state: "default" 0.0;
				fixed: 1 1;
				min: 10 17;
				max: 10 99999;
				rel1 {
					relative: 0.5  0.5;
					offset:   0    0;
					to: "sb_vbar";
				}
				rel2 {
					relative: 0.5  0.5;
					offset:   0    0;
					to: "sb_vbar";
				}
				image {
					normal: "images/elm/bt_sm_base1.png";
					border: 6 6 6 6;
					middle: SOLID;
				}
			}
		}

		part { name: "sb_hbar_clip_master";
			type: RECT;
			mouse_events: 0;
			description { state: "default" 0.0;
			}
			description { state: "hidden" 0.0;
				visible: 0;
				color: 255 255 255 0;
			}
		}
		part { name: "sb_hbar_clip";
			clip_to: "sb_hbar_clip_master";
			type: RECT;
			mouse_events: 0;
			description { state: "default" 0.0;
			}
			description { state: "hidden" 0.0;
				visible: 0;
				color: 255 255 255 0;
			}
		}
		part { name: "sb_hbar";
			type: RECT;
			mouse_events: 0;
			description { state: "default" 0.0;
				fixed: 1 1;
				visible: 0;
				min: 17 10;
				align: 0.0 1.0;
				rel1 {
					relative: 0.0 1.0;
					offset:   0 -2;
				}
				rel2 {
					relative: 0.0 1.0;
					offset:   -1 -2;
					to_x:     "sb_vbar";
				}
			}
		}
		part { name: "elm.dragable.hbar";
			clip_to: "sb_hbar_clip";
			mouse_events: 0;
			dragable {
				x: 1 1 0;
				y: 0 0 0;
				confine: "sb_hbar";
			}
			description { state: "default" 0.0;
				fixed: 1 1;
				min: 17 10;
				max: 99999 10;
				rel1 {
					relative: 0.5  0.5;
					offset:   0    0;
					to: "sb_hbar";
				}
				rel2 {
					relative: 0.5  0.5;
					offset:   0    0;
					to: "sb_hbar";
				}
				image {
					normal: "images/elm/bt_sm_base1.png";
					border: 6 6 6 6;
					middle: SOLID;
				}
			}
		}
	}
	programs {
		program { name: "load";
			signal: "load";
			source: "";
			script {
				set_state(PART:"sb_hbar_clip", "hidden", 0.0);
				set_state(PART:"sb_vbar_clip", "hidden", 0.0);
				set_int(sbvis_h, 0);
				set_int(sbvis_v, 0);
				set_int(sbalways_v, 0);
				set_int(sbalways_h, 0);
				set_int(sbvis_timer, 0);
			}
		}

		program { name: "vbar_show";
			signal: "elm,action,show,vbar";
			source: "elm";
			action:  STATE_SET "default" 0.0;
			target: "sb_vbar_clip_master";
		}
		program { name: "vbar_hide";
			signal: "elm,action,hide,vbar";
			source: "elm";
			action:  STATE_SET "hidden" 0.0;
			target: "sb_vbar_clip_master";
		}
		program { name: "vbar_show_always";
			signal: "elm,action,show_always,vbar";
			source: "elm";
			script {
				new v;
				v = get_int(sbvis_v);
				v |= get_int(sbalways_v);
				if (!v) {
					set_int(sbalways_v, 1);
					emit("do-show-vbar", "");
					set_int(sbvis_v, 1);
				}
			}
		}
		program { name: "vbar_show_notalways";
			signal: "elm,action,show_notalways,vbar";
			source: "elm";
			script {
				new v;
				v = get_int(sbalways_v);
				if (v) {
					set_int(sbalways_v, 0);
					v = get_int(sbvis_v);
					if (!v) {
						emit("do-hide-vbar", "");
						set_int(sbvis_v, 0);
					}
				}
			}
		}
		program { name: "sb_vbar_show";
			signal: "do-show-vbar";
			source: "";
			action:  STATE_SET "default" 0.0;
			transition: LINEAR 0.5;
			target: "sb_vbar_clip";
		}
		program { name: "sb_vbar_hide";
			signal: "do-hide-vbar";
			source: "";
			action:  STATE_SET "hidden" 0.0;
			transition: LINEAR 0.5;
			target: "sb_vbar_clip";
		}

		program { name: "hbar_show";
			signal: "elm,action,show,hbar";
			source: "elm";
			action:  STATE_SET "default" 0.0;
			target: "sb_hbar_clip_master";
		}
		program { name: "hbar_hide";
			signal: "elm,action,hide,hbar";
			source: "elm";
			action:  STATE_SET "hidden" 0.0;
			target: "sb_hbar_clip_master";
		}
		program { name: "hbar_show_always";
			signal: "elm,action,show_always,hbar";
			source: "elm";
			script {
				new v;
				v = get_int(sbvis_h);
				v |= get_int(sbalways_h);
				if (!v) {
					set_int(sbalways_h, 1);
					emit("do-show-hbar", "");
					set_int(sbvis_h, 1);
				}
			}
		}
		program { name: "hbar_show_notalways";
			signal: "elm,action,show_notalways,hbar";
			source: "elm";
			script {
				new v;
				v = get_int(sbalways_h);
				if (v) {
					set_int(sbalways_h, 0);
					v = get_int(sbvis_h);
					if (!v) {
						emit("do-hide-hbar", "");
						set_int(sbvis_h, 0);
					}
				}
			}
		}
		program { name: "sb_hbar_show";
			signal: "do-show-hbar";
			source: "";
			action:  STATE_SET "default" 0.0;
			transition: LINEAR 0.5;
			target: "sb_hbar_clip";
		}
		program { name: "sb_hbar_hide";
			signal: "do-hide-hbar";
			source: "";
			action:  STATE_SET "hidden" 0.0;
			transition: LINEAR 0.5;
			target: "sb_hbar_clip";
		}

		program { name: "scroll";
			signal: "elm,action,scroll";
			source: "elm";
			script {
				new v;
				v = get_int(sbvis_v);
				v |= get_int(sbalways_v);
				if (!v) {
					emit("do-show-vbar", "");
					set_int(sbvis_v, 1);
				}
				v = get_int(sbvis_h);
				v |= get_int(sbalways_h);
				if (!v) {
					emit("do-show-hbar", "");
					set_int(sbvis_h, 1);
				}
				v = get_int(sbvis_timer);
				if (v > 0) cancel_timer(v);
				v = timer(1.0, "timer0", 0);
				set_int(sbvis_timer, v);
			}
		}
		program { name: "go1";
			signal: "elm,state,busy,start";
			source: "elm";
			action: STATE_SET "active" 0.0;
			transition: SINUSOIDAL 1.0;
			target:  "busy_clip";
		}
		program { name: "go2";
			signal: "elm,state,busy,start";
			source: "elm";
			action: STATE_SET "default" 0.0;
			transition: LINEAR 0.5;
			target: "busy";
			after:  "go2";
		}
		program { name: "stop1";
			signal: "elm,state,busy,stop";
			source: "elm";
			action: STATE_SET "default" 0.0;
			transition: SINUSOIDAL 1.0;
			target: "busy_clip";
			after: "stop2";
		}
		program { name: "stop2";
			action: ACTION_STOP;
			target: "go2";
		}
	}
}

///////////////////////////////////////////////////////////////////////////////
