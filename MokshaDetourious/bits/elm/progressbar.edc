///////////////////////////////////////////////////////////////////////////////
group { name: "elm/progressbar/horizontal/default";
#define ICON    1
#define LABEL   2
#define DISABLE 4
   script {
      public slmode;
      public eval_mode(m) {
         new ic = m & ICON;
         new l = m & LABEL;
         new d = m & DISABLE;
         if (l) {
            if (!d) {
               set_state(PART:"elm.text", "visible", 0.0);
            } else {
               set_state(PART:"elm.text", "disabled_visible", 0.0);
            }
         } else {
            set_state(PART:"elm.text", "default", 0.0);
         }
         if (ic) {
            set_state(PART:"elm.swallow.content", "visible", 0.0);
            set_state(PART:"sizer.content", "visible", 0.0);
         } else {
            set_state(PART:"elm.swallow.content", "default", 0.0);
            set_state(PART:"sizer.content", "default", 0.0);
         }
         if (!d) {
            set_state(PART:"dis_clip", "default", 0.0);
         } else {
            set_state(PART:"dis_clip", "disabled", 0.0);
         }
      }
   }
   parts {
      part { name: "dis_clip"; type: RECT;
         description { state: "default" 0.0;
            rel1.to: "elm.swallow.content";
            rel2.to: "elm.swallow.content";
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 64;
         }
      }
      part { name: "pulse_clip"; type: RECT;
         description { state: "default" 0.0;
            rel1.relative: -2.0 -2.0;
            rel2.relative: 3.0 3.0;
            visible: 0;
         }
         description { state: "pulse" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "fract_clip"; type: RECT;
         description { state: "default" 0.0;
            rel1.relative: -2.0 -2.0;
            rel2.relative: 3.0 3.0;
         }
         description { state: "pulse" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "elm.swallow.content"; type: SWALLOW;
         clip_to: "dis_clip";
         description { state: "default" 0.0;
            visible: 0;
            align: 0.0 0.5;
            rel1.offset: 0 2;
            rel2.offset: -1 -3;
            rel2.relative: 0.0 1.0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            aspect: 1.0 1.0; aspect_preference: VERTICAL;
            rel1.offset: 2 2;
            rel2.offset: 2 -3;
         }
      }
      part { name: "sizer.content"; type: TEXT; mouse_events:  0;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            visible: 0;
            text { font: "Sans"; size: 10;
               min: 0 0;
               text_class: "progressbar_text";
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            rel1.to: "elm.swallow.content";
            rel2.to: "elm.swallow.content";
            text {
               min: 1 1;
               ellipsis: -1;
               text: "M";
            }
         }
      }
      part { name: "elm.text"; type: TEXT; mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            align: 0.0 0.5;
            rel1.to_x: "elm.swallow.content";
            rel1.relative: 1.0 0.0;
            rel1.offset: -1 2;
            rel2.to_x: "elm.swallow.content";
            rel2.relative: 1.0 1.0;
            rel2.offset: -1 -3;
            TEXT_COLOR;
			TEXT_NORMAL("", 0.0 0.5, 0 0);
            visible: 0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            fixed: 1 0;
            visible: 1;
            rel1.offset: 2 2;
            rel2.offset: 2 -3;
            text.min: 1 1;
               text.ellipsis: -1;
         }
         description { state: "disabled_visible" 0.0;
            inherit: "visible" 0.0;
            color_class: "label_text_disabled";
         }
      }
      part { name: "base";
         scale: 1;
         description { state: "default" 0.0;
            min: 16 28;
            max: -1 28;
            rel1.to_x: "elm.text";
            rel1.relative: 1.0 0.0;
            rel1.offset: 2 2;
            rel2.offset: -3 -3;
            color_class: "dialog_base";
            image.normal: "images/scrollframe_im0.png";
            image.border: 7 7 7 7;
         }
      }
       part { name: "base_over"; mouse_events: 0;
		 scale: 1;
		 description { state: "default" 0.0;
			 rel1.to: "base";
			 rel2.to: "base";
			 image.normal: "images/scrollframe/over.png";
			 image.border: 5 5 5 6;
			 color_class: "dialog_base";
		 } 
	  }
	  part { name: "ins0"; type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 0;
            rel1.to: "base";
            rel2.to: "base";
            rel2.relative: 0.0 1.0;
            min: 5 26;
            align: 0.0 0.5;
         }
      }
      part { name: "ins1"; type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 0;
            rel1.to: "base";
            rel1.relative: 1.0 0.0;
            rel2.to: "base";
            min: 5 26;
            align: 1.0 0.5;
         }
      }
      part { name: "inside"; type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "ins0";
            rel1.offset: -1 1;
            rel2.to: "ins1";
            rel2.offset: 0 -2;
            color: 255 255 255 0;
         }
      }
     part { name: "elm.swallow.bar"; type: SWALLOW; mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to: "base";
			rel2.to: "base";
         }
      }
      part { name: "elm.cur.progressbar"; mouse_events: 0; type: SPACER;
         scale: 1;
         dragable.confine: "inside";
         dragable.x: 1 1 1;
         dragable.y: 0 0 0;
         description { state: "default" 0.0;
            fixed: 1 1;
            min: 1 26;
            max: 1 26;
            rel1.to: "inside";
            rel2.to: "inside";
         }
      }
      part { name: "barend"; type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 0;
            min: 1 26;
            rel1.to_x: "elm.cur.progressbar";
            rel1.relative: 1.0 0.0;
            rel2.to_x: "elm.cur.progressbar";
            rel2.relative: 1.0 1.0;
            align: 0.0 0.5;
         }
         description { state: "inv" 0.0;
            inherit: "default" 0.0;
            rel1.relative: 0.0 0.0;
            rel2.relative: 0.0 1.0;
            align: 1.0 0.5;
         }
      }
      part { name: "bar";
         clip_to: "fract_clip";
         scale: 1;
         description { state: "default" 0.0;
            rel1.to_x: "inside";
            rel1.to_y: "inside";
            rel1.relative: 0.0 0.0;
            rel2.to_x: "barend";
            rel2.to_y: "inside";
            rel2.relative: 1.0 1.0;
            image.normal: "images/elm/bt_sm_base1.png";
            image.border: 6 6 6 6;
            color_class: "progress_bar";
         }
         description { state: "inv" 0.0;
            inherit: "default" 0.0;
            rel1.to_x: "barend";
            rel1.relative: 0.0 0.0;
            rel2.to_x: "inside";
            rel2.relative: 1.0 1.0;
         }
      }
      part { name: "insidep0"; type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 0;
            min: 1 26;
            rel1.to_x: "base";
            rel1.relative: 0.0 0.0;
            rel2.to_x: "base";
            rel2.relative: 0.0 1.0;
            align: 1.0 0.5;
         }
      }
      part { name: "insidep1"; type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 0;
            min: 1 26;
            rel1.to_x: "base";
            rel1.relative: 1.0 0.0;
            rel2.to_x: "base";
            rel2.relative: 1.0 1.0;
            align: 0.0 0.5;
         }
      }
      part { name: "pulse";
         clip_to: "pulse_clip";
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            min: 64 26;
            max: 64 26;
            rel1.to_x: "insidep0";
            rel1.to_y: "bar";
            rel1.relative: 0.0 0.0;
            rel2.to_x: "insidep1";
            rel2.to_y: "bar";
            rel2.relative: 1.0 1.0;
            image.normal: "images/elm/bt_sm_base1.png";
            image.border: 6 6 6 6;
            align: 0.0 0.5;
            color_class: "progress_bar";
         }
         description { state: "end" 0.0;
            inherit: "default" 0.0;
            align: 1.0 0.5;
         }
      }
      part { name: "elm.text.status"; type: TEXT; mouse_events: 0;
         scale: 1;
         effect: SHADOW BOTTOM;
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.to: "base";
            rel2.to: "base";
            color_class: "label_text";
            align: 0.5 0.5;
            text { font: "Sans"; size: 12;
               min: 0 1;
               text_class: "progress_status";
               align: 0.5 0.5;
            }
            color: 255 255 255 255;
            color3: 255 255 255 255;
            visible: 1;
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
   }
   programs {
      program { name: "inverted-on";
         signal: "elm,state,inverted,on"; source: "elm";
         action:  STATE_SET "inv" 0.0;
         target: "bar";
         target: "barend";
      }
      program { name: "inverted-off";
         signal: "elm,state,inverted,off"; source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "bar";
         target: "barend";
      }
      program { name: "pulse-mode0";
         signal: "elm,state,pulse"; source: "elm";
         action:  STATE_SET "hidden" 0.0;
         target: "elm.text.status";
         after: "pulse-mode1";
      }
      program { name: "pulse-mode1";
         signal: "elm,state,pulse,start"; source: "elm";
         action:  STATE_SET "pulse" 0.0;
         target: "fract_clip";
      }
      program { name: "pulse-start";
         signal: "elm,state,pulse,start"; source: "elm";
         action:  STATE_SET "pulse" 0.0;
         target: "pulse_clip";
         target: "fract_clip";
         after: "pulse0";
       }
      program { name: "pulse0";
         action:  STATE_SET "end" 0.0;
         transition: SINUSOIDAL 0.8;
         target: "pulse";
         after: "pulse1";
      }
      program { name: "pulse1";
         action:  STATE_SET "default" 0.0;
         transition: SINUSOIDAL 0.8;
         target: "pulse";
         after: "pulse0";
      }
      program { name: "fraction";
         signal: "elm,state,fraction"; source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "elm.text.status";
         after: "pulse-stop";
      }
      program { name: "elmpulse-stop";
         signal: "elm,state,pulse,stop"; source: "elm";
         action: ACTION_STOP;
         target: "pulse0";
         target: "pulse1";
         after: "pulse-stop";
      }
      program { name: "pulse-stop";
         action:  STATE_SET "default" 0.0;
         target: "pulse_clip";
      }
      program { name: "units-visible";
         signal: "elm,state,units,visible"; source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "elm.text.status";
      }
      program { name: "units-hidden";
         signal: "elm,state,units,hidden"; source: "elm";
         action:  STATE_SET "hidden" 0.0;
         target: "elm.text.status";
      }
      program { name: "text-visible";
         signal: "elm,state,text,visible"; source: "elm";
         script {
            new m = get_int(slmode);
            m |= LABEL; set_int(slmode, m);
            eval_mode(m);
         }
      }
      program { name: "text-hidden";
         signal: "elm,state,text,hidden"; source: "elm";
         script {
            new m = get_int(slmode);
            m &= ~LABEL; set_int(slmode, m);
            eval_mode(m);
         }
      }
      program { name: "icon-visible";
         signal: "elm,state,icon,visible"; source: "elm";
         script {
            new m = get_int(slmode);
            m |= ICON; set_int(slmode, m);
            eval_mode(m);
         }
      }
      program { name: "icon-hidden";
         signal: "elm,state,icon,hidden"; source: "elm";
         script {
            new m = get_int(slmode);
            m &= ~ICON; set_int(slmode, m);
            eval_mode(m);
         }
      }
      program { name: "state-disabled";
         signal: "elm,state,disabled"; source: "elm";
         script {
            new m = get_int(slmode);
            m |= DISABLE; set_int(slmode, m);
            eval_mode(m);
         }
      }
      program { name: "state-enabled";
         signal: "elm,state,enabled"; source: "elm";
         script {
            new m = get_int(slmode);
            m &= ~DISABLE; set_int(slmode, m);
            eval_mode(m);
         }
      }
   }
#undef ICON
#undef LABEL
#undef UNITS
#undef DISABLE
}

//////////////////////////////////////////////////////////////////////////////
group { name: "elm/progressbar/vertical/default";
#define ICON    1
#define LABEL   2
#define DISABLE 4
   script {
      public slmode;
      public eval_mode(m) {
         new ic = m & ICON;
         new l = m & LABEL;
         new d = m & DISABLE;
         if (l) {
            if (!d) {
               set_state(PART:"elm.text", "visible", 0.0);
            } else {
               set_state(PART:"elm.text", "disabled_visible", 0.0);
            }
         } else {
            set_state(PART:"elm.text", "default", 0.0);
         }
         if (ic) {
            set_state(PART:"elm.swallow.content", "visible", 0.0);
            set_state(PART:"sizer.content", "visible", 0.0);
         } else {
            set_state(PART:"elm.swallow.content", "default", 0.0);
            set_state(PART:"sizer.content", "default", 0.0);
         }
         if (!d) {
            set_state(PART:"dis_clip", "default", 0.0);
         } else {
            set_state(PART:"dis_clip", "disabled", 0.0);
         }
      }
   }
   parts {
      part { name: "dis_clip"; type: RECT;
         description { state: "default" 0.0;
            rel1.to: "elm.swallow.content";
            rel2.to: "elm.swallow.content";
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 64;
         }
      }
      part { name: "pulse_clip"; type: RECT;
         description { state: "default" 0.0;
            rel1.relative: -3.0 -3.0;
            rel2.relative: 3.0 3.0;
            visible: 0;
         }
         description { state: "pulse" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "fract_clip"; type: RECT;
         description { state: "default" 0.0;
            rel1.relative: -2.0 -2.0;
            rel2.relative: 3.0 3.0;
         }
         description { state: "pulse" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "elm.swallow.content"; type: SWALLOW;
         clip_to: "dis_clip";
         description { state: "default" 0.0;
            visible: 0;
            align: 0.5 0.0;
            rel1.offset: 2 0;
            rel2.offset: -3 -1;
            rel2.relative: 1.0 0.0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            aspect: 1.0 1.0; aspect_preference: HORIZONTAL;
            rel1.offset: 2 2;
            rel2.offset: -3 2;
         }
      }
      part { name: "sizer.content"; type: TEXT; mouse_events:  0;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            visible: 0;
            text { font: "Sans"; size: 12;
               min: 0 0;
               text_class: "progressbar_text";
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            rel1.to: "elm.swallow.content";
            rel2.to: "elm.swallow.content";
            text {
               min: 1 1;
               ellipsis: -1;
               text: "M";
            }
         }
      }
      part { name: "elm.text"; type: TEXT; mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            align: 0.5 0.0;
            rel1.to_y: "elm.swallow.content";
            rel1.relative: 0.0 1.0;
            rel1.offset: 2 -1;
            rel2.to_y: "elm.swallow.content";
            rel2.relative: 1.0 1.0;
            rel2.offset: -3 -1;
            TEXT_COLOR;
            TEXT_NORMAL("", 0.5 0.0, 0 0);
            visible: 0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            fixed: 0 1;
            visible: 1;
            rel1.offset: 2 2;
            rel2.offset: -3 2;
            text.min: 1 1;
               text.ellipsis: -1;
         }
         description { state: "disabled_visible" 0.0;
            inherit: "visible" 0.0;
            color_class: "label_text_disabled";
         }
      }
      part { name: "base";
         scale: 1;
         description { state: "default" 0.0;
            min: 27 16;
            max: 27 -1;
            rel1.to_y: "elm.text";
            rel1.relative: 0.0 1.0;
            rel1.offset: 3 3;
            rel2.offset: -4 -4;
            image.normal: "images/scrollframe_im0.png";
			image.border: 7 7 7 7;
			color_class: "dialog_base";
         }
      }
      part { name: "base_over"; mouse_events: 0;
		 scale: 1;
		 description { state: "default" 0.0;
			 rel1.to: "base";
			 rel2.to: "base";
			 image.normal: "images/scrollframe/over.png";
			 image.border: 5 5 5 6;
			 color_class: "dialog_base";
		 } 
	  }
      part { name: "ins0"; type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 0 1;
            rel1.to: "base";
            rel2.to: "base";
            rel2.relative: 1.0 0.0;
            min: 26 5;
            align: 0.5 0.0;
         }
      }
      part { name: "ins1"; type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 0 1;
            rel1.to: "base";
            rel1.relative: 0.0 1.0;
            rel2.to: "base";
            min: 26 5;
            align: 0.5 1.0;
         }
      }
      part { name: "inside"; type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "ins0";
            rel1.offset: 0 0;
            rel2.to: "ins1";
            rel2.offset: -1 -1;
            color: 255 255 255 0;
         }
      }
      part { name: "elm.swallow.bar"; type: SWALLOW; mouse_events: 0;
         description { state: "default" 0.0;
            rel1.to: "base";
            rel2.to: "base";
         }
      }
      part { name: "elm.cur.progressbar"; mouse_events: 0; type: SPACER;
         scale: 1;
         dragable.confine: "base";
         dragable.x: 0 0 0;
         dragable.y: 1 1 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            min: 26 1;
            max: 26 1;
            rel1.to: "inside";
            rel2.to: "inside";
         }
      }
      part { name: "barend"; type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 0 1;
            min: 26 1;
            rel1.to_y: "elm.cur.progressbar";
            rel1.relative: 0.0 1.0;
            rel2.to_y: "elm.cur.progressbar";
            rel2.relative: 1.0 1.0;
            align: 0.5 0.0;
         }
         description { state: "inv" 0.0;
            inherit: "default" 0.0;
            rel1.relative: 0.0 0.0;
            rel2.relative: 1.0 0.0;
            align: 0.5 1.0;
         }
      }
      part { name: "bar";
         clip_to: "fract_clip";
         scale: 1;
         description { state: "default" 0.0;
            rel1.to_y: "inside";
            rel1.to_x: "inside";
            rel1.relative: 0.0 0.0;
            rel2.to_y: "barend";
            rel2.to_x: "inside";
            rel2.relative: 1.0 1.0;
            image.normal: "images/elm/bt_sm_base1.png";
            image.border: 6 6 6 6;
            color_class: "progress_bar";
         }
         description { state: "inv" 0.0;
            inherit: "default" 0.0;
            rel1.to_y: "barend";
            rel1.relative: 0.0 0.0;
            rel2.to_y: "inside";
            rel2.relative: 1.0 1.0;
         }
      }
      part { name: "insidep0"; type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 0 1;
            min: 26 1;
            rel1.to_y: "base";
            rel1.relative: 0.0 0.0;
            rel2.to_y: "base";
            rel2.relative: 1.0 0.0;
            align: 0.5 1.0;
         }
      }
      part { name: "insidep1"; type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 0 1;
            min: 26 1;
            rel1.to_y: "base";
            rel1.relative: 0.0 1.0;
            rel2.to_y: "base";
            rel2.relative: 1.0 1.0;
            align: 0.5 0.0;
         }
      }
      part { name: "pulse";
         clip_to: "pulse_clip";
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            min: 27 50;
            max: 27 50;
            rel1.to_y: "insidep0";
            rel1.to_x: "bar";
            rel1.relative: 0.0 0.0;
            rel2.to_y: "insidep1";
            rel2.to_x: "bar";
            rel2.relative: 1.0 1.0;
            image.normal: "images/elm/bt_sm_base1.png";
            image.border: 6 6 6 6;
            align: 0.5 0.0;
            color_class: "progress_bar";
         }
         description { state: "end" 0.0;
            inherit: "default" 0.0;
            align: 0.5 1.0;
         }
      }
      part { name: "statbox"; type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.to: "base";
            rel2.to: "base";
            aspect: 1.0 1.0; aspect_preference: NONE;
         }
      }
      part { name: "elm.text.status"; type: TEXT; mouse_events: 0;
         scale: 1;
         effect: SHADOW BOTTOM;
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.to: "statbox";
            rel2.to: "statbox";
            
            color_class: "label_text";
            align: 1.0 0.5;
            text { font: "Sans"; size: 12;
               min: 0 1;
               text_class: "progress_status";
               align: 0.5 0.5;
            }
            color: 255 255 255 255;
            color3: 255 255 255 255;
            visible: 1;
            map.on: 1;
            map.smooth: 0;
            map.rotation.center: "statbox";
            map.rotation.z: 90;
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
   }
   programs {
      program { name: "inverted-on";
         signal: "elm,state,inverted,on"; source: "elm";
         action:  STATE_SET "inv" 0.0;
         target: "bar";
         target: "barend";
      }
      program { name: "inverted-off";
         signal: "elm,state,inverted,off"; source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "bar";
         target: "barend";
      }
      program { name: "pulse-mode0";
         signal: "elm,state,pulse"; source: "elm";
         action:  STATE_SET "hidden" 0.0;
         target: "elm.text.status";
         after: "pulse-mode1";
      }
      program { name: "pulse-mode1";
         signal: "elm,state,pulse,start"; source: "elm";
         action:  STATE_SET "pulse" 0.0;
         target: "fract_clip";
      }
      program { name: "pulse-start";
         signal: "elm,state,pulse,start"; source: "elm";
         action:  STATE_SET "pulse" 0.0;
         target: "pulse_clip";
         target: "fract_clip";
         after: "pulse0";
      }
      program { name: "pulse0";
         action:  STATE_SET "end" 0.0;
         transition: SINUSOIDAL 0.8;
         target: "pulse";
         after: "pulse1";
      }
      program { name: "pulse1";
         action:  STATE_SET "default" 0.0;
         transition: SINUSOIDAL 0.8;
         target: "pulse";
         after: "pulse0";
      }
      program { name: "fraction";
         signal: "elm,state,fraction"; source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "elm.text.status";
         after: "pulse-stop";
      }
      program { name: "elmpulsestop";
         signal: "elm,state,pulse,stop"; source: "elm";
         action: ACTION_STOP;
         target: "pulse0";
         target: "pulse1";
         after: "pulse-stop";
      }
      program { name: "pulse-stop";
         action:  STATE_SET "default" 0.0;
         target: "pulse_clip";
      }
      program { name: "unit-visible";
         signal: "elm,state,units,visible"; source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "elm.text.status";
      }
      program { name: "unit-hidden";
         signal: "elm,state,units,hidden"; source: "elm";
         action:  STATE_SET "hidden" 0.0;
         target: "elm.text.status";
      }
      program { name: "text-visible";
         signal: "elm,state,text,visible"; source: "elm";
         script {
            new m = get_int(slmode);
            m |= LABEL; set_int(slmode, m);
            eval_mode(m);
         }
      }
      program { name: "text-hidden";
         signal: "elm,state,text,hidden"; source: "elm";
         script {         
            new m = get_int(slmode);
            m &= ~LABEL; set_int(slmode, m);
            eval_mode(m);
         }
      }
      program { name: "icon-visible";
         signal: "elm,state,icon,visible"; source: "elm";
         script {
            new m = get_int(slmode);
            m |= ICON; set_int(slmode, m);
            eval_mode(m);
         }
      }
      program { name: "icon-hidden";
         signal: "elm,state,icon,hidden"; source: "elm";
         script {         
            new m = get_int(slmode);
            m &= ~ICON; set_int(slmode, m);
            eval_mode(m);
         }
      }
      program { name: "elmdisabled";
         signal: "elm,state,disabled"; source: "elm";
         script {         
            new m = get_int(slmode);
            m |= DISABLE; set_int(slmode, m);
            eval_mode(m);
         }
      }
      program { name: "elmenabled";
         signal: "elm,state,enabled"; source: "elm";
         script {         
            new m = get_int(slmode);
            m &= ~DISABLE; set_int(slmode, m);
            eval_mode(m);
         }
      }
   }
#undef ICON
#undef LABEL
#undef UNITS
#undef DISABLE
}

group { name: "elm/progressbar/horizontal/double";
   inherit: "elm/progressbar/horizontal/default";
   
   parts {
      part { name: "elm.cur.progressbar1"; mouse_events: 0; type: SPACER;
         insert_after: "base";
         scale: 1;
         dragable.confine: "base";
         dragable.x: 1 1 1;
         dragable.y: 0 0 0;
         description { state: "default" 0.0;
            fixed: 1 1;
            min: 8 4;
            max: 8 4;
            rel1.to: "inside";
            rel2.to: "inside";
         }
      }
      part { name: "barend1"; type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 0;
            min: 1 26;
            rel1.to_x: "elm.cur.progressbar1";
            rel1.relative: 1.0 0.0;
            rel2.to_x: "elm.cur.progressbar1";
            rel2.relative: 1.0 1.0;
            align: 0.0 0.5;
         }
         description { state: "inv" 0.0;
            inherit: "default" 0.0;
            rel1.relative: 0.0 0.0;
            rel2.relative: 0.0 1.0;
            align: 1.0 0.5;
         }
      }
      part { name: "bar1";
         insert_after: "base_over";
         clip_to: "fract_clip";
         scale: 1;
         description { state: "default" 0.0;
            rel1.to_x: "inside";
            rel1.to_y: "inside";
            rel1.relative: 0.0 0.0;
            rel2.to_x: "barend1";
            rel2.to_y: "inside";
            rel2.relative: 1.0 1.0;
            image.normal: "images/elm/bt_sm_base1.png";
            image.border: 6 6 6 6;
            color_class: "progress_bar1";
         }
         description { state: "inv" 0.0;
            inherit: "default" 0.0;
            rel1.to_x: "barend";
            rel2.to_x: "inside";
         }
      }
   }
   programs {
      program { name: "inverted-on";
         signal: "elm,state,inverted,on"; source: "elm";
         action:  STATE_SET "inv" 0.0;
         target: "bar";
         target: "bar1";
         target: "barend";
         target: "barend1";
      }
      program
       { name: "inverted-off";
         signal: "elm,state,inverted,off"; source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "bar";
         target: "bar1";
         target: "barend";
         target: "barend1";
      }
   }
}

group { name: "elm/progressbar/vertical/double";
   inherit: "elm/progressbar/vertical/default";

   parts {
      part { name: "elm.cur.progressbar1"; mouse_events: 0; type: SPACER;
         insert_after: "base";
         scale: 1;
         dragable.confine: "base";
         dragable.x: 0 0 0;
         dragable.y: 1 1 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            min: 4 8;
            max: 4 8;
            rel1.to: "inside";
            rel2.to: "inside";
         }
      }
      part { name: "barend1"; type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 0 1;
            min: 26 1;
            rel1.to_y: "elm.cur.progressbar1";
            rel1.relative: 0.0 1.0;
            rel2.to_y: "elm.cur.progressbar1";
            rel2.relative: 1.0 1.0;
            align: 0.5 0.0;
         }
         description { state: "inv" 0.0;
            inherit: "default" 0.0;
            rel1.relative: 0.0 0.0;
            rel2.relative: 1.0 0.0;
            align: 0.5 1.0;
         }
      }
      part { name: "bar1";
         insert_after: "base_over";
         clip_to: "fract_clip";
         scale: 1;
         description { state: "default" 0.0;
            rel1.to_y: "inside";
            rel1.to_x: "inside";
            rel1.relative: 0.0 0.0;
            rel2.to_y: "barend1";
            rel2.to_x: "inside";
            rel2.relative: 1.0 1.0;
            image.normal: "images/elm/bt_sm_base1.png";
            image.border: 6 6 6 6;
            color_class: "progress_bar1";
         }
         description { state: "inv" 0.0;
            inherit: "default" 0.0;
            rel1.to_y: "barend1";
            rel2.to_y: "inside";
         }
      }
   }
   programs {
      program { name: "inverted-on";
         signal: "elm,state,inverted,on"; source: "elm";
         action:  STATE_SET "inv" 0.0;
         target: "bar";
         target: "barend";
         target: "bar1";
         target: "barend1";
      }
      program { name: "inverted-off";
         signal: "elm,state,inverted,off"; source: "elm";
         action:  STATE_SET "default" 0.0;
         target: "bar";
         target: "barend";
         target: "bar1";
         target: "barend1";
      }
   }
}

///////////////////////////////////////////////////////////////////////////////
group { name: "elm/progressbar/horizontal/wheel";
	parts {
		part { name: "elm.background.progressbar";
			mouse_events: 0;
			type: RECT;
			description {
				state: "default" 0.0;
			}
		}
		part { name: "elm.swallow.bar";
			mouse_events: 0;
			type: SWALLOW;
			description { state: "default" 0.0;
				min: 0 0;
				max: 0 0;
				visible: 0;
			}
		}
		part { name: "elm.swallow.content";
			type: SWALLOW;
			description { state: "default" 0.0;
				min: 0 0;
				max: 0 0;
				visible: 0;
			}
		}
		part { name: "background";
			mouse_events: 0;
			clip_to: "elm.background.progressbar";
			description {
				state: "default" 0.0;
				min: 32 32;
				max: 32 32;
				visible: 1;
				aspect: 1.0 1.0;
				aspect_preference: BOTH;
				image {
					normal: "images/elm/busy-9.png";
					border: 7 7 7 7;
				}
				color: 59 59 59 255;
			}
			description {
				state: "pulse" 0.0;
				inherit: "default" 0.0;
				image {
					normal: "images/elm/busy-9.png";
					tween:  "images/elm/busy-1.png";
					tween:  "images/elm/busy-2.png";
					tween:  "images/elm/busy-3.png";
					tween:  "images/elm/busy-4.png";
					tween:  "images/elm/busy-5.png";
					tween:  "images/elm/busy-6.png";
					tween:  "images/elm/busy-7.png";
					tween:  "images/elm/busy-8.png";
					border: 7 7 7 7;
				}
			}
		}
	}
	programs {
		program { name: "start_pulse";
			signal: "elm,state,pulse,start";
			source: "elm";
			action: STATE_SET "pulse" 0.0;
			target: "background";
			transition: LINEAR 0.5;
			after: "start_pulse";
		}
		program { name: "stop_pulse";
			signal: "elm,state,pulse,stop";
			source: "elm";
			action: STATE_SET "default" 0.0;
			target: "background";
		}
	}
}


///////////////////////////////////////////////////////////////////////////////
