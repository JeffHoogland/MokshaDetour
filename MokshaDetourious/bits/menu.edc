
# ifdef SELECT
#  undef SELECT
# endif
#define SELECT(NAME,SIGNAL,STATE_NAME,INDEX,TRANSITION,TRANS_INDEX,TARGET) \
	program {															\
		name: NAME;														\
		signal: SIGNAL;													\
		source: "e";													\
		action: STATE_SET STATE_NAME INDEX;								\
		transition: TRANSITION TRANS_INDEX;								\
		target: TARGET;													\
	}
#define ITEM()                                                          \
	SELECT("active", "e,state,selected", "visible", 0.0, DECELERATE, 0.0, "item_hilight") \
	SELECT("inactive", "e,state,unselected", "default", 0.0, DECELERATE, 0.0, "item_hilight")
# ifdef TOGGLE
#  undef TOGGLE
# endif
#define TOGGLE(NAME)							\
	program {									\
		name: "toggle_on";                      \
		signal: "e,state,on";                   \
		source: "e";                            \
		action: STATE_SET "visible" 0.0;        \
		target: NAME;                           \
	}											\
	program {									\
		name: "toggle_off";                     \
		signal: "e,state,off";                  \
		source: "e";                            \
		action: STATE_SET "default" 0.0;        \
		target: NAME;                           \
	}
group {
	name: "e/widgets/menu/default/background";
	parts {

		part {
			name: "bg";
			mouse_events: 0;;
			type: RECT;
			description {
				state: "default" 0.0;
				color: 235 235 235 255;
			}
		}

		part {
			name: "bg_border";
			mouse_events: 0;
			description {
				state: "default" 0.0;
				/* color: 85 85 85 128; */
				image {
					normal: "images/menu_im0.png";
					border: 1 1 1 1;
					middle: 0;
				}
				color_class: "menu_base";
			}
		}

		part {
			name: "gradient";
			description {
				state: "default" 0.0;
				image.normal: "images/dialog_im0.png";
				/* #if BUILD_COMPOSITE == 0 */
				rel1.offset: 1 1;
				rel2.offset: -2  -2;
				/* #endif */
				color_class: "menu_base";
			}
		}

		part {
			name: "e.text.title";
			type: TEXT;
			effect: TEXT_EFFECT_BOLD;
			scale: 1;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				fixed: 0 1;
				color_class: "menu_title";
				visible: 0;
				rel1 { 
					relative: 0.0 0.0; 
					offset: 0 0; 
				}
				rel2 { 
					relative: 1.0 0.0; 
					offset: -1 -1; 
				}
				TEXT_COLOR_BOLD;
				TEXT_TITLE("menu_title", 0.5 0.0, 0 0);
				text.ellipsis: -1;
			}
			description {
				state: "visible" 0.0;
				inherit: "default" 0.0;
				align: 0.5 0.0;
				color_class: "menu_title_active";
				visible: 1;
				rel1 { 
					relative: 0.0 0.0; 
					offset: 0 8; 
				}
				rel2 { 
					relative: 1.0 0.0; 
					offset: -1 0; 
				}
				text {
					min: 1 1;
				}
			}
		}

		part {
			name: "e.swallow.content";
			type: SWALLOW;
			description {
				state: "default" 0.0;
				rel1 {
					to: "gradient"; 
					relative: 0.0 0.0; 
					offset: 6 6; 
				}
				rel2 { 
					relative: 1.0 1.0; 
					offset: -7 -7; 
				}
			} 
		}
	}
}
group {
	name: "e/widgets/menu/default/submenu";
	parts {

		part {
			name: "menu_arrow";
			type: IMAGE;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				min: 10 11;
				max: 10 11;
				//fixed: 1 1;
				image.normal: "images/menu_im3.png";
				rel2 { 
					relative: 0.0 0.0; 
					offset: 5 0; 
				} 
				rel2 { 
					relative: 1.0 1.0; 
					offset: -3 -1; 
				}
				color_class: "menu_base";
			}
			description {
				state: "visible" 0.0;
				inherit: "default" 0.0;
				image.normal: "images/menu_im4.png";
			}
		}
  part { name: "events"; type: RECT;
     description { state: "default";
        color: 0 0 0 0;
     }
  }
	}
	programs {
		program {
			name: "selected";
			signal: "e,state,selected";
			source: "e";
			action: STATE_SET "visible" 0.0;
			target: "menu_arrow";
		}
		program {
			name: "unselected";
			signal: "e,state,unselected";
			source: "e";
			action: STATE_SET "default" 0.0;
			target: "menu_arrow";
		}
	}
}
group {
	name: "e/widgets/menu/default/separator";
	parts {

		part {
			name: "separator";
			type: IMAGE;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				min: 40 2;
				max: 9999 2;
				rel1 { 
					relative: 0.0 0.0; 
					offset: -4 4;
				}
				rel2 { 
					relative: 1.0 1.0; 
					offset: 3 -5;
				}
				image {
					normal: "images/menu_im1.png";
					border: 20 20 1 1;
				}
				color_class: "menu_base";
			}
		}
	}
}
group {
	name: "e/widgets/menu/default/check";
	parts {

		part {
			name: "base";
			type: IMAGE;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				min: 20 18;
				max: 20 18;
				//fixed: 1 1;
#if VISIBLE_MENU_TITLE == 0
				rel1 { 
					relative: 0.0 0.0; 
					offset: -1 1; 
				}
#else
#if VISIBLE_MENU_TITLE == 1
				rel1 { 
					relative: 0.0 0.0; 
					offset: 1 1; 
				}
#endif
#endif
				rel2 { 
					relative: 1.0 1.0; 
					offset: -2 -2; 
				}
				image {
					normal: "images/check_bt0.png";
				}
				color_class: "menu_base";
			}
		}

		part {
			name: "shadow";
			type: IMAGE;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				color: 255 255 255 192;
				image.normal: "images/check_bt4.png";
				rel1 { 
					to: "check";
					relative: 0.0 0.0; 
					offset: 1 -1; 
				}
				rel2 { 
					to: "check";
					relative: 1.0 1.0; 
					offset: -2 -2; 
				}
			} 
		}

		part {
			name: "check";
			type: IMAGE;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				min: 20 18;
				max: 20 18;
				//fixed: 1 1;
				rel1 { 
					relative: 0.0 0.0; 
					offset: -1 1; 
				}
				rel2 { 
					relative: 1.0 1.0; 
					offset: -2 -2; 
				}
				image {
					normal: "images/check_bt1.png";
				}
			}
			description {
				state: "visible" 0.0;
				inherit: "default" 0.0;
				image {
					normal: "images/check_bt2.png";
				}
			}
		}
  part { name: "events"; type: RECT;
     description { state: "default";
        color: 0 0 0 0;
     }
  }
	}
	programs {
		TOGGLE("check");
	}
}
group {
	name: "e/widgets/menu/default/radio";
	parts {

		part {
			name: "base";
			type: IMAGE;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				min: 20 18;
				max: 20 18;
				//fixed: 1 1;
				rel1 { 
					relative: 0.0 0.0; 
					offset: -1 1; 
				}
				rel2 { 
					relative: 1.0 1.0; 
					offset: -2 -2; 
				}
				image {
					normal: "images/radio_bt0.png";
				}
				color_class: "menu_base";
			}
			description {
				state: "disabled" 0.0;
				inherit: "default" 0.0;
				color: 255 255 255 128;
			}
		}

		part {
			name: "shadow";
			type: IMAGE;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				color: 255 255 255 192;
				image.normal: "images/radio_bt4.png";
				rel1 { 
					to: "radio";
					relative: 0.0 0.0; 
					offset: 0 1; 
				}
				rel2 { 
					to: "radio";
					relative: 1.0 1.0; 
					offset: -1 -1; 
				}
				fill {
					smooth: 1;
				}
			} 
		}

		part {
			name: "radio";
			type: IMAGE;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				min: 20 18;
				max: 20 18;
				//fixed: 1 1;
				rel1 { 
					relative: 0.0 0.0; 
					offset: -1 1; 
				}
				rel2 { 
					relative: 1.0 1.0; 
					offset: -2 -2; 
				}
				image {
					normal: "images/radio_bt1.png";
				}
			}
			description {
				state: "visible" 0.0;
				inherit: "default" 0.0;
				image {
					normal: "images/radio_bt2.png";
				}
			}
		}
  part { name: "events"; type: RECT;
     description { state: "default";
        color: 0 0 0 0;
     }
  }
	}
	programs {
		TOGGLE("radio");
	}
}
group {
	name: "e/widgets/menu/default/item_bg";
	alias: "e/widgets/menu/default/submenu_bg";
	parts {
  part { name: "bg"; type: RECT; mouse_events: 0;
     description { state: "default";
     }
  }
		part {
			name: "item_hilight";
   clip_to: "bg";
			description {
				state: "default" 0.0;
				image {
					normal: "images/menu_im2.png";
					border: 5 5 5 5;
					middle: SOLID;
				}
				visible: 0;
				rel1 { 
					relative: 0.0 0.0; 
					offset: -20 0;
				}
				rel2 { 
					relative: 1.0 1.0; 
					offset: 20 -1;
				}
				color_class: "focus";
			} 
			description {
				state: "visible" 0.0;
				inherit: "default" 0.0;
				visible: 1;
			}
		}

		part {
			name: "e.swallow.content";
			type: SWALLOW;
   clip_to: "bg";
			description {
				state: "default" 0.0;
				align: 0.0 0.0;
				rel1 { 
					relative: 0.0 0.0; 
					offset: 2 2; 
				}
				rel2 { 
					relative: 1.0 1.0; 
					offset: -1 -3;
				}
			} 
		}
  part { name: "events"; type: RECT;
     description { state: "default";
        color: 0 0 0 0;
     }
  }
	}
	programs {
		ITEM();
	}
}
group {
	name: "e/widgets/menu/default/label";
	parts {

		part {
			name: "e.text.label";
			type: TEXT;
			effect: TEXT_EFFECT;
			scale: 1;
			mouse_events: 0;
			description {
				state: "default" 0.0;
				rel1 { 
					relative: 0.0 0.0; 
					offset: 5 2; 
				}
				rel2 { 
					relative: 1.0 1.0; 
					offset: -10 -1; 
				}
				TEXT_COLOR;
				TEXT_NORMAL("menu_item", 0.0 0.5, 1 1);
				text.ellipsis: -1;
				color_class: "menu_item";
			}
			description {
				state: "active" 0.0;
				inherit: "default" 0.0;
				TEXT_COLOR_SELECTED;
				color_class: "menu_item_active";
			}
		}
  part { name: "events"; type: RECT;
     description { state: "default";
        color: 0 0 0 0;
     }
  }
	}
	programs {
		SELECT("go_passive", "e,state,unselected", "default", 0.0, LINEAR, 0.0, "e.text.label");
		SELECT("go_active", "e,state,selected", "active", 0.0, LINEAR, 0.0, "e.text.label");
	}
}
group {
	name: "e/widgets/menu/default/icon";
	parts {

		part {
			name: "clip";
			type: RECT;
			description {
				min: 10 10;
				state: "default" 0.0;
				color: 255 255 255 255;
			}
			description {
				state: "disabled" 0.0;
				color: 255 255 255 128;
			}
		}

		part {
			name: "e.swallow.content";
			type: SWALLOW;
			clip_to: "clip";
			description {
				state: "default" 0.0;
				min: 10 10;
				fixed: 1 1;
			}
		}
  part { name: "events"; type: RECT;
     description { state: "default";
        color: 0 0 0 0;
     }
  }
	}
	programs {
		program {
			name: "enable";
			/* enable */
			signal: "e,state,enable";
			source: "e";
			action: STATE_SET "default" 0.0;
			target: "clip";
		}
		program {
			name: "disable";
			/* disable */
			signal: "e,state,disable";
			source: "e";
			action: STATE_SET "disabled" 0.0;
			target: "clip";
		}
	}
}
